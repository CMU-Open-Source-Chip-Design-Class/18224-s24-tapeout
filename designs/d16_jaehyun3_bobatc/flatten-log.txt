
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.36+3 (git sha1 a53032104, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Running command `read_verilog -sv d16_jaehyun3_bobatc/src/toplevel_chip.v d16_jaehyun3_bobatc/src/chip.sv d16_jaehyun3_bobatc/src/Bob.v; synth -flatten -top toplevel_chip; setundef -undriven -zero; setundef -zero; async2sync; synth -top toplevel_chip; rename toplevel_chip d16_jaehyun3_bobatc; write_verilog -attr2comment d16_jaehyun3_bobatc/flattened.v; check; stat;' --

1. Executing Verilog-2005 frontend: d16_jaehyun3_bobatc/src/toplevel_chip.v
Parsing SystemVerilog input from `d16_jaehyun3_bobatc/src/toplevel_chip.v' to AST representation.
Generating RTLIL representation for module `\toplevel_chip'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: d16_jaehyun3_bobatc/src/chip.sv
Parsing SystemVerilog input from `d16_jaehyun3_bobatc/src/chip.sv' to AST representation.
Generating RTLIL representation for module `\my_chip'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: d16_jaehyun3_bobatc/src/Bob.v
Parsing SystemVerilog input from `d16_jaehyun3_bobatc/src/Bob.v' to AST representation.
Generating RTLIL representation for module `\BobTop'.
Generating RTLIL representation for module `\Bob'.
Generating RTLIL representation for module `\ReadRequestFsm'.
Generating RTLIL representation for module `\SendReplyFsm'.
Generating RTLIL representation for module `\FIFO'.
Generating RTLIL representation for module `\RunwayManager'.
Generating RTLIL representation for module `\AircraftIDManager'.
Generating RTLIL representation for module `\UartRX'.
Generating RTLIL representation for module `\UartRXFsm'.
Generating RTLIL representation for module `\UartTX'.
Generating RTLIL representation for module `\UartTXFsm'.
Generating RTLIL representation for module `\BaudRateGenerator'.
Successfully finished Verilog frontend.

4. Executing SYNTH pass.

4.1. Executing HIERARCHY pass (managing design hierarchy).

4.1.1. Analyzing design hierarchy..
Top module:  \toplevel_chip
Used module:     \my_chip
Used module:         \BobTop
Used module:             \Bob
Used module:                 \RunwayManager
Used module:                 \SendReplyFsm
Used module:                 \FIFO
Used module:                 \ReadRequestFsm
Used module:                 \AircraftIDManager
Used module:             \UartTX
Used module:                 \UartTXFsm
Used module:                 \BaudRateGenerator
Used module:             \UartRX
Used module:                 \UartRXFsm
Parameter \CLK_HZ = 25000000
Parameter \BAUD_RATE = 115200

4.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\UartTX'.
Parameter \CLK_HZ = 25000000
Parameter \BAUD_RATE = 115200
Generating RTLIL representation for module `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX'.
Parameter \CLK_HZ = 25000000
Parameter \BAUD_RATE = 115200

4.1.3. Executing AST frontend in derive mode using pre-parsed AST for module `\UartRX'.
Parameter \CLK_HZ = 25000000
Parameter \BAUD_RATE = 115200
Generating RTLIL representation for module `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX'.
Parameter \CLK_HZ = 25000000
Parameter \BAUD_RATE = 115200

4.1.4. Executing AST frontend in derive mode using pre-parsed AST for module `\BaudRateGenerator'.
Parameter \CLK_HZ = 25000000
Parameter \BAUD_RATE = 115200
Generating RTLIL representation for module `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator'.
Parameter \CLK_HZ = 25000000
Parameter \BAUD_RATE = 115200
Found cached RTLIL representation for module `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator'.
Parameter \WIDTH = 8
Parameter \DEPTH = 4

4.1.5. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO'.
Parameter \WIDTH = 8
Parameter \DEPTH = 4
Generating RTLIL representation for module `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO'.
Parameter \WIDTH = 4
Parameter \DEPTH = 8

4.1.6. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO'.
Parameter \WIDTH = 4
Parameter \DEPTH = 8
Generating RTLIL representation for module `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO'.
Parameter \WIDTH = 4
Parameter \DEPTH = 8
Found cached RTLIL representation for module `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO'.
Parameter \WIDTH = 8
Parameter \DEPTH = 4
Found cached RTLIL representation for module `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO'.

4.1.7. Analyzing design hierarchy..
Top module:  \toplevel_chip
Used module:     \my_chip
Used module:         \BobTop
Used module:             \Bob
Used module:                 \RunwayManager
Used module:                 \SendReplyFsm
Used module:                 $paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO
Used module:                 \ReadRequestFsm
Used module:                 \AircraftIDManager
Used module:                 $paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO
Used module:             $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX
Used module:                 \UartTXFsm
Used module:                 \BaudRateGenerator
Used module:             $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX
Used module:                 \UartRXFsm
Parameter \CLK_HZ = 25000000
Parameter \BAUD_RATE = 115200
Found cached RTLIL representation for module `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator'.
Parameter \CLK_HZ = 25000000
Parameter \BAUD_RATE = 115200
Found cached RTLIL representation for module `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator'.

4.1.8. Analyzing design hierarchy..
Top module:  \toplevel_chip
Used module:     \my_chip
Used module:         \BobTop
Used module:             \Bob
Used module:                 \RunwayManager
Used module:                 \SendReplyFsm
Used module:                 $paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO
Used module:                 \ReadRequestFsm
Used module:                 \AircraftIDManager
Used module:                 $paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO
Used module:             $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX
Used module:                 \UartTXFsm
Used module:                 $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator
Used module:             $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX
Used module:                 \UartRXFsm

4.1.9. Analyzing design hierarchy..
Top module:  \toplevel_chip
Used module:     \my_chip
Used module:         \BobTop
Used module:             \Bob
Used module:                 \RunwayManager
Used module:                 \SendReplyFsm
Used module:                 $paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO
Used module:                 \ReadRequestFsm
Used module:                 \AircraftIDManager
Used module:                 $paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO
Used module:             $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX
Used module:                 \UartTXFsm
Used module:                 $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator
Used module:             $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX
Used module:                 \UartRXFsm
Removing unused module `\BaudRateGenerator'.
Removing unused module `\UartTX'.
Removing unused module `\UartRX'.
Removing unused module `\FIFO'.
Removed 4 unused modules.

4.2. Executing PROC pass (convert processes to netlists).

4.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 4 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:1058$250 in module $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.
Marked 1 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:1051$247 in module $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.
Marked 2 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:1044$244 in module $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.
Marked 1 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:1036$240 in module $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.
Marked 4 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:722$354 in module $paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.
Marked 1 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:1175$234 in module UartTXFsm.
Removed 1 dead cases from process $proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232 in module UartTXFsm.
Marked 5 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232 in module UartTXFsm.
Marked 4 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:722$272 in module $paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.
Marked 1 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:994$219 in module UartRXFsm.
Removed 1 dead cases from process $proc$d16_jaehyun3_bobatc/src/Bob.v:937$207 in module UartRXFsm.
Marked 9 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:937$207 in module UartRXFsm.
Marked 3 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:1199$260 in module $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator.
Marked 3 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:837$153 in module AircraftIDManager.
Marked 1 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:815$151 in module AircraftIDManager.
Marked 4 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:770$137 in module RunwayManager.
Marked 1 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:889$255 in module $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.
Marked 1 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:881$251 in module $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.
Marked 1 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:690$52 in module SendReplyFsm.
Removed 1 dead cases from process $proc$d16_jaehyun3_bobatc/src/Bob.v:672$49 in module SendReplyFsm.
Marked 2 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:672$49 in module SendReplyFsm.
Marked 1 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:650$47 in module ReadRequestFsm.
Marked 1 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:645$46 in module ReadRequestFsm.
Removed 1 dead cases from process $proc$d16_jaehyun3_bobatc/src/Bob.v:421$8 in module ReadRequestFsm.
Marked 40 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:421$8 in module ReadRequestFsm.
Marked 2 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:322$6 in module Bob.
Marked 1 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:305$5 in module Bob.
Marked 8 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:239$3 in module Bob.
Marked 1 switch rules as full_case in process $proc$d16_jaehyun3_bobatc/src/Bob.v:185$2 in module Bob.
Removed a total of 4 dead cases.

4.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 6 redundant assignments.
Promoted 75 assignments to connections.

4.2.4. Executing PROC_INIT pass (extract init attributes).

4.2.5. Executing PROC_ARST pass (detect async resets in processes).

4.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~114 debug messages>

4.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1058$250'.
     1/1: $0\tx[0:0]
Creating decoders for process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1051$247'.
     1/1: $0\data_bit[0:0]
Creating decoders for process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1044$244'.
     1/1: $0\saved_data[7:0]
Creating decoders for process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1036$240'.
     1/1: $0\data_counter[3:0]
Creating decoders for process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
     1/26: $4$lookahead\queue$353[31:0]$412
     2/26: $4$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:741$349[31:0]$410
     3/26: $4$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:741$348[31:0]$409
     4/26: $4$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:741$350[31:0]$411
     5/26: $3$lookahead\queue$353[31:0]$401
     6/26: $3$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:741$350[31:0]$400
     7/26: $3$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:741$349[31:0]$399
     8/26: $3$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:741$348[31:0]$398
     9/26: $2$lookahead\queue$353[31:0]$378
    10/26: $2$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:732$346[31:0]$373
    11/26: $2$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:732$345[31:0]$372
    12/26: $2$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:732$347[31:0]$374
    13/26: $2$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:741$350[31:0]$377
    14/26: $2$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:741$349[31:0]$376
    15/26: $2$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:741$348[31:0]$375
    16/26: $1$lookahead\queue$353[31:0]$368
    17/26: $1$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:741$350[31:0]$367
    18/26: $1$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:741$349[31:0]$366
    19/26: $1$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:741$348[31:0]$365
    20/26: $1$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:732$347[31:0]$364
    21/26: $1$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:732$346[31:0]$363
    22/26: $1$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:732$345[31:0]$362
    23/26: $0\get_ptr[2:0]
    24/26: $0\put_ptr[2:0]
    25/26: $0\count[3:0]
    26/26: $0\data_out[3:0]
Creating decoders for process `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1175$234'.
     1/1: $0\state[1:0]
Creating decoders for process `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232'.
     1/25: $3\ready[0:0]
     2/25: $5\next_state[1:0]
     3/25: $3\send_stop_bit[0:0]
     4/25: $2\clear_data_counter[0:0]
     5/25: $2\send_stop_bit[0:0]
     6/25: $4\next_state[1:0]
     7/25: $3\send_data[0:0]
     8/25: $3\en_data_counter[0:0]
     9/25: $2\en_data_counter[0:0]
    10/25: $2\send_data[0:0]
    11/25: $3\next_state[1:0]
    12/25: $3\send_start_bit[0:0]
    13/25: $2\send_start_bit[0:0]
    14/25: $2\start[0:0]
    15/25: $2\next_state[1:0]
    16/25: $2\ready[0:0]
    17/25: $1\send_start_bit[0:0]
    18/25: $1\start[0:0]
    19/25: $1\next_state[1:0]
    20/25: $1\ready[0:0]
    21/25: $1\send_stop_bit[0:0]
    22/25: $1\send_data[0:0]
    23/25: $1\clear_data_counter[0:0]
    24/25: $1\en_data_counter[0:0]
    25/25: $1\sending[0:0]
Creating decoders for process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
     1/26: $4$lookahead\queue$271[31:0]$330
     2/26: $4$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:741$267[31:0]$328
     3/26: $4$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:741$266[31:0]$327
     4/26: $4$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:741$268[31:0]$329
     5/26: $3$lookahead\queue$271[31:0]$319
     6/26: $3$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:741$268[31:0]$318
     7/26: $3$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:741$267[31:0]$317
     8/26: $3$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:741$266[31:0]$316
     9/26: $2$lookahead\queue$271[31:0]$296
    10/26: $2$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:732$264[31:0]$291
    11/26: $2$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:732$263[31:0]$290
    12/26: $2$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:732$265[31:0]$292
    13/26: $2$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:741$268[31:0]$295
    14/26: $2$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:741$267[31:0]$294
    15/26: $2$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:741$266[31:0]$293
    16/26: $1$lookahead\queue$271[31:0]$286
    17/26: $1$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:741$268[31:0]$285
    18/26: $1$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:741$267[31:0]$284
    19/26: $1$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:741$266[31:0]$283
    20/26: $1$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:732$265[31:0]$282
    21/26: $1$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:732$264[31:0]$281
    22/26: $1$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:732$263[31:0]$280
    23/26: $0\get_ptr[1:0]
    24/26: $0\put_ptr[1:0]
    25/26: $0\count[2:0]
    26/26: $0\data_out[7:0]
Creating decoders for process `\UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:994$219'.
     1/1: $0\state[1:0]
Creating decoders for process `\UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:937$207'.
     1/29: $9\next_state[1:0]
     2/29: $5\clear_data_counter[0:0]
     3/29: $8\next_state[1:0]
     4/29: $4\framing_error[0:0]
     5/29: $7\next_state[1:0]
     6/29: $4\clear_data_counter[0:0]
     7/29: $4\done[0:0]
     8/29: $3\clear_data_counter[0:0]
     9/29: $6\next_state[1:0]
    10/29: $3\done[0:0]
    11/29: $3\framing_error[0:0]
    12/29: $2\en_data_counter[0:0]
    13/29: $2\collect_data[0:0]
    14/29: $5\next_state[1:0]
    15/29: $2\clear_data_counter[0:0]
    16/29: $2\done[0:0]
    17/29: $2\framing_error[0:0]
    18/29: $4\next_state[1:0]
    19/29: $3\next_state[1:0]
    20/29: $2\start[0:0]
    21/29: $2\next_state[1:0]
    22/29: $1\start[0:0]
    23/29: $1\next_state[1:0]
    24/29: $1\clear_data_counter[0:0]
    25/29: $1\en_data_counter[0:0]
    26/29: $1\collect_data[0:0]
    27/29: $1\done[0:0]
    28/29: $1\receiving[0:0]
    29/29: $1\framing_error[0:0]
Creating decoders for process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator.$proc$d16_jaehyun3_bobatc/src/Bob.v:1199$260'.
     1/1: $0\clockCount[9:0]
Creating decoders for process `\AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:837$153'.
     1/18: $3$lookahead\taken_id$152[15:0]$189
     2/18: $3$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:843$148[15:0]$187
     3/18: $3$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:843$147[15:0]$186
     4/18: $3$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:843$149[3:0]$188
     5/18: $2$lookahead\taken_id$152[15:0]$174
     6/18: $2$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:841$145[15:0]$169
     7/18: $2$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:841$144[15:0]$168
     8/18: $2$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:841$146[3:0]$170
     9/18: $2$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:843$149[3:0]$173
    10/18: $2$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:843$148[15:0]$172
    11/18: $2$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:843$147[15:0]$171
    12/18: $1$lookahead\taken_id$152[15:0]$167
    13/18: $1$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:843$149[3:0]$166
    14/18: $1$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:843$148[15:0]$165
    15/18: $1$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:843$147[15:0]$164
    16/18: $1$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:841$146[3:0]$163
    17/18: $1$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:841$145[15:0]$162
    18/18: $1$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:841$144[15:0]$161
Creating decoders for process `\AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:815$151'.
     1/1: $1\id_avail[3:0]
Creating decoders for process `\RunwayManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:770$137'.
     1/4: $0\runway[9:0] [4:1]
     2/4: $0\runway[9:0] [0]
     3/4: $0\runway[9:0] [5]
     4/4: $0\runway[9:0] [9:6]
Creating decoders for process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.$proc$d16_jaehyun3_bobatc/src/Bob.v:889$255'.
     1/1: $0\data_counter[3:0]
Creating decoders for process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.$proc$d16_jaehyun3_bobatc/src/Bob.v:881$251'.
     1/2: $0\data[7:0] [7]
     2/2: $0\data[7:0] [6:0]
Creating decoders for process `\SendReplyFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:690$52'.
     1/1: $0\state[0:0]
Creating decoders for process `\SendReplyFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:672$49'.
     1/5: $2\next_state[0:0]
     2/5: $2\send_reply[0:0]
     3/5: $1\next_state[0:0]
     4/5: $1\send_reply[0:0]
     5/5: $1\uart_tx_send[0:0]
Creating decoders for process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:650$47'.
     1/1: $0\takeoff_first[0:0]
Creating decoders for process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:645$46'.
     1/1: $0\state[2:0]
Creating decoders for process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
     1/173: $5\send_clear[1:0]
     2/173: $5\lock[0:0]
     3/173: $10\runway_id[0:0]
     4/173: $4\send_clear[1:0]
     5/173: $4\lock[0:0]
     6/173: $9\runway_id[0:0]
     7/173: $3\send_clear[1:0]
     8/173: $3\lock[0:0]
     9/173: $8\runway_id[0:0]
    10/173: $2\send_clear[1:0]
    11/173: $2\lock[0:0]
    12/173: $7\runway_id[0:0]
    13/173: $21\unqueue_landing_plane[0:0]
    14/173: $26\next_state[2:0]
    15/173: $12\unqueue_takeoff_plane[0:0]
    16/173: $25\next_state[2:0]
    17/173: $20\unqueue_landing_plane[0:0]
    18/173: $5\reverse_takeoff_first[0:0]
    19/173: $11\unqueue_takeoff_plane[0:0]
    20/173: $24\next_state[2:0]
    21/173: $19\unqueue_landing_plane[0:0]
    22/173: $23\next_state[2:0]
    23/173: $4\reverse_takeoff_first[0:0]
    24/173: $18\unqueue_landing_plane[0:0]
    25/173: $10\unqueue_takeoff_plane[0:0]
    26/173: $22\next_state[2:0]
    27/173: $3\reverse_takeoff_first[0:0]
    28/173: $17\unqueue_landing_plane[0:0]
    29/173: $9\unqueue_takeoff_plane[0:0]
    30/173: $16\unqueue_landing_plane[0:0]
    31/173: $21\next_state[2:0]
    32/173: $20\next_state[2:0]
    33/173: $15\unqueue_landing_plane[0:0]
    34/173: $2\reverse_takeoff_first[0:0]
    35/173: $8\unqueue_takeoff_plane[0:0]
    36/173: $19\next_state[2:0]
    37/173: $2\queue_reply[0:0]
    38/173: $6\send_invalid_id[0:0]
    39/173: $6\take_id[0:0]
    40/173: $6\send_valid_id[0:0]
    41/173: $5\take_id[0:0]
    42/173: $5\send_invalid_id[0:0]
    43/173: $5\send_valid_id[0:0]
    44/173: $18\next_state[2:0]
    45/173: $5\send_say_ag[0:0]
    46/173: $7\unset_emergency[0:0]
    47/173: $16\release_id[0:0]
    48/173: $6\unset_emergency[0:0]
    49/173: $17\next_state[2:0]
    50/173: $14\unqueue_landing_plane[0:0]
    51/173: $16\next_state[2:0]
    52/173: $5\set_emergency[0:0]
    53/173: $15\next_state[2:0]
    54/173: $13\unqueue_landing_plane[0:0]
    55/173: $15\release_id[0:0]
    56/173: $5\unset_emergency[0:0]
    57/173: $14\next_state[2:0]
    58/173: $14\release_id[0:0]
    59/173: $4\unset_emergency[0:0]
    60/173: $4\set_emergency[0:0]
    61/173: $12\unqueue_landing_plane[0:0]
    62/173: $4\take_id[0:0]
    63/173: $4\send_invalid_id[0:0]
    64/173: $4\send_valid_id[0:0]
    65/173: $4\send_say_ag[0:0]
    66/173: $13\release_id[0:0]
    67/173: $6\runway_id[0:0]
    68/173: $6\unlock[0:0]
    69/173: $12\release_id[0:0]
    70/173: $11\release_id[0:0]
    71/173: $5\runway_id[0:0]
    72/173: $5\unlock[0:0]
    73/173: $10\release_id[0:0]
    74/173: $9\release_id[0:0]
    75/173: $4\unlock[0:0]
    76/173: $4\runway_id[0:0]
    77/173: $13\next_state[2:0]
    78/173: $12\next_state[2:0]
    79/173: $8\release_id[0:0]
    80/173: $3\unlock[0:0]
    81/173: $3\runway_id[0:0]
    82/173: $3\take_id[0:0]
    83/173: $3\unset_emergency[0:0]
    84/173: $3\set_emergency[0:0]
    85/173: $3\send_invalid_id[0:0]
    86/173: $3\send_valid_id[0:0]
    87/173: $3\send_say_ag[0:0]
    88/173: $11\unqueue_landing_plane[0:0]
    89/173: $7\release_id[0:0]
    90/173: $7\send_divert[0:0]
    91/173: $7\send_hold[0:0]
    92/173: $6\queue_landing_plane[0:0]
    93/173: $6\release_id[0:0]
    94/173: $6\send_divert[0:0]
    95/173: $6\send_hold[0:0]
    96/173: $5\queue_landing_plane[0:0]
    97/173: $5\release_id[0:0]
    98/173: $5\send_divert[0:0]
    99/173: $5\send_hold[0:0]
   100/173: $5\queue_takeoff_plane[0:0]
   101/173: $4\release_id[0:0]
   102/173: $4\send_divert[0:0]
   103/173: $4\send_hold[0:0]
   104/173: $4\queue_takeoff_plane[0:0]
   105/173: $4\queue_landing_plane[0:0]
   106/173: $3\release_id[0:0]
   107/173: $3\send_divert[0:0]
   108/173: $3\send_hold[0:0]
   109/173: $3\queue_landing_plane[0:0]
   110/173: $3\queue_takeoff_plane[0:0]
   111/173: $11\next_state[2:0]
   112/173: $10\next_state[2:0]
   113/173: $2\release_id[0:0]
   114/173: $2\send_divert[0:0]
   115/173: $2\send_hold[0:0]
   116/173: $2\queue_landing_plane[0:0]
   117/173: $2\queue_takeoff_plane[0:0]
   118/173: $2\take_id[0:0]
   119/173: $2\unset_emergency[0:0]
   120/173: $2\set_emergency[0:0]
   121/173: $2\send_invalid_id[0:0]
   122/173: $2\send_valid_id[0:0]
   123/173: $2\send_say_ag[0:0]
   124/173: $10\unqueue_landing_plane[0:0]
   125/173: $2\unlock[0:0]
   126/173: $2\runway_id[0:0]
   127/173: $9\unqueue_landing_plane[0:0]
   128/173: $9\next_state[2:0]
   129/173: $7\unqueue_takeoff_plane[0:0]
   130/173: $8\next_state[2:0]
   131/173: $8\unqueue_landing_plane[0:0]
   132/173: $6\unqueue_takeoff_plane[0:0]
   133/173: $7\next_state[2:0]
   134/173: $7\unqueue_landing_plane[0:0]
   135/173: $6\next_state[2:0]
   136/173: $6\unqueue_landing_plane[0:0]
   137/173: $5\unqueue_takeoff_plane[0:0]
   138/173: $5\next_state[2:0]
   139/173: $5\unqueue_landing_plane[0:0]
   140/173: $4\unqueue_takeoff_plane[0:0]
   141/173: $4\unqueue_landing_plane[0:0]
   142/173: $4\next_state[2:0]
   143/173: $3\next_state[2:0]
   144/173: $3\unqueue_landing_plane[0:0]
   145/173: $3\unqueue_takeoff_plane[0:0]
   146/173: $2\next_state[2:0]
   147/173: $2\unqueue_landing_plane[0:0]
   148/173: $2\unqueue_takeoff_plane[0:0]
   149/173: $2\uart_rd_request[0:0]
   150/173: $1\next_state[2:0]
   151/173: $1\unqueue_landing_plane[0:0]
   152/173: $1\unqueue_takeoff_plane[0:0]
   153/173: $1\uart_rd_request[0:0]
   154/173: $1\reverse_takeoff_first[0:0]
   155/173: $1\release_id[0:0]
   156/173: $1\take_id[0:0]
   157/173: $1\sel_diverted_id[0:0]
   158/173: $1\unset_emergency[0:0]
   159/173: $1\set_emergency[0:0]
   160/173: $1\queue_reply[0:0]
   161/173: $1\send_clear[1:0]
   162/173: $1\send_invalid_id[0:0]
   163/173: $1\send_valid_id[0:0]
   164/173: $1\send_divert_landing[0:0]
   165/173: $1\send_divert[0:0]
   166/173: $1\send_say_ag[0:0]
   167/173: $1\send_hold[0:0]
   168/173: $1\queue_landing_plane[0:0]
   169/173: $1\queue_takeoff_plane[0:0]
   170/173: $1\sel_takeoff_id_lock[0:0]
   171/173: $1\unlock[0:0]
   172/173: $1\lock[0:0]
   173/173: $1\runway_id[0:0]
Creating decoders for process `\Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:322$6'.
     1/2: $0\emergency_id[3:0]
     2/2: $0\emergency[0:0]
Creating decoders for process `\Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:305$5'.
     1/1: $1\cleared_id_to_lock[3:0]
Creating decoders for process `\Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:239$3'.
     1/3: $0\reply_to_send[7:0] [3:1]
     2/3: $0\reply_to_send[7:0] [0]
     3/3: $0\reply_to_send[7:0] [7:4]
Creating decoders for process `\Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:185$2'.
     1/1: $1\id_in[3:0]
Creating decoders for process `\BobTop.$proc$d16_jaehyun3_bobatc/src/Bob.v:60$1'.

4.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\UartTXFsm.\sending' from process `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232'.
No latch inferred for signal `\UartTXFsm.\ready' from process `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232'.
No latch inferred for signal `\UartTXFsm.\next_state' from process `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232'.
No latch inferred for signal `\UartTXFsm.\start' from process `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232'.
No latch inferred for signal `\UartTXFsm.\en_data_counter' from process `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232'.
No latch inferred for signal `\UartTXFsm.\clear_data_counter' from process `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232'.
No latch inferred for signal `\UartTXFsm.\send_data' from process `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232'.
No latch inferred for signal `\UartTXFsm.\send_start_bit' from process `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232'.
No latch inferred for signal `\UartTXFsm.\send_stop_bit' from process `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232'.
No latch inferred for signal `\UartRXFsm.\framing_error' from process `\UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:937$207'.
No latch inferred for signal `\UartRXFsm.\receiving' from process `\UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:937$207'.
No latch inferred for signal `\UartRXFsm.\done' from process `\UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:937$207'.
No latch inferred for signal `\UartRXFsm.\next_state' from process `\UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:937$207'.
No latch inferred for signal `\UartRXFsm.\start' from process `\UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:937$207'.
No latch inferred for signal `\UartRXFsm.\collect_data' from process `\UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:937$207'.
No latch inferred for signal `\UartRXFsm.\en_data_counter' from process `\UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:937$207'.
No latch inferred for signal `\UartRXFsm.\clear_data_counter' from process `\UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:937$207'.
No latch inferred for signal `\AircraftIDManager.\id_avail' from process `\AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:815$151'.
No latch inferred for signal `\SendReplyFsm.\uart_tx_send' from process `\SendReplyFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:672$49'.
No latch inferred for signal `\SendReplyFsm.\send_reply' from process `\SendReplyFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:672$49'.
No latch inferred for signal `\SendReplyFsm.\next_state' from process `\SendReplyFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:672$49'.
No latch inferred for signal `\ReadRequestFsm.\uart_rd_request' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\runway_id' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\lock' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\unlock' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\sel_takeoff_id_lock' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\queue_takeoff_plane' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\unqueue_takeoff_plane' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\queue_landing_plane' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\unqueue_landing_plane' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\send_hold' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\send_say_ag' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\send_divert' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\send_divert_landing' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\send_valid_id' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\send_invalid_id' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\send_clear' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\queue_reply' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\set_emergency' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\unset_emergency' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\sel_diverted_id' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\take_id' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\release_id' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\reverse_takeoff_first' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\ReadRequestFsm.\next_state' from process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
No latch inferred for signal `\Bob.\cleared_id_to_lock' from process `\Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:305$5'.
No latch inferred for signal `\Bob.\id_in' from process `\Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:185$2'.

4.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.\tx' using process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1058$250'.
  created $dff cell `$procdff$4213' with positive edge clock.
Creating register for signal `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.\data_bit' using process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1051$247'.
  created $dff cell `$procdff$4214' with positive edge clock.
Creating register for signal `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.\saved_data' using process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1044$244'.
  created $dff cell `$procdff$4215' with positive edge clock.
Creating register for signal `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.\data_counter' using process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1036$240'.
  created $dff cell `$procdff$4216' with positive edge clock.
Creating register for signal `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.\data_out' using process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
  created $dff cell `$procdff$4217' with positive edge clock.
Creating register for signal `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.\queue' using process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
  created $dff cell `$procdff$4218' with positive edge clock.
Creating register for signal `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.\count' using process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
  created $dff cell `$procdff$4219' with positive edge clock.
Creating register for signal `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.\put_ptr' using process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
  created $dff cell `$procdff$4220' with positive edge clock.
Creating register for signal `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.\get_ptr' using process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
  created $dff cell `$procdff$4221' with positive edge clock.
Creating register for signal `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:732$345' using process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
  created $dff cell `$procdff$4222' with positive edge clock.
Creating register for signal `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:732$346' using process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
  created $dff cell `$procdff$4223' with positive edge clock.
Creating register for signal `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:732$347' using process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
  created $dff cell `$procdff$4224' with positive edge clock.
Creating register for signal `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:741$348' using process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
  created $dff cell `$procdff$4225' with positive edge clock.
Creating register for signal `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:741$349' using process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
  created $dff cell `$procdff$4226' with positive edge clock.
Creating register for signal `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:741$350' using process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
  created $dff cell `$procdff$4227' with positive edge clock.
Creating register for signal `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$lookahead\queue$353' using process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
  created $dff cell `$procdff$4228' with positive edge clock.
Creating register for signal `\UartTXFsm.\state' using process `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1175$234'.
  created $dff cell `$procdff$4229' with positive edge clock.
Creating register for signal `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.\data_out' using process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
  created $dff cell `$procdff$4230' with positive edge clock.
Creating register for signal `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.\queue' using process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
  created $dff cell `$procdff$4231' with positive edge clock.
Creating register for signal `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.\count' using process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
  created $dff cell `$procdff$4232' with positive edge clock.
Creating register for signal `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.\put_ptr' using process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
  created $dff cell `$procdff$4233' with positive edge clock.
Creating register for signal `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.\get_ptr' using process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
  created $dff cell `$procdff$4234' with positive edge clock.
Creating register for signal `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:732$263' using process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
  created $dff cell `$procdff$4235' with positive edge clock.
Creating register for signal `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:732$264' using process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
  created $dff cell `$procdff$4236' with positive edge clock.
Creating register for signal `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:732$265' using process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
  created $dff cell `$procdff$4237' with positive edge clock.
Creating register for signal `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:741$266' using process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
  created $dff cell `$procdff$4238' with positive edge clock.
Creating register for signal `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:741$267' using process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
  created $dff cell `$procdff$4239' with positive edge clock.
Creating register for signal `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:741$268' using process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
  created $dff cell `$procdff$4240' with positive edge clock.
Creating register for signal `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$lookahead\queue$271' using process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
  created $dff cell `$procdff$4241' with positive edge clock.
Creating register for signal `\UartRXFsm.\state' using process `\UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:994$219'.
  created $dff cell `$procdff$4242' with positive edge clock.
Creating register for signal `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator.\clockCount' using process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator.$proc$d16_jaehyun3_bobatc/src/Bob.v:1199$260'.
  created $dff cell `$procdff$4243' with positive edge clock.
Creating register for signal `\AircraftIDManager.\taken_id' using process `\AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:837$153'.
  created $dff cell `$procdff$4244' with positive edge clock.
Creating register for signal `\AircraftIDManager.$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:841$144' using process `\AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:837$153'.
  created $dff cell `$procdff$4245' with positive edge clock.
Creating register for signal `\AircraftIDManager.$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:841$145' using process `\AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:837$153'.
  created $dff cell `$procdff$4246' with positive edge clock.
Creating register for signal `\AircraftIDManager.$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:841$146' using process `\AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:837$153'.
  created $dff cell `$procdff$4247' with positive edge clock.
Creating register for signal `\AircraftIDManager.$bitselwrite$mask$d16_jaehyun3_bobatc/src/Bob.v:843$147' using process `\AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:837$153'.
  created $dff cell `$procdff$4248' with positive edge clock.
Creating register for signal `\AircraftIDManager.$bitselwrite$data$d16_jaehyun3_bobatc/src/Bob.v:843$148' using process `\AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:837$153'.
  created $dff cell `$procdff$4249' with positive edge clock.
Creating register for signal `\AircraftIDManager.$bitselwrite$sel$d16_jaehyun3_bobatc/src/Bob.v:843$149' using process `\AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:837$153'.
  created $dff cell `$procdff$4250' with positive edge clock.
Creating register for signal `\AircraftIDManager.$lookahead\taken_id$152' using process `\AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:837$153'.
  created $dff cell `$procdff$4251' with positive edge clock.
Creating register for signal `\RunwayManager.\runway' using process `\RunwayManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:770$137'.
  created $dff cell `$procdff$4252' with positive edge clock.
Creating register for signal `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.\data_counter' using process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.$proc$d16_jaehyun3_bobatc/src/Bob.v:889$255'.
  created $dff cell `$procdff$4253' with positive edge clock.
Creating register for signal `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.\data' using process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.$proc$d16_jaehyun3_bobatc/src/Bob.v:881$251'.
  created $dff cell `$procdff$4254' with positive edge clock.
Creating register for signal `\SendReplyFsm.\state' using process `\SendReplyFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:690$52'.
  created $dff cell `$procdff$4255' with positive edge clock.
Creating register for signal `\ReadRequestFsm.\takeoff_first' using process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:650$47'.
  created $dff cell `$procdff$4256' with positive edge clock.
Creating register for signal `\ReadRequestFsm.\state' using process `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:645$46'.
  created $dff cell `$procdff$4257' with positive edge clock.
Creating register for signal `\Bob.\emergency' using process `\Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:322$6'.
  created $dff cell `$procdff$4258' with positive edge clock.
Creating register for signal `\Bob.\emergency_id' using process `\Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:322$6'.
  created $dff cell `$procdff$4259' with positive edge clock.
Creating register for signal `\Bob.\reply_to_send' using process `\Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:239$3'.
  created $dff cell `$procdff$4260' with positive edge clock.
Creating register for signal `\BobTop.\ro_temp' using process `\BobTop.$proc$d16_jaehyun3_bobatc/src/Bob.v:60$1'.
  created $dff cell `$procdff$4261' with positive edge clock.
Creating register for signal `\BobTop.\ro_sync' using process `\BobTop.$proc$d16_jaehyun3_bobatc/src/Bob.v:60$1'.
  created $dff cell `$procdff$4262' with positive edge clock.
Creating register for signal `\BobTop.\eo_temp' using process `\BobTop.$proc$d16_jaehyun3_bobatc/src/Bob.v:60$1'.
  created $dff cell `$procdff$4263' with positive edge clock.
Creating register for signal `\BobTop.\eo_sync' using process `\BobTop.$proc$d16_jaehyun3_bobatc/src/Bob.v:60$1'.
  created $dff cell `$procdff$4264' with positive edge clock.

4.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 4 empty switches in `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1058$250'.
Removing empty process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1058$250'.
Found and cleaned up 2 empty switches in `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1051$247'.
Removing empty process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1051$247'.
Found and cleaned up 3 empty switches in `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1044$244'.
Removing empty process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1044$244'.
Found and cleaned up 2 empty switches in `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1036$240'.
Removing empty process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.$proc$d16_jaehyun3_bobatc/src/Bob.v:1036$240'.
Found and cleaned up 4 empty switches in `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
Removing empty process `$paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$354'.
Found and cleaned up 1 empty switch in `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1175$234'.
Removing empty process `UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1175$234'.
Found and cleaned up 5 empty switches in `\UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232'.
Removing empty process `UartTXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:1115$232'.
Found and cleaned up 4 empty switches in `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
Removing empty process `$paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.$proc$d16_jaehyun3_bobatc/src/Bob.v:722$272'.
Found and cleaned up 1 empty switch in `\UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:994$219'.
Removing empty process `UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:994$219'.
Found and cleaned up 9 empty switches in `\UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:937$207'.
Removing empty process `UartRXFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:937$207'.
Found and cleaned up 3 empty switches in `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator.$proc$d16_jaehyun3_bobatc/src/Bob.v:1199$260'.
Removing empty process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator.$proc$d16_jaehyun3_bobatc/src/Bob.v:1199$260'.
Found and cleaned up 3 empty switches in `\AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:837$153'.
Removing empty process `AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:837$153'.
Found and cleaned up 1 empty switch in `\AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:815$151'.
Removing empty process `AircraftIDManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:815$151'.
Found and cleaned up 7 empty switches in `\RunwayManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:770$137'.
Removing empty process `RunwayManager.$proc$d16_jaehyun3_bobatc/src/Bob.v:770$137'.
Found and cleaned up 2 empty switches in `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.$proc$d16_jaehyun3_bobatc/src/Bob.v:889$255'.
Removing empty process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.$proc$d16_jaehyun3_bobatc/src/Bob.v:889$255'.
Found and cleaned up 2 empty switches in `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.$proc$d16_jaehyun3_bobatc/src/Bob.v:881$251'.
Removing empty process `$paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.$proc$d16_jaehyun3_bobatc/src/Bob.v:881$251'.
Found and cleaned up 1 empty switch in `\SendReplyFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:690$52'.
Removing empty process `SendReplyFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:690$52'.
Found and cleaned up 2 empty switches in `\SendReplyFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:672$49'.
Removing empty process `SendReplyFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:672$49'.
Found and cleaned up 2 empty switches in `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:650$47'.
Removing empty process `ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:650$47'.
Found and cleaned up 1 empty switch in `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:645$46'.
Removing empty process `ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:645$46'.
Found and cleaned up 40 empty switches in `\ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
Removing empty process `ReadRequestFsm.$proc$d16_jaehyun3_bobatc/src/Bob.v:421$8'.
Found and cleaned up 3 empty switches in `\Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:322$6'.
Removing empty process `Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:322$6'.
Found and cleaned up 1 empty switch in `\Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:305$5'.
Removing empty process `Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:305$5'.
Found and cleaned up 10 empty switches in `\Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:239$3'.
Removing empty process `Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:239$3'.
Found and cleaned up 1 empty switch in `\Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:185$2'.
Removing empty process `Bob.$proc$d16_jaehyun3_bobatc/src/Bob.v:185$2'.
Removing empty process `BobTop.$proc$d16_jaehyun3_bobatc/src/Bob.v:60$1'.
Cleaned up 114 empty switches.

4.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.
<suppressed ~1 debug messages>
Optimizing module $paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.
<suppressed ~3 debug messages>
Optimizing module UartTXFsm.
<suppressed ~13 debug messages>
Optimizing module $paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.
<suppressed ~3 debug messages>
Optimizing module UartRXFsm.
<suppressed ~16 debug messages>
Optimizing module $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator.
Optimizing module AircraftIDManager.
<suppressed ~32 debug messages>
Optimizing module RunwayManager.
Optimizing module $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.
<suppressed ~1 debug messages>
Optimizing module SendReplyFsm.
<suppressed ~7 debug messages>
Optimizing module ReadRequestFsm.
<suppressed ~89 debug messages>
Optimizing module Bob.
Optimizing module BobTop.
Optimizing module my_chip.
Optimizing module toplevel_chip.

4.3. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartTX.
Deleting now unused module $paramod$b34f72cc7979fbb056f6ba5a15366349495ea98c\FIFO.
Deleting now unused module UartTXFsm.
Deleting now unused module $paramod$c76342faba2795bb9f7122edda48f204b1464422\FIFO.
Deleting now unused module UartRXFsm.
Deleting now unused module $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\BaudRateGenerator.
Deleting now unused module AircraftIDManager.
Deleting now unused module RunwayManager.
Deleting now unused module $paramod$9c8dfda4de3ea2584fccb29c9e3f55cedc709690\UartRX.
Deleting now unused module SendReplyFsm.
Deleting now unused module ReadRequestFsm.
Deleting now unused module Bob.
Deleting now unused module BobTop.
Deleting now unused module my_chip.
<suppressed ~17 debug messages>

4.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~70 debug messages>

4.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 260 unused cells and 1723 unused wires.
<suppressed ~297 debug messages>

4.6. Executing CHECK pass (checking for obvious problems).
Checking module toplevel_chip...
Warning: Wire toplevel_chip.\io_out [11] is used but has no driver.
Warning: Wire toplevel_chip.\io_out [10] is used but has no driver.
Warning: Wire toplevel_chip.\io_out [9] is used but has no driver.
Warning: Wire toplevel_chip.\io_out [8] is used but has no driver.
Warning: Wire toplevel_chip.\io_out [7] is used but has no driver.
Found and reported 5 problems.

4.7. Executing OPT pass (performing simple optimizations).

4.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~2 debug messages>

4.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~1482 debug messages>
Removed a total of 494 cells.

4.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2789.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2791.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1465.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2803.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2805.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1467.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2817.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2819.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2831.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2833.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2845.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2847.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1474.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2859.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2861.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2875.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2878.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2880.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2882.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2884.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2898.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2901.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2903.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2905.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2907.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1481.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2921.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2924.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2926.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2928.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2930.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2944.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2947.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2949.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2951.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2953.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2967.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2969.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2971.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2973.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1488.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2987.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2989.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2991.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2993.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3007.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3009.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3011.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3013.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3027.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3029.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3031.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3033.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1497.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3047.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3049.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3051.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3053.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1499.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3067.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3069.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3071.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3073.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3087.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3089.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3091.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3093.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3107.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3109.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3111.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3113.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1508.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3126.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3128.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3130.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1510.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3143.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3145.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3147.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3160.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3162.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3164.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3177.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3179.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3181.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1519.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3194.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3196.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3198.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1521.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3210.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3212.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3224.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3226.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3238.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3240.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1529.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3252.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3254.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3266.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3268.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3280.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3282.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1537.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3293.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3304.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3315.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1545.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3326.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3337.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3348.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1556.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3359.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1559.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3370.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1561.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3381.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1564.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3392.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1566.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3403.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3414.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3425.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1577.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3436.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1580.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3447.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1582.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3462.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3465.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3467.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3470.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3472.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3474.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3489.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3492.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3494.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3497.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3499.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3501.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1585.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3516.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3518.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3521.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3523.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3525.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1587.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3540.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3542.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3545.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3547.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3549.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3564.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3566.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3569.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3571.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3573.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3588.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3590.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3593.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3595.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3597.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1598.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3612.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3614.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3617.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3619.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3621.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1600.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3636.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3638.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3641.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3643.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3645.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1603.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3659.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3662.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3664.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3666.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1605.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3680.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3683.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3685.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3687.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3701.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3704.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3706.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3708.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3722.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3724.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3726.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1616.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3740.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3742.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3744.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1618.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3758.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3760.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3762.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1621.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3776.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3778.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3780.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1623.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3794.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3796.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3798.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3811.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3813.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3826.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3828.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1634.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3841.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3843.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1636.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3855.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1639.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3867.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1641.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3879.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$3891.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1651.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1653.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1656.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1658.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1669.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1671.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1674.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1676.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1687.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1689.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1692.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1694.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1705.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1707.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1710.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1712.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1722.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1725.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1727.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1737.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1740.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1742.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1752.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1755.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1757.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1767.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1770.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1772.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1782.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1784.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1794.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1796.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1806.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1808.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1818.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1820.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1830.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1832.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1842.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1844.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1853.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1862.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1871.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1880.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1890.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1900.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1912.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1915.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1918.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1921.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1923.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1935.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1938.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1941.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1944.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1946.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1958.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1961.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1964.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1967.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1969.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1981.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1984.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1987.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1989.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2001.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2004.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2007.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2009.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2021.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2024.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2027.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2029.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2040.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2043.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2046.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2048.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2060.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2063.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2066.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2068.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2081.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2084.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2086.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2089.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2092.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2094.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2107.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2109.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2112.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2115.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2117.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2130.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2132.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2135.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2138.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2140.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2153.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2155.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2158.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2161.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2163.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2176.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2178.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2181.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2184.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2186.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2199.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2201.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2204.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2207.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2209.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2221.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2224.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2227.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2229.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2241.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2244.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2247.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2249.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2261.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2264.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2267.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\id_manager.$procmux$1214.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\id_manager.$procmux$1217.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\id_manager.$procmux$1250.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2269.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2761.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2281.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2284.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2287.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2289.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2763.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$460.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$463.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$466.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$508.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$511.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$544.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2301.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2304.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\reply_fsm.$procmux$1414.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\reply_fsm.$procmux$1420.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2307.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2309.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2733.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2321.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2324.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2326.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2735.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$460.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$463.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$466.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$508.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$511.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$544.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2338.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2341.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2343.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2775.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1455.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2355.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2358.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2360.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2747.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2777.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\uart_replies.$procmux$802.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\uart_replies.$procmux$805.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\uart_replies.$procmux$808.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\uart_replies.$procmux$850.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\uart_replies.$procmux$853.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\uart_replies.$procmux$886.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2372.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2375.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2377.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2749.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2389.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2392.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2394.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1457.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\uart_requests.$procmux$802.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\uart_requests.$procmux$805.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\uart_requests.$procmux$808.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\uart_requests.$procmux$850.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\uart_requests.$procmux$853.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\uart_requests.$procmux$886.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2406.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2409.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2411.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1001.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1006.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1013.
    dead port 1/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1016.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1018.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1025.
    dead port 1/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1028.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1030.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1037.
    dead port 1/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1040.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1042.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2423.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1049.
    dead port 1/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1052.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1054.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2426.
    dead port 1/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1061.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1063.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2428.
    dead port 1/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1070.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1072.
    dead port 1/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1079.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1081.
    dead port 1/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1088.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1090.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2440.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1096.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2443.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1102.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2445.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1108.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1114.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1120.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2457.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1126.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2460.
    dead port 1/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1134.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1136.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1143.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2462.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1151.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$1159.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2476.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2479.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2481.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2483.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2486.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2488.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2502.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2504.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2506.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2509.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2511.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2525.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2527.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2529.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2532.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2534.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2548.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2550.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2552.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2555.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2557.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2571.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2573.
    dead port 1/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$994.
    dead port 2/2 on $mux $flatten\mchip.\top.\receiver.\fsm.$procmux$996.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2575.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2578.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$651.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$656.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2580.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$667.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$679.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$685.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$691.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2593.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$698.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$705.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2595.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$712.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2598.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$719.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2600.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$727.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$735.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$743.
    dead port 2/2 on $mux $flatten\mchip.\top.\transmitter.\fsm.$procmux$751.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2613.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2615.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2618.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2620.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2633.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2635.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2638.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2640.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2652.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2655.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2657.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2669.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2672.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2674.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1445.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2686.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2689.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2691.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$1447.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2702.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2705.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2707.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2719.
    dead port 2/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2721.
Removed 522 multiplexer ports.
<suppressed ~86 debug messages>

4.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$3911: { $flatten\mchip.\top.\bobby.\fsm.$procmux$3475_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1567_CMP $auto$opt_reduce.cc:134:opt_pmux$4266 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4100: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1500_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1448_CMP $auto$opt_reduce.cc:134:opt_pmux$4268 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$3920: { $flatten\mchip.\top.\bobby.\fsm.$procmux$3475_CMP $auto$opt_reduce.cc:134:opt_pmux$4270 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$3929: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1567_CMP $auto$opt_reduce.cc:134:opt_pmux$4272 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$3938: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$3895_CMP $auto$opt_reduce.cc:134:opt_pmux$4274 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$3947: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $auto$opt_reduce.cc:134:opt_pmux$4276 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$3956: { $flatten\mchip.\top.\bobby.\fsm.$procmux$3895_CMP $auto$opt_reduce.cc:134:opt_pmux$4278 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$3965: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $auto$opt_reduce.cc:134:opt_pmux$4280 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$3974: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $auto$opt_reduce.cc:134:opt_pmux$4282 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$3983: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1891_CMP $auto$opt_reduce.cc:134:opt_pmux$4284 $flatten\mchip.\top.\bobby.\fsm.$procmux$3894_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$3992: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1500_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1448_CMP $auto$opt_reduce.cc:134:opt_pmux$4286 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4001: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $auto$opt_reduce.cc:134:opt_pmux$4288 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4010: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $auto$opt_reduce.cc:134:opt_pmux$4290 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4019: { $flatten\mchip.\top.\bobby.\fsm.$procmux$3895_CMP $auto$opt_reduce.cc:134:opt_pmux$4292 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\receiver.\fsm.$procmux$1161: { $flatten\mchip.\top.\receiver.\fsm.$procmux$1152_CMP $auto$opt_reduce.cc:134:opt_pmux$4294 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4028: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $auto$opt_reduce.cc:134:opt_pmux$4296 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\receiver.\fsm.$procmux$1171: { $auto$opt_reduce.cc:134:opt_pmux$4298 $flatten\mchip.\top.\receiver.\fsm.$procmux$1019_CMP $flatten\mchip.\top.\receiver.\fsm.$procmux$1002_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\receiver.\fsm.$procmux$1176: { $flatten\mchip.\top.\receiver.\fsm.$procmux$1019_CMP $auto$opt_reduce.cc:134:opt_pmux$4300 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4037: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $auto$opt_reduce.cc:134:opt_pmux$4302 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\receiver.\fsm.$procmux$1181: { $flatten\mchip.\top.\receiver.\fsm.$procmux$1019_CMP $auto$opt_reduce.cc:134:opt_pmux$4304 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\receiver.\fsm.$procmux$1186: { $flatten\mchip.\top.\receiver.\fsm.$procmux$1019_CMP $auto$opt_reduce.cc:134:opt_pmux$4306 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\receiver.\fsm.$procmux$1191: { $flatten\mchip.\top.\receiver.\fsm.$procmux$1019_CMP $auto$opt_reduce.cc:134:opt_pmux$4308 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4046: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $auto$opt_reduce.cc:134:opt_pmux$4310 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\receiver.\fsm.$procmux$1196: { $auto$opt_reduce.cc:134:opt_pmux$4312 $flatten\mchip.\top.\receiver.\fsm.$procmux$1019_CMP $flatten\mchip.\top.\receiver.\fsm.$procmux$1002_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4055: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $auto$opt_reduce.cc:134:opt_pmux$4314 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4064: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $auto$opt_reduce.cc:134:opt_pmux$4316 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$3893: { $flatten\mchip.\top.\bobby.\fsm.$procmux$3475_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1891_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1567_CMP $auto$opt_reduce.cc:134:opt_pmux$4318 $flatten\mchip.\top.\bobby.\fsm.$procmux$3894_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4073: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1500_CMP $auto$opt_reduce.cc:134:opt_pmux$4320 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\transmitter.\fsm.$procmux$753: { $flatten\mchip.\top.\transmitter.\fsm.$procmux$728_CMP $flatten\mchip.\top.\transmitter.\fsm.$procmux$699_CMP $auto$opt_reduce.cc:134:opt_pmux$4322 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\transmitter.\fsm.$procmux$758: { $flatten\mchip.\top.\transmitter.\fsm.$procmux$728_CMP $auto$opt_reduce.cc:134:opt_pmux$4324 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\transmitter.\fsm.$procmux$768: { $flatten\mchip.\top.\transmitter.\fsm.$procmux$728_CMP $auto$opt_reduce.cc:134:opt_pmux$4326 $flatten\mchip.\top.\transmitter.\fsm.$procmux$652_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4082: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $auto$opt_reduce.cc:134:opt_pmux$4328 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\transmitter.\fsm.$procmux$778: { $flatten\mchip.\top.\transmitter.\fsm.$procmux$699_CMP $flatten\mchip.\top.\transmitter.\fsm.$procmux$668_CMP $auto$opt_reduce.cc:134:opt_pmux$4330 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$3902: { $flatten\mchip.\top.\bobby.\fsm.$procmux$3475_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1567_CMP $auto$opt_reduce.cc:134:opt_pmux$4332 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\transmitter.\fsm.$procmux$783: { $flatten\mchip.\top.\transmitter.\fsm.$procmux$668_CMP $auto$opt_reduce.cc:134:opt_pmux$4334 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\transmitter.\fsm.$procmux$788: { $flatten\mchip.\top.\transmitter.\fsm.$procmux$699_CMP $flatten\mchip.\top.\transmitter.\fsm.$procmux$668_CMP $auto$opt_reduce.cc:134:opt_pmux$4336 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4091: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1500_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1448_CMP $auto$opt_reduce.cc:134:opt_pmux$4338 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\transmitter.\fsm.$procmux$793: { $flatten\mchip.\top.\transmitter.\fsm.$procmux$728_CMP $auto$opt_reduce.cc:134:opt_pmux$4340 }
  Optimizing cells in module \toplevel_chip.
Performed a total of 38 changes.

4.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~231 debug messages>
Removed a total of 77 cells.

4.7.6. Executing OPT_DFF pass (perform DFF optimizations).

4.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 1092 unused wires.
<suppressed ~3 debug messages>

4.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.7.9. Rerunning OPT passes. (Maybe there is more to do..)

4.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~96 debug messages>

4.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4091: { $auto$opt_reduce.cc:134:opt_pmux$4342 $auto$opt_reduce.cc:134:opt_pmux$4286 }
    New ctrl vector for $pmux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$4100: { $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $auto$opt_reduce.cc:134:opt_pmux$4344 $auto$opt_reduce.cc:134:opt_pmux$4268 }
  Optimizing cells in module \toplevel_chip.
Performed a total of 2 changes.

4.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.7.13. Executing OPT_DFF pass (perform DFF optimizations).

4.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.7.16. Rerunning OPT passes. (Maybe there is more to do..)

4.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~96 debug messages>

4.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.7.20. Executing OPT_DFF pass (perform DFF optimizations).

4.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.7.23. Finished OPT passes. (There is nothing left to do.)

4.8. Executing FSM pass (extract and optimize FSM).

4.8.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register toplevel_chip.mchip.top.bobby.fsm.state.
Found FSM state register toplevel_chip.mchip.top.receiver.fsm.state.
Found FSM state register toplevel_chip.mchip.top.transmitter.fsm.state.

4.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\mchip.top.bobby.fsm.state' from module `\toplevel_chip'.
  found $dff cell for state register: $flatten\mchip.\top.\bobby.\fsm.$procdff$4257
  root of input selection tree: $flatten\mchip.\top.\bobby.\fsm.$0\state[2:0]
  found reset state: 3'000 (guessed from mux tree)
  found ctrl input: \io_in [13]
  found ctrl input: $flatten\mchip.\top.\bobby.\fsm.$procmux$3894_CMP
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$4318
  found ctrl input: $flatten\mchip.\top.\bobby.\fsm.$procmux$1567_CMP
  found ctrl input: $flatten\mchip.\top.\bobby.\fsm.$procmux$1891_CMP
  found ctrl input: $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP
  found ctrl input: $flatten\mchip.\top.\bobby.\fsm.$procmux$3475_CMP
  found state code: 3'000
  found state code: 3'111
  found ctrl input: \mchip.top.bobby.fsm.emergency
  found ctrl input: $flatten\mchip.\top.\bobby.\fsm.$ne$d16_jaehyun3_bobatc/src/Bob.v:457$10_Y
  found ctrl input: $flatten\mchip.\top.\bobby.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:458$13_Y
  found ctrl input: \mchip.top.bobby.fsm.takeoff_fifo_empty
  found state code: 3'100
  found ctrl input: \mchip.top.bobby.fsm.landing_fifo_empty
  found state code: 3'101
  found ctrl input: \mchip.top.bobby.fsm.takeoff_first
  found state code: 3'110
  found ctrl input: \mchip.top.bobby.uart_replies.full
  found state code: 3'011
  found state code: 3'010
  found ctrl input: $flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:487$16_Y
  found ctrl input: $flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:514$21_Y
  found ctrl input: $flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:533$29_Y
  found ctrl input: \mchip.top.bobby.uart_requests.data_out [0]
  found ctrl input: $flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:490$18_Y
  found ctrl input: $flatten\mchip.\top.\bobby.\fsm.$procmux$2482_CMP
  found ctrl input: \mchip.top.bobby.uart_requests.empty
  found state code: 3'001
  found ctrl output: $flatten\mchip.\top.\bobby.\fsm.$procmux$1448_CMP
  found ctrl output: $flatten\mchip.\top.\bobby.\fsm.$procmux$1500_CMP
  found ctrl output: $flatten\mchip.\top.\bobby.\fsm.$procmux$1567_CMP
  found ctrl output: $flatten\mchip.\top.\bobby.\fsm.$procmux$1891_CMP
  found ctrl output: $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP
  found ctrl output: $flatten\mchip.\top.\bobby.\fsm.$procmux$3475_CMP
  found ctrl output: $flatten\mchip.\top.\bobby.\fsm.$procmux$3894_CMP
  found ctrl output: $flatten\mchip.\top.\bobby.\fsm.$procmux$3895_CMP
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$4318 \mchip.top.bobby.uart_requests.empty \mchip.top.bobby.uart_requests.data_out [0] $flatten\mchip.\top.\bobby.\fsm.$procmux$2482_CMP $flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:533$29_Y $flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:514$21_Y $flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:490$18_Y $flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:487$16_Y $flatten\mchip.\top.\bobby.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:458$13_Y $flatten\mchip.\top.\bobby.\fsm.$ne$d16_jaehyun3_bobatc/src/Bob.v:457$10_Y \mchip.top.bobby.fsm.takeoff_first \mchip.top.bobby.fsm.emergency \mchip.top.bobby.fsm.landing_fifo_empty \mchip.top.bobby.fsm.takeoff_fifo_empty \mchip.top.bobby.uart_replies.full \io_in [13] }
  ctrl outputs: { $flatten\mchip.\top.\bobby.\fsm.$procmux$3895_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$3894_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$3475_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1891_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1567_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1500_CMP $flatten\mchip.\top.\bobby.\fsm.$procmux$1448_CMP $flatten\mchip.\top.\bobby.\fsm.$0\state[2:0] }
  transition:      3'000 16'-0-------------0 ->      3'001 11'00100000001
  transition:      3'000 16'-1-------0-0---0 ->      3'000 11'00100000000
  transition:      3'000 16'-1------01-0-0-0 ->      3'100 11'00100000100
  transition:      3'000 16'-1------01-001-0 ->      3'101 11'00100000101
  transition:      3'000 16'-1------01-011-0 ->      3'000 11'00100000000
  transition:      3'000 16'-1------1100---0 ->      3'101 11'00100000101
  transition:      3'000 16'-1------1110---0 ->      3'100 11'00100000100
  transition:      3'000 16'-1---------10--0 ->      3'110 11'00100000110
  transition:      3'000 16'-1---------11--0 ->      3'000 11'00100000000
  transition:      3'000 16'---------------1 ->      3'000 11'00100000000
  transition:      3'100 16'---------------0 ->      3'111 11'00000010111
  transition:      3'100 16'---------------1 ->      3'000 11'00000010000
  transition:      3'010 16'--------------00 ->      3'011 11'00001000011
  transition:      3'010 16'--------------10 ->      3'010 11'00001000010
  transition:      3'010 16'---------------1 ->      3'000 11'00001000000
  transition:      3'110 16'---------------0 ->      3'111 11'10000000111
  transition:      3'110 16'---------------1 ->      3'000 11'10000000000
  transition:      3'001 16'----00-0-------0 ->      3'010 11'00010000010
  transition:      3'001 16'--0-10-0-------0 ->      3'011 11'00010000011
  transition:      3'001 16'--1-10-0----0--0 ->      3'110 11'00010000110
  transition:      3'001 16'--1-10-0----1--0 ->      3'000 11'00010000000
  transition:      3'001 16'-----1-0-------0 ->      3'011 11'00010000011
  transition:      3'001 16'---0---1-------0 ->      3'011 11'00010000011
  transition:      3'001 16'---1---1-------0 ->      3'010 11'00010000010
  transition:      3'001 16'---------------1 ->      3'000 11'00010000000
  transition:      3'101 16'---------------0 ->      3'111 11'00000001111
  transition:      3'101 16'---------------1 ->      3'000 11'00000001000
  transition:      3'011 16'---------0-0---0 ->      3'000 11'00000100000
  transition:      3'011 16'--------01-0-0-0 ->      3'100 11'00000100100
  transition:      3'011 16'--------01-001-0 ->      3'101 11'00000100101
  transition:      3'011 16'--------01-011-0 ->      3'000 11'00000100000
  transition:      3'011 16'--------1100---0 ->      3'101 11'00000100101
  transition:      3'011 16'--------1110---0 ->      3'100 11'00000100100
  transition:      3'011 16'-----------10--0 ->      3'110 11'00000100110
  transition:      3'011 16'-----------11--0 ->      3'000 11'00000100000
  transition:      3'011 16'---------------1 ->      3'000 11'00000100000
  transition:      3'111 16'---------------0 ->      3'000 11'01000000000
  transition:      3'111 16'---------------1 ->      3'000 11'01000000000
Extracting FSM `\mchip.top.receiver.fsm.state' from module `\toplevel_chip'.
  found $dff cell for state register: $flatten\mchip.\top.\receiver.\fsm.$procdff$4242
  root of input selection tree: $flatten\mchip.\top.\receiver.\fsm.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \io_in [13]
  found ctrl input: $flatten\mchip.\top.\receiver.\fsm.$procmux$1002_CMP
  found ctrl input: $flatten\mchip.\top.\receiver.\fsm.$procmux$1019_CMP
  found ctrl input: $flatten\mchip.\top.\receiver.\fsm.$procmux$1137_CMP
  found ctrl input: $flatten\mchip.\top.\receiver.\fsm.$procmux$1152_CMP
  found ctrl input: $flatten\mchip.\top.\receiver.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:955$209_Y
  found ctrl input: $flatten\mchip.\top.\receiver.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:957$211_Y
  found state code: 2'00
  found state code: 2'11
  found ctrl input: $flatten\mchip.\top.\receiver.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:962$213_Y
  found ctrl input: $flatten\mchip.\top.\receiver.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:967$214_Y
  found state code: 2'10
  found ctrl input: \io_in [0]
  found state code: 2'01
  found ctrl output: $flatten\mchip.\top.\receiver.\fsm.$procmux$1002_CMP
  found ctrl output: $flatten\mchip.\top.\receiver.\fsm.$procmux$1019_CMP
  found ctrl output: $flatten\mchip.\top.\receiver.\fsm.$procmux$1137_CMP
  found ctrl output: $flatten\mchip.\top.\receiver.\fsm.$procmux$1152_CMP
  ctrl inputs: { $flatten\mchip.\top.\receiver.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:967$214_Y $flatten\mchip.\top.\receiver.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:962$213_Y $flatten\mchip.\top.\receiver.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:957$211_Y $flatten\mchip.\top.\receiver.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:955$209_Y \io_in [13] \io_in [0] }
  ctrl outputs: { $flatten\mchip.\top.\receiver.\fsm.$procmux$1152_CMP $flatten\mchip.\top.\receiver.\fsm.$procmux$1137_CMP $flatten\mchip.\top.\receiver.\fsm.$procmux$1019_CMP $flatten\mchip.\top.\receiver.\fsm.$procmux$1002_CMP $flatten\mchip.\top.\receiver.\fsm.$0\state[1:0] }
  transition:       2'00 6'----00 ->       2'01 6'100001
  transition:       2'00 6'----01 ->       2'00 6'100000
  transition:       2'00 6'----1- ->       2'00 6'100000
  transition:       2'10 6'00--0- ->       2'10 6'001010
  transition:       2'10 6'10--00 ->       2'11 6'001011
  transition:       2'10 6'10--01 ->       2'00 6'001000
  transition:       2'10 6'-1--0- ->       2'10 6'001010
  transition:       2'10 6'----1- ->       2'00 6'001000
  transition:       2'01 6'--000- ->       2'01 6'010001
  transition:       2'01 6'--100- ->       2'10 6'010010
  transition:       2'01 6'---10- ->       2'00 6'010000
  transition:       2'01 6'----1- ->       2'00 6'010000
  transition:       2'11 6'--000- ->       2'00 6'000100
  transition:       2'11 6'--100- ->       2'11 6'000111
  transition:       2'11 6'---10- ->       2'00 6'000100
  transition:       2'11 6'----1- ->       2'00 6'000100
Extracting FSM `\mchip.top.transmitter.fsm.state' from module `\toplevel_chip'.
  found $dff cell for state register: $flatten\mchip.\top.\transmitter.\fsm.$procdff$4229
  root of input selection tree: $flatten\mchip.\top.\transmitter.\fsm.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \io_in [13]
  found ctrl input: $flatten\mchip.\top.\transmitter.\fsm.$procmux$652_CMP
  found ctrl input: $flatten\mchip.\top.\transmitter.\fsm.$procmux$668_CMP
  found ctrl input: $flatten\mchip.\top.\transmitter.\fsm.$procmux$699_CMP
  found ctrl input: $flatten\mchip.\top.\transmitter.\fsm.$procmux$728_CMP
  found ctrl input: \mchip.top.transmitter.conductor.tick
  found state code: 2'11
  found state code: 2'00
  found ctrl input: $flatten\mchip.\top.\transmitter.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:1149$233_Y
  found state code: 2'10
  found state code: 2'01
  found ctrl input: \mchip.top.bobby.reply_fsm.uart_tx_send
  found ctrl output: $flatten\mchip.\top.\transmitter.\fsm.$procmux$652_CMP
  found ctrl output: $flatten\mchip.\top.\transmitter.\fsm.$procmux$668_CMP
  found ctrl output: $flatten\mchip.\top.\transmitter.\fsm.$procmux$699_CMP
  found ctrl output: $flatten\mchip.\top.\transmitter.\fsm.$procmux$728_CMP
  ctrl inputs: { \mchip.top.bobby.reply_fsm.uart_tx_send \mchip.top.transmitter.conductor.tick $flatten\mchip.\top.\transmitter.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:1149$233_Y \io_in [13] }
  ctrl outputs: { $flatten\mchip.\top.\transmitter.\fsm.$procmux$728_CMP $flatten\mchip.\top.\transmitter.\fsm.$procmux$699_CMP $flatten\mchip.\top.\transmitter.\fsm.$procmux$668_CMP $flatten\mchip.\top.\transmitter.\fsm.$procmux$652_CMP $flatten\mchip.\top.\transmitter.\fsm.$0\state[1:0] }
  transition:       2'00 4'0--0 ->       2'00 6'100000
  transition:       2'00 4'1--0 ->       2'01 6'100001
  transition:       2'00 4'---1 ->       2'00 6'100000
  transition:       2'10 4'--00 ->       2'10 6'001010
  transition:       2'10 4'--10 ->       2'11 6'001011
  transition:       2'10 4'---1 ->       2'00 6'001000
  transition:       2'01 4'-0-0 ->       2'01 6'010001
  transition:       2'01 4'-1-0 ->       2'10 6'010010
  transition:       2'01 4'---1 ->       2'00 6'010000
  transition:       2'11 4'-0-0 ->       2'11 6'000111
  transition:       2'11 4'-1-0 ->       2'00 6'000100
  transition:       2'11 4'---1 ->       2'00 6'000100

4.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\mchip.top.transmitter.fsm.state$4361' from module `\toplevel_chip'.
Optimizing FSM `$fsm$\mchip.top.receiver.fsm.state$4355' from module `\toplevel_chip'.
Optimizing FSM `$fsm$\mchip.top.bobby.fsm.state$4345' from module `\toplevel_chip'.
  Merging pattern 16'---------------0 and 16'---------------1 from group (7 0 11'01000000000).
  Merging pattern 16'---------------1 and 16'---------------0 from group (7 0 11'01000000000).
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$4318.
  Removing unused input signal $flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:490$18_Y.

4.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 53 unused cells and 53 unused wires.
<suppressed ~57 debug messages>

4.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\mchip.top.bobby.fsm.state$4345' from module `\toplevel_chip'.
  Removing unused output signal $flatten\mchip.\top.\bobby.\fsm.$0\state[2:0] [0].
  Removing unused output signal $flatten\mchip.\top.\bobby.\fsm.$0\state[2:0] [1].
  Removing unused output signal $flatten\mchip.\top.\bobby.\fsm.$0\state[2:0] [2].
Optimizing FSM `$fsm$\mchip.top.receiver.fsm.state$4355' from module `\toplevel_chip'.
  Removing unused output signal $flatten\mchip.\top.\receiver.\fsm.$0\state[1:0] [0].
  Removing unused output signal $flatten\mchip.\top.\receiver.\fsm.$0\state[1:0] [1].
Optimizing FSM `$fsm$\mchip.top.transmitter.fsm.state$4361' from module `\toplevel_chip'.
  Removing unused output signal $flatten\mchip.\top.\transmitter.\fsm.$0\state[1:0] [0].
  Removing unused output signal $flatten\mchip.\top.\transmitter.\fsm.$0\state[1:0] [1].

4.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\mchip.top.bobby.fsm.state$4345' from module `\toplevel_chip' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -------1
  100 -> ------1-
  010 -> -----1--
  110 -> ----1---
  001 -> ---1----
  101 -> --1-----
  011 -> -1------
  111 -> 1-------
Recoding FSM `$fsm$\mchip.top.receiver.fsm.state$4355' from module `\toplevel_chip' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---
Recoding FSM `$fsm$\mchip.top.transmitter.fsm.state$4361' from module `\toplevel_chip' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---

4.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\mchip.top.bobby.fsm.state$4345' from module `toplevel_chip':
-------------------------------------

  Information on FSM $fsm$\mchip.top.bobby.fsm.state$4345 (\mchip.top.bobby.fsm.state):

  Number of input signals:   14
  Number of output signals:   8
  Number of state bits:       8

  Input signals:
    0: \io_in [13]
    1: \mchip.top.bobby.uart_replies.full
    2: \mchip.top.bobby.fsm.takeoff_fifo_empty
    3: \mchip.top.bobby.fsm.landing_fifo_empty
    4: \mchip.top.bobby.fsm.emergency
    5: \mchip.top.bobby.fsm.takeoff_first
    6: $flatten\mchip.\top.\bobby.\fsm.$ne$d16_jaehyun3_bobatc/src/Bob.v:457$10_Y
    7: $flatten\mchip.\top.\bobby.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:458$13_Y
    8: $flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:487$16_Y
    9: $flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:514$21_Y
   10: $flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:533$29_Y
   11: $flatten\mchip.\top.\bobby.\fsm.$procmux$2482_CMP
   12: \mchip.top.bobby.uart_requests.data_out [0]
   13: \mchip.top.bobby.uart_requests.empty

  Output signals:
    0: $flatten\mchip.\top.\bobby.\fsm.$procmux$1448_CMP
    1: $flatten\mchip.\top.\bobby.\fsm.$procmux$1500_CMP
    2: $flatten\mchip.\top.\bobby.\fsm.$procmux$1567_CMP
    3: $flatten\mchip.\top.\bobby.\fsm.$procmux$1891_CMP
    4: $flatten\mchip.\top.\bobby.\fsm.$procmux$1924_CMP
    5: $flatten\mchip.\top.\bobby.\fsm.$procmux$3475_CMP
    6: $flatten\mchip.\top.\bobby.\fsm.$procmux$3894_CMP
    7: $flatten\mchip.\top.\bobby.\fsm.$procmux$3895_CMP

  State encoding:
    0: 8'-------1  <RESET STATE>
    1: 8'------1-
    2: 8'-----1--
    3: 8'----1---
    4: 8'---1----
    5: 8'--1-----
    6: 8'-1------
    7: 8'1-------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 14'1-----01-011-0   ->     0 8'00100000
      1:     0 14'1--------11--0   ->     0 8'00100000
      2:     0 14'1------0-0---0   ->     0 8'00100000
      3:     0 14'-------------1   ->     0 8'00100000
      4:     0 14'1-----01-0-0-0   ->     1 8'00100000
      5:     0 14'1-----1110---0   ->     1 8'00100000
      6:     0 14'1--------10--0   ->     3 8'00100000
      7:     0 14'0------------0   ->     4 8'00100000
      8:     0 14'1-----01-001-0   ->     5 8'00100000
      9:     0 14'1-----1100---0   ->     5 8'00100000
     10:     1 14'-------------1   ->     0 8'00000010
     11:     1 14'-------------0   ->     7 8'00000010
     12:     2 14'-------------1   ->     0 8'00001000
     13:     2 14'------------10   ->     2 8'00001000
     14:     2 14'------------00   ->     6 8'00001000
     15:     3 14'-------------1   ->     0 8'10000000
     16:     3 14'-------------0   ->     7 8'10000000
     17:     4 14'-1-100----1--0   ->     0 8'00010000
     18:     4 14'-------------1   ->     0 8'00010000
     19:     4 14'---000-------0   ->     2 8'00010000
     20:     4 14'--1--1-------0   ->     2 8'00010000
     21:     4 14'-1-100----0--0   ->     3 8'00010000
     22:     4 14'-0-100-------0   ->     6 8'00010000
     23:     4 14'----10-------0   ->     6 8'00010000
     24:     4 14'--0--1-------0   ->     6 8'00010000
     25:     5 14'-------------1   ->     0 8'00000001
     26:     5 14'-------------0   ->     7 8'00000001
     27:     6 14'------01-011-0   ->     0 8'00000100
     28:     6 14'---------11--0   ->     0 8'00000100
     29:     6 14'-------0-0---0   ->     0 8'00000100
     30:     6 14'-------------1   ->     0 8'00000100
     31:     6 14'------01-0-0-0   ->     1 8'00000100
     32:     6 14'------1110---0   ->     1 8'00000100
     33:     6 14'---------10--0   ->     3 8'00000100
     34:     6 14'------01-001-0   ->     5 8'00000100
     35:     6 14'------1100---0   ->     5 8'00000100
     36:     7 14'--------------   ->     0 8'01000000

-------------------------------------

FSM `$fsm$\mchip.top.receiver.fsm.state$4355' from module `toplevel_chip':
-------------------------------------

  Information on FSM $fsm$\mchip.top.receiver.fsm.state$4355 (\mchip.top.receiver.fsm.state):

  Number of input signals:    6
  Number of output signals:   4
  Number of state bits:       4

  Input signals:
    0: \io_in [0]
    1: \io_in [13]
    2: $flatten\mchip.\top.\receiver.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:955$209_Y
    3: $flatten\mchip.\top.\receiver.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:957$211_Y
    4: $flatten\mchip.\top.\receiver.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:962$213_Y
    5: $flatten\mchip.\top.\receiver.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:967$214_Y

  Output signals:
    0: $flatten\mchip.\top.\receiver.\fsm.$procmux$1002_CMP
    1: $flatten\mchip.\top.\receiver.\fsm.$procmux$1019_CMP
    2: $flatten\mchip.\top.\receiver.\fsm.$procmux$1137_CMP
    3: $flatten\mchip.\top.\receiver.\fsm.$procmux$1152_CMP

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'----01   ->     0 4'1000
      1:     0 6'----1-   ->     0 4'1000
      2:     0 6'----00   ->     2 4'1000
      3:     1 6'10--01   ->     0 4'0010
      4:     1 6'----1-   ->     0 4'0010
      5:     1 6'00--0-   ->     1 4'0010
      6:     1 6'-1--0-   ->     1 4'0010
      7:     1 6'10--00   ->     3 4'0010
      8:     2 6'---10-   ->     0 4'0100
      9:     2 6'----1-   ->     0 4'0100
     10:     2 6'--100-   ->     1 4'0100
     11:     2 6'--000-   ->     2 4'0100
     12:     3 6'--000-   ->     0 4'0001
     13:     3 6'---10-   ->     0 4'0001
     14:     3 6'----1-   ->     0 4'0001
     15:     3 6'--100-   ->     3 4'0001

-------------------------------------

FSM `$fsm$\mchip.top.transmitter.fsm.state$4361' from module `toplevel_chip':
-------------------------------------

  Information on FSM $fsm$\mchip.top.transmitter.fsm.state$4361 (\mchip.top.transmitter.fsm.state):

  Number of input signals:    4
  Number of output signals:   4
  Number of state bits:       4

  Input signals:
    0: \io_in [13]
    1: $flatten\mchip.\top.\transmitter.\fsm.$logic_and$d16_jaehyun3_bobatc/src/Bob.v:1149$233_Y
    2: \mchip.top.transmitter.conductor.tick
    3: \mchip.top.bobby.reply_fsm.uart_tx_send

  Output signals:
    0: $flatten\mchip.\top.\transmitter.\fsm.$procmux$652_CMP
    1: $flatten\mchip.\top.\transmitter.\fsm.$procmux$668_CMP
    2: $flatten\mchip.\top.\transmitter.\fsm.$procmux$699_CMP
    3: $flatten\mchip.\top.\transmitter.\fsm.$procmux$728_CMP

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 4'0--0   ->     0 4'1000
      1:     0 4'---1   ->     0 4'1000
      2:     0 4'1--0   ->     2 4'1000
      3:     1 4'---1   ->     0 4'0010
      4:     1 4'--00   ->     1 4'0010
      5:     1 4'--10   ->     3 4'0010
      6:     2 4'---1   ->     0 4'0100
      7:     2 4'-1-0   ->     1 4'0100
      8:     2 4'-0-0   ->     2 4'0100
      9:     3 4'-1-0   ->     0 4'0001
     10:     3 4'---1   ->     0 4'0001
     11:     3 4'-0-0   ->     3 4'0001

-------------------------------------

4.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\mchip.top.bobby.fsm.state$4345' from module `\toplevel_chip'.
Mapping FSM `$fsm$\mchip.top.receiver.fsm.state$4355' from module `\toplevel_chip'.
Mapping FSM `$fsm$\mchip.top.transmitter.fsm.state$4361' from module `\toplevel_chip'.

4.9. Executing OPT pass (performing simple optimizations).

4.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~16 debug messages>

4.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

4.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

4.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\mchip.\top.\transmitter.\conductor.$procdff$4243 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\transmitter.\conductor.$add$d16_jaehyun3_bobatc/src/Bob.v:1207$262_Y, Q = \mchip.top.transmitter.conductor.clockCount, rval = 10'0000000000).
Adding SRST signal on $flatten\mchip.\top.\transmitter.$procdff$4216 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\transmitter.$procmux$451_Y, Q = \mchip.top.transmitter.data_counter, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$4590 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\transmitter.$add$d16_jaehyun3_bobatc/src/Bob.v:1040$243_Y [3:0], Q = \mchip.top.transmitter.data_counter).
Adding SRST signal on $flatten\mchip.\top.\transmitter.$procdff$4215 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\transmitter.$procmux$446_Y, Q = \mchip.top.transmitter.saved_data, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$4592 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\transmitter.$procmux$446_Y, Q = \mchip.top.transmitter.saved_data).
Adding SRST signal on $flatten\mchip.\top.\transmitter.$procdff$4214 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\transmitter.$procmux$438_Y, Q = \mchip.top.transmitter.data_bit, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4596 ($sdff) from module toplevel_chip (D = \mchip.top.transmitter.saved_data [0], Q = \mchip.top.transmitter.data_bit).
Adding SRST signal on $flatten\mchip.\top.\transmitter.$procdff$4213 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\transmitter.$procmux$433_Y, Q = \mchip.top.transmitter.tx, rval = 1'1).
Adding SRST signal on $flatten\mchip.\top.\receiver.\conductor.$procdff$4243 ($dff) from module toplevel_chip (D = { $flatten\mchip.\top.\receiver.\conductor.$add$d16_jaehyun3_bobatc/src/Bob.v:1207$262_Y [9:7] $flatten\mchip.\top.\receiver.\conductor.$add$d16_jaehyun3_bobatc/src/Bob.v:1207$262_Y [4] $flatten\mchip.\top.\receiver.\conductor.$add$d16_jaehyun3_bobatc/src/Bob.v:1207$262_Y [1:0] }, Q = { \mchip.top.receiver.conductor.clockCount [9:7] \mchip.top.receiver.conductor.clockCount [4] \mchip.top.receiver.conductor.clockCount [1:0] }, rval = 6'000000).
Adding SRST signal on $flatten\mchip.\top.\receiver.\conductor.$procdff$4243 ($dff) from module toplevel_chip (D = { $flatten\mchip.\top.\receiver.\conductor.$procmux$1205_Y [6:5] $flatten\mchip.\top.\receiver.\conductor.$procmux$1205_Y [3:2] }, Q = { \mchip.top.receiver.conductor.clockCount [6:5] \mchip.top.receiver.conductor.clockCount [3:2] }, rval = 4'0000).
Adding SRST signal on $flatten\mchip.\top.\receiver.$procdff$4254 ($dff) from module toplevel_chip (D = { $flatten\mchip.\top.\receiver.$procmux$1397_Y $flatten\mchip.\top.\receiver.$procmux$1402_Y }, Q = \mchip.top.receiver.data, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$4603 ($sdff) from module toplevel_chip (D = { \io_in [0] \mchip.top.receiver.data [7:1] }, Q = \mchip.top.receiver.data).
Adding SRST signal on $flatten\mchip.\top.\receiver.$procdff$4253 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\receiver.$procmux$1392_Y, Q = \mchip.top.receiver.data_counter, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$4605 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\receiver.$add$d16_jaehyun3_bobatc/src/Bob.v:893$258_Y, Q = \mchip.top.receiver.data_counter).
Adding SRST signal on $flatten\mchip.\top.\bobby.\uart_requests.$procdff$4234 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_requests.$procmux$949_Y, Q = \mchip.top.bobby.uart_requests.get_ptr, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$4607 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_requests.$procmux$949_Y, Q = \mchip.top.bobby.uart_requests.get_ptr).
Adding SRST signal on $flatten\mchip.\top.\bobby.\uart_requests.$procdff$4233 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_requests.$procmux$961_Y, Q = \mchip.top.bobby.uart_requests.put_ptr, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$4611 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_requests.$procmux$961_Y, Q = \mchip.top.bobby.uart_requests.put_ptr).
Adding SRST signal on $flatten\mchip.\top.\bobby.\uart_requests.$procdff$4232 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_requests.$procmux$973_Y, Q = \mchip.top.bobby.uart_requests.count, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$4619 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_requests.$procmux$970_Y, Q = \mchip.top.bobby.uart_requests.count).
Adding EN signal on $flatten\mchip.\top.\bobby.\uart_requests.$procdff$4231 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_requests.$2$lookahead\queue$271[31:0]$296, Q = \mchip.top.bobby.uart_requests.queue).
Adding SRST signal on $flatten\mchip.\top.\bobby.\uart_requests.$procdff$4230 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_requests.$procmux$982_Y, Q = \mchip.top.bobby.uart_requests.data_out, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$4636 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_requests.$procmux$982_Y, Q = \mchip.top.bobby.uart_requests.data_out).
Adding SRST signal on $flatten\mchip.\top.\bobby.\uart_replies.$procdff$4234 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_replies.$procmux$949_Y, Q = \mchip.top.bobby.uart_replies.get_ptr, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$4640 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_replies.$procmux$949_Y, Q = \mchip.top.bobby.uart_replies.get_ptr).
Adding SRST signal on $flatten\mchip.\top.\bobby.\uart_replies.$procdff$4233 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_replies.$procmux$961_Y, Q = \mchip.top.bobby.uart_replies.put_ptr, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$4644 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_replies.$procmux$961_Y, Q = \mchip.top.bobby.uart_replies.put_ptr).
Adding SRST signal on $flatten\mchip.\top.\bobby.\uart_replies.$procdff$4232 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_replies.$procmux$973_Y, Q = \mchip.top.bobby.uart_replies.count, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$4652 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_replies.$procmux$970_Y, Q = \mchip.top.bobby.uart_replies.count).
Adding EN signal on $flatten\mchip.\top.\bobby.\uart_replies.$procdff$4231 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_replies.$2$lookahead\queue$271[31:0]$296, Q = \mchip.top.bobby.uart_replies.queue).
Adding SRST signal on $flatten\mchip.\top.\bobby.\uart_replies.$procdff$4230 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_replies.$procmux$982_Y, Q = \mchip.top.bobby.uart_replies.data_out, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$4669 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\uart_replies.$procmux$982_Y, Q = \mchip.top.bobby.uart_replies.data_out).
Adding SRST signal on $flatten\mchip.\top.\bobby.\takeoff_fifo.$procdff$4221 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$607_Y, Q = \mchip.top.bobby.takeoff_fifo.get_ptr, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$4673 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$607_Y, Q = \mchip.top.bobby.takeoff_fifo.get_ptr).
Adding SRST signal on $flatten\mchip.\top.\bobby.\takeoff_fifo.$procdff$4220 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$619_Y, Q = \mchip.top.bobby.takeoff_fifo.put_ptr, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$4677 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$619_Y, Q = \mchip.top.bobby.takeoff_fifo.put_ptr).
Adding SRST signal on $flatten\mchip.\top.\bobby.\takeoff_fifo.$procdff$4219 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$631_Y, Q = \mchip.top.bobby.takeoff_fifo.count, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$4685 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$628_Y, Q = \mchip.top.bobby.takeoff_fifo.count).
Adding EN signal on $flatten\mchip.\top.\bobby.\takeoff_fifo.$procdff$4218 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\takeoff_fifo.$2$lookahead\queue$353[31:0]$378, Q = \mchip.top.bobby.takeoff_fifo.queue).
Adding SRST signal on $flatten\mchip.\top.\bobby.\takeoff_fifo.$procdff$4217 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$640_Y, Q = \mchip.top.bobby.takeoff_fifo.data_out, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$4702 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$640_Y, Q = \mchip.top.bobby.takeoff_fifo.data_out).
Adding SRST signal on $flatten\mchip.\top.\bobby.\runway_manager.$procdff$4252 ($dff) from module toplevel_chip (D = { $flatten\mchip.\top.\bobby.\runway_manager.$procmux$1387_Y $flatten\mchip.\top.\bobby.\runway_manager.$procmux$1378_Y $flatten\mchip.\top.\bobby.\runway_manager.$procmux$1346_Y $flatten\mchip.\top.\bobby.\runway_manager.$procmux$1362_Y }, Q = \mchip.top.bobby.runway_manager.runway, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:266:slice$4706 ($sdff) from module toplevel_chip (D = \mchip.top.bobby.runway_manager.plane_id_lock, Q = \mchip.top.bobby.runway_manager.runway [4:1]).
Adding EN signal on $auto$ff.cc:266:slice$4706 ($sdff) from module toplevel_chip (D = \mchip.top.bobby.runway_manager.plane_id_lock, Q = \mchip.top.bobby.runway_manager.runway [9:6]).
Adding EN signal on $auto$ff.cc:266:slice$4706 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\runway_manager.$procmux$1378_Y, Q = \mchip.top.bobby.runway_manager.runway [5]).
Adding EN signal on $auto$ff.cc:266:slice$4706 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\runway_manager.$procmux$1362_Y, Q = \mchip.top.bobby.runway_manager.runway [0]).
Adding SRST signal on $flatten\mchip.\top.\bobby.\reply_fsm.$procdff$4255 ($dff) from module toplevel_chip (D = \mchip.top.bobby.reply_fsm.next_state, Q = \mchip.top.bobby.reply_fsm.state, rval = 1'0).
Adding SRST signal on $flatten\mchip.\top.\bobby.\landing_fifo.$procdff$4221 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$607_Y, Q = \mchip.top.bobby.landing_fifo.get_ptr, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$4738 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$607_Y, Q = \mchip.top.bobby.landing_fifo.get_ptr).
Adding SRST signal on $flatten\mchip.\top.\bobby.\landing_fifo.$procdff$4220 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$619_Y, Q = \mchip.top.bobby.landing_fifo.put_ptr, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$4742 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$619_Y, Q = \mchip.top.bobby.landing_fifo.put_ptr).
Adding SRST signal on $flatten\mchip.\top.\bobby.\landing_fifo.$procdff$4219 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$631_Y, Q = \mchip.top.bobby.landing_fifo.count, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$4750 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$628_Y, Q = \mchip.top.bobby.landing_fifo.count).
Adding EN signal on $flatten\mchip.\top.\bobby.\landing_fifo.$procdff$4218 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\landing_fifo.$2$lookahead\queue$353[31:0]$378, Q = \mchip.top.bobby.landing_fifo.queue).
Adding SRST signal on $flatten\mchip.\top.\bobby.\landing_fifo.$procdff$4217 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$640_Y, Q = \mchip.top.bobby.landing_fifo.data_out, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$4767 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$640_Y, Q = \mchip.top.bobby.landing_fifo.data_out).
Adding SRST signal on $flatten\mchip.\top.\bobby.\id_manager.$procdff$4244 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\id_manager.$2$lookahead\taken_id$152[15:0]$174, Q = \mchip.top.bobby.id_manager.taken_id, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$4771 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\id_manager.$2$lookahead\taken_id$152[15:0]$174, Q = \mchip.top.bobby.id_manager.taken_id).
Adding SRST signal on $flatten\mchip.\top.\bobby.\fsm.$procdff$4256 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\fsm.$procmux$1431_Y, Q = \mchip.top.bobby.fsm.takeoff_first, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4775 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.\fsm.$not$d16_jaehyun3_bobatc/src/Bob.v:654$48_Y, Q = \mchip.top.bobby.fsm.takeoff_first).
Adding SRST signal on $flatten\mchip.\top.\bobby.$procdff$4260 ($dff) from module toplevel_chip (D = { $flatten\mchip.\top.\bobby.$procmux$4205_Y $flatten\mchip.\top.\bobby.$procmux$4149_Y $flatten\mchip.\top.\bobby.$procmux$4177_Y }, Q = \mchip.top.bobby.reply_to_send, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$4777 ($sdff) from module toplevel_chip (D = { $flatten\mchip.\top.\bobby.$procmux$4205_Y $flatten\mchip.\top.\bobby.$procmux$4149_Y $flatten\mchip.\top.\bobby.$procmux$4177_Y }, Q = \mchip.top.bobby.reply_to_send).
Adding SRST signal on $flatten\mchip.\top.\bobby.$procdff$4259 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.$procmux$4110_Y, Q = \mchip.top.bobby.emergency_id, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$4785 ($sdff) from module toplevel_chip (D = \mchip.top.bobby.uart_requests.data_out [7:4], Q = \mchip.top.bobby.emergency_id).
Adding SRST signal on $flatten\mchip.\top.\bobby.$procdff$4258 ($dff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.$procmux$4118_Y, Q = \mchip.top.bobby.emergency, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4787 ($sdff) from module toplevel_chip (D = $flatten\mchip.\top.\bobby.$procmux$4118_Y, Q = \mchip.top.bobby.emergency).

4.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 57 unused cells and 83 unused wires.
<suppressed ~58 debug messages>

4.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~26 debug messages>

4.9.9. Rerunning OPT passes. (Maybe there is more to do..)

4.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~80 debug messages>

4.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

4.9.13. Executing OPT_DFF pass (perform DFF optimizations).

4.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

4.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.9.16. Rerunning OPT passes. (Maybe there is more to do..)

4.9.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~80 debug messages>

4.9.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.9.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.9.20. Executing OPT_DFF pass (perform DFF optimizations).

4.9.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.9.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.9.23. Finished OPT passes. (There is nothing left to do.)

4.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 5) from port B of cell toplevel_chip.$auto$fsm_map.cc:77:implement_pattern_cache$4407 ($eq).
Removed top 1 bits (of 3) from port B of cell toplevel_chip.$auto$fsm_map.cc:77:implement_pattern_cache$4479 ($eq).
Removed top 1 bits (of 2) from port B of cell toplevel_chip.$auto$fsm_map.cc:77:implement_pattern_cache$4498 ($eq).
Removed top 1 bits (of 2) from port B of cell toplevel_chip.$auto$opt_dff.cc:195:make_patterns_logic$4616 ($ne).
Removed top 1 bits (of 2) from port B of cell toplevel_chip.$auto$opt_dff.cc:195:make_patterns_logic$4649 ($ne).
Removed top 1 bits (of 2) from port B of cell toplevel_chip.$auto$opt_dff.cc:195:make_patterns_logic$4682 ($ne).
Removed top 1 bits (of 3) from port B of cell toplevel_chip.$auto$opt_dff.cc:195:make_patterns_logic$4721 ($ne).
Removed top 1 bits (of 2) from port B of cell toplevel_chip.$auto$opt_dff.cc:195:make_patterns_logic$4723 ($ne).
Removed top 2 bits (of 4) from port B of cell toplevel_chip.$auto$opt_dff.cc:195:make_patterns_logic$4730 ($ne).
Removed top 1 bits (of 2) from port B of cell toplevel_chip.$auto$opt_dff.cc:195:make_patterns_logic$4747 ($ne).
Removed top 2 bits (of 3) from port B of cell toplevel_chip.$auto$opt_dff.cc:195:make_patterns_logic$4782 ($ne).
Removed top 2 bits (of 10) from port B of cell toplevel_chip.$flatten\mchip.\top.\transmitter.\conductor.$eq$d16_jaehyun3_bobatc/src/Bob.v:1198$259 ($eq).
Removed top 1 bits (of 5) from port B of cell toplevel_chip.$auto$fsm_map.cc:77:implement_pattern_cache$4471 ($eq).
Removed top 3 bits (of 10) from mux cell toplevel_chip.$flatten\mchip.\top.\receiver.\conductor.$procmux$1205 ($mux).
Removed top 1 bits (of 6) from port B of cell toplevel_chip.$auto$fsm_map.cc:77:implement_pattern_cache$4454 ($eq).
Removed top 1 bits (of 6) from port B of cell toplevel_chip.$auto$fsm_map.cc:77:implement_pattern_cache$4376 ($eq).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\transmitter.$add$d16_jaehyun3_bobatc/src/Bob.v:1040$243 ($add).
Removed top 28 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\transmitter.$add$d16_jaehyun3_bobatc/src/Bob.v:1040$243 ($add).
Removed top 26 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_replies.$shiftx$d16_jaehyun3_bobatc/src/Bob.v:0$299 ($shiftx).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:731$300 ($add).
Removed top 30 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:731$300 ($add).
Removed top 27 bits (of 33) from port A of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_replies.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$304 ($neg).
Converting cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_replies.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$304 ($neg) from signed to unsigned.
Removed top 1 bits (of 6) from port A of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_replies.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$304 ($neg).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:733$313 ($add).
Removed top 30 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:733$313 ($add).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_replies.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$324 ($sub).
Removed top 29 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_replies.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$324 ($sub).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:743$344 ($add).
Removed top 29 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:743$344 ($add).
Removed top 2 bits (of 3) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:514$21 ($eq).
Removed top 1 bits (of 3) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\fsm.$eq$d16_jaehyun3_bobatc/src/Bob.v:533$29 ($eq).
Removed top 1 bits (of 2) from mux cell toplevel_chip.$flatten\mchip.\top.\bobby.\fsm.$procmux$1494 ($mux).
Removed top 1 bits (of 2) from mux cell toplevel_chip.$flatten\mchip.\top.\bobby.\fsm.$procmux$1527 ($mux).
Removed top 27 bits (of 32) from port A of cell toplevel_chip.$flatten\mchip.\top.\bobby.\id_manager.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$176 ($neg).
Converting cell toplevel_chip.$flatten\mchip.\top.\bobby.\id_manager.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$176 ($neg) from signed to unsigned.
Removed top 1 bits (of 5) from port A of cell toplevel_chip.$flatten\mchip.\top.\bobby.\id_manager.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$176 ($neg).
Removed top 27 bits (of 32) from port A of cell toplevel_chip.$flatten\mchip.\top.\bobby.\id_manager.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$191 ($neg).
Converting cell toplevel_chip.$flatten\mchip.\top.\bobby.\id_manager.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$191 ($neg) from signed to unsigned.
Removed top 1 bits (of 5) from port A of cell toplevel_chip.$flatten\mchip.\top.\bobby.\id_manager.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$191 ($neg).
Removed top 26 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$shiftx$d16_jaehyun3_bobatc/src/Bob.v:0$381 ($shiftx).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:731$382 ($add).
Removed top 29 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:731$382 ($add).
Removed top 27 bits (of 33) from port A of cell toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$386 ($neg).
Converting cell toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$386 ($neg) from signed to unsigned.
Removed top 1 bits (of 6) from port A of cell toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$386 ($neg).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:733$395 ($add).
Removed top 29 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:733$395 ($add).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$406 ($sub).
Removed top 28 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$406 ($sub).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:743$426 ($add).
Removed top 28 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:743$426 ($add).
Removed top 26 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$shiftx$d16_jaehyun3_bobatc/src/Bob.v:0$381 ($shiftx).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:731$382 ($add).
Removed top 29 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:731$382 ($add).
Removed top 27 bits (of 33) from port A of cell toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$386 ($neg).
Converting cell toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$386 ($neg) from signed to unsigned.
Removed top 1 bits (of 6) from port A of cell toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$386 ($neg).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:733$395 ($add).
Removed top 29 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:733$395 ($add).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$406 ($sub).
Removed top 28 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$406 ($sub).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:743$426 ($add).
Removed top 28 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:743$426 ($add).
Removed top 26 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$shiftx$d16_jaehyun3_bobatc/src/Bob.v:0$299 ($shiftx).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:731$300 ($add).
Removed top 30 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:731$300 ($add).
Removed top 27 bits (of 33) from port A of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$304 ($neg).
Converting cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$304 ($neg) from signed to unsigned.
Removed top 1 bits (of 6) from port A of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$304 ($neg).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:733$313 ($add).
Removed top 30 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:733$313 ($add).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$324 ($sub).
Removed top 29 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$324 ($sub).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:743$344 ($add).
Removed top 29 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:743$344 ($add).
Removed top 2 bits (of 10) from port B of cell toplevel_chip.$flatten\mchip.\top.\receiver.\conductor.$eq$d16_jaehyun3_bobatc/src/Bob.v:1198$259 ($eq).
Removed top 1 bits (of 2) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\fsm.$2\send_clear[1:0].
Removed top 1 bits (of 2) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\fsm.$3\send_clear[1:0].
Removed top 29 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:731$382_Y.
Removed top 29 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:733$395_Y.
Removed top 28 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:743$426_Y.
Removed top 7 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$not$d16_jaehyun3_bobatc/src/Bob.v:0$392_Y.
Removed top 28 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\landing_fifo.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$406_Y.
Removed top 29 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:731$382_Y.
Removed top 29 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:733$395_Y.
Removed top 28 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:743$426_Y.
Removed top 28 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\takeoff_fifo.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$406_Y.
Removed top 30 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:731$300_Y.
Removed top 30 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:731$300_Y.
Removed top 30 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:733$313_Y.
Removed top 29 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:743$344_Y.
Removed top 13 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$not$d16_jaehyun3_bobatc/src/Bob.v:0$310_Y.
Removed top 29 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\bobby.\uart_requests.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$324_Y.
Removed top 3 bits (of 10) from wire toplevel_chip.$flatten\mchip.\top.\receiver.\conductor.$procmux$1205_Y.
Removed top 28 bits (of 32) from wire toplevel_chip.$flatten\mchip.\top.\transmitter.$add$d16_jaehyun3_bobatc/src/Bob.v:1040$243_Y.

4.11. Executing PEEPOPT pass (run peephole optimizers).

4.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 19 unused wires.
<suppressed ~1 debug messages>

4.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module toplevel_chip:
  creating $macc model for $flatten\mchip.\top.\bobby.\id_manager.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$176 ($neg).
  creating $macc model for $flatten\mchip.\top.\bobby.\id_manager.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$191 ($neg).
  creating $macc model for $flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:731$382 ($add).
  creating $macc model for $flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:733$395 ($add).
  creating $macc model for $flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:743$426 ($add).
  creating $macc model for $flatten\mchip.\top.\bobby.\landing_fifo.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$386 ($neg).
  creating $macc model for $flatten\mchip.\top.\bobby.\landing_fifo.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$406 ($sub).
  creating $macc model for $flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:731$382 ($add).
  creating $macc model for $flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:733$395 ($add).
  creating $macc model for $flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:743$426 ($add).
  creating $macc model for $flatten\mchip.\top.\bobby.\takeoff_fifo.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$386 ($neg).
  creating $macc model for $flatten\mchip.\top.\bobby.\takeoff_fifo.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$406 ($sub).
  creating $macc model for $flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:731$300 ($add).
  creating $macc model for $flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:733$313 ($add).
  creating $macc model for $flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:743$344 ($add).
  creating $macc model for $flatten\mchip.\top.\bobby.\uart_replies.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$304 ($neg).
  creating $macc model for $flatten\mchip.\top.\bobby.\uart_replies.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$324 ($sub).
  creating $macc model for $flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:731$300 ($add).
  creating $macc model for $flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:733$313 ($add).
  creating $macc model for $flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:743$344 ($add).
  creating $macc model for $flatten\mchip.\top.\bobby.\uart_requests.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$304 ($neg).
  creating $macc model for $flatten\mchip.\top.\bobby.\uart_requests.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$324 ($sub).
  creating $macc model for $flatten\mchip.\top.\receiver.$add$d16_jaehyun3_bobatc/src/Bob.v:893$258 ($add).
  creating $macc model for $flatten\mchip.\top.\receiver.\conductor.$add$d16_jaehyun3_bobatc/src/Bob.v:1207$262 ($add).
  creating $macc model for $flatten\mchip.\top.\transmitter.$add$d16_jaehyun3_bobatc/src/Bob.v:1040$243 ($add).
  creating $macc model for $flatten\mchip.\top.\transmitter.\conductor.$add$d16_jaehyun3_bobatc/src/Bob.v:1207$262 ($add).
  creating $alu model for $macc $flatten\mchip.\top.\transmitter.\conductor.$add$d16_jaehyun3_bobatc/src/Bob.v:1207$262.
  creating $alu model for $macc $flatten\mchip.\top.\transmitter.$add$d16_jaehyun3_bobatc/src/Bob.v:1040$243.
  creating $alu model for $macc $flatten\mchip.\top.\receiver.\conductor.$add$d16_jaehyun3_bobatc/src/Bob.v:1207$262.
  creating $alu model for $macc $flatten\mchip.\top.\receiver.$add$d16_jaehyun3_bobatc/src/Bob.v:893$258.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\uart_requests.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$324.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\uart_requests.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$304.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:743$344.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:733$313.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:731$300.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\uart_replies.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$324.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\uart_replies.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$304.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:743$344.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:733$313.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:731$300.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\takeoff_fifo.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$406.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\takeoff_fifo.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$386.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:743$426.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:733$395.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:731$382.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\landing_fifo.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$406.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\landing_fifo.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$386.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:743$426.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:733$395.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:731$382.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\id_manager.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$191.
  creating $alu model for $macc $flatten\mchip.\top.\bobby.\id_manager.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$176.
  creating $alu cell for $flatten\mchip.\top.\bobby.\id_manager.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$176: $auto$alumacc.cc:485:replace_alu$4810
  creating $alu cell for $flatten\mchip.\top.\bobby.\id_manager.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$191: $auto$alumacc.cc:485:replace_alu$4813
  creating $alu cell for $flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:731$382: $auto$alumacc.cc:485:replace_alu$4816
  creating $alu cell for $flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:733$395: $auto$alumacc.cc:485:replace_alu$4819
  creating $alu cell for $flatten\mchip.\top.\bobby.\landing_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:743$426: $auto$alumacc.cc:485:replace_alu$4822
  creating $alu cell for $flatten\mchip.\top.\bobby.\landing_fifo.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$386: $auto$alumacc.cc:485:replace_alu$4825
  creating $alu cell for $flatten\mchip.\top.\bobby.\landing_fifo.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$406: $auto$alumacc.cc:485:replace_alu$4828
  creating $alu cell for $flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:731$382: $auto$alumacc.cc:485:replace_alu$4831
  creating $alu cell for $flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:733$395: $auto$alumacc.cc:485:replace_alu$4834
  creating $alu cell for $flatten\mchip.\top.\bobby.\takeoff_fifo.$add$d16_jaehyun3_bobatc/src/Bob.v:743$426: $auto$alumacc.cc:485:replace_alu$4837
  creating $alu cell for $flatten\mchip.\top.\bobby.\takeoff_fifo.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$386: $auto$alumacc.cc:485:replace_alu$4840
  creating $alu cell for $flatten\mchip.\top.\bobby.\takeoff_fifo.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$406: $auto$alumacc.cc:485:replace_alu$4843
  creating $alu cell for $flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:731$300: $auto$alumacc.cc:485:replace_alu$4846
  creating $alu cell for $flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:733$313: $auto$alumacc.cc:485:replace_alu$4849
  creating $alu cell for $flatten\mchip.\top.\bobby.\uart_replies.$add$d16_jaehyun3_bobatc/src/Bob.v:743$344: $auto$alumacc.cc:485:replace_alu$4852
  creating $alu cell for $flatten\mchip.\top.\bobby.\uart_replies.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$304: $auto$alumacc.cc:485:replace_alu$4855
  creating $alu cell for $flatten\mchip.\top.\bobby.\uart_replies.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$324: $auto$alumacc.cc:485:replace_alu$4858
  creating $alu cell for $flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:731$300: $auto$alumacc.cc:485:replace_alu$4861
  creating $alu cell for $flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:733$313: $auto$alumacc.cc:485:replace_alu$4864
  creating $alu cell for $flatten\mchip.\top.\bobby.\uart_requests.$add$d16_jaehyun3_bobatc/src/Bob.v:743$344: $auto$alumacc.cc:485:replace_alu$4867
  creating $alu cell for $flatten\mchip.\top.\bobby.\uart_requests.$neg$d16_jaehyun3_bobatc/src/Bob.v:0$304: $auto$alumacc.cc:485:replace_alu$4870
  creating $alu cell for $flatten\mchip.\top.\bobby.\uart_requests.$sub$d16_jaehyun3_bobatc/src/Bob.v:738$324: $auto$alumacc.cc:485:replace_alu$4873
  creating $alu cell for $flatten\mchip.\top.\receiver.$add$d16_jaehyun3_bobatc/src/Bob.v:893$258: $auto$alumacc.cc:485:replace_alu$4876
  creating $alu cell for $flatten\mchip.\top.\receiver.\conductor.$add$d16_jaehyun3_bobatc/src/Bob.v:1207$262: $auto$alumacc.cc:485:replace_alu$4879
  creating $alu cell for $flatten\mchip.\top.\transmitter.$add$d16_jaehyun3_bobatc/src/Bob.v:1040$243: $auto$alumacc.cc:485:replace_alu$4882
  creating $alu cell for $flatten\mchip.\top.\transmitter.\conductor.$add$d16_jaehyun3_bobatc/src/Bob.v:1207$262: $auto$alumacc.cc:485:replace_alu$4885
  created 26 $alu and 0 $macc cells.

4.14. Executing SHARE pass (SAT-based resource sharing).

4.15. Executing OPT pass (performing simple optimizations).

4.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~80 debug messages>

4.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

4.15.6. Executing OPT_DFF pass (perform DFF optimizations).

4.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

4.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.15.9. Rerunning OPT passes. (Maybe there is more to do..)

4.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~81 debug messages>

4.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.15.13. Executing OPT_DFF pass (perform DFF optimizations).

4.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.15.16. Finished OPT passes. (There is nothing left to do.)

4.16. Executing MEMORY pass.

4.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.16.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.16.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

4.16.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.16.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

4.16.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.16.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.16.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.16.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.18. Executing OPT pass (performing simple optimizations).

4.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~190 debug messages>

4.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

4.18.3. Executing OPT_DFF pass (perform DFF optimizations).

4.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 2 unused cells and 90 unused wires.
<suppressed ~5 debug messages>

4.18.5. Finished fast OPT passes.

4.19. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.20. Executing OPT pass (performing simple optimizations).

4.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~1 debug messages>

4.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\mchip.\top.\bobby.\fsm.$procmux$2611: \mchip.top.bobby.uart_requests.data_out [0] -> 1'1
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\mchip.\top.\bobby.\fsm.$procmux$2127.
Removed 1 multiplexer ports.
<suppressed ~57 debug messages>

4.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
    Consolidated identical input bits for $mux cell $flatten\mchip.\top.\bobby.$procmux$4132:
      Old ports: A=3'110, B=3'111, Y=$flatten\mchip.\top.\bobby.$procmux$4132_Y
      New ports: A=1'0, B=1'1, Y=$flatten\mchip.\top.\bobby.$procmux$4132_Y [0]
      New connections: $flatten\mchip.\top.\bobby.$procmux$4132_Y [2:1] = 2'11
    Consolidated identical input bits for $mux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$1442:
      Old ports: A=2'10, B=2'00, Y=$flatten\mchip.\top.\bobby.\fsm.$5\send_clear[1:0]
      New ports: A=1'1, B=1'0, Y=$flatten\mchip.\top.\bobby.\fsm.$5\send_clear[1:0] [1]
      New connections: $flatten\mchip.\top.\bobby.\fsm.$5\send_clear[1:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$2611:
      Old ports: A=1'1, B=1'1, Y=$flatten\mchip.\top.\bobby.\fsm.$5\unlock[0:0]
      New connections: $flatten\mchip.\top.\bobby.\fsm.$5\unlock[0:0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\mchip.\top.\bobby.\id_manager.$procmux$1310:
      Old ports: A=4'1111, B=4'0000, Y=$flatten\mchip.\top.\bobby.\id_manager.$procmux$1310_Y
      New ports: A=1'1, B=1'0, Y=$flatten\mchip.\top.\bobby.\id_manager.$procmux$1310_Y [0]
      New connections: $flatten\mchip.\top.\bobby.\id_manager.$procmux$1310_Y [3:1] = { $flatten\mchip.\top.\bobby.\id_manager.$procmux$1310_Y [0] $flatten\mchip.\top.\bobby.\id_manager.$procmux$1310_Y [0] $flatten\mchip.\top.\bobby.\id_manager.$procmux$1310_Y [0] }
  Optimizing cells in module \toplevel_chip.
    Consolidated identical input bits for $mux cell $flatten\mchip.\top.\bobby.$procmux$4135:
      Old ports: A=$flatten\mchip.\top.\bobby.$procmux$4132_Y, B=3'110, Y=$flatten\mchip.\top.\bobby.$procmux$4135_Y
      New ports: A=$flatten\mchip.\top.\bobby.$procmux$4132_Y [0], B=1'0, Y=$flatten\mchip.\top.\bobby.$procmux$4135_Y [0]
      New connections: $flatten\mchip.\top.\bobby.$procmux$4135_Y [2:1] = 2'11
    Consolidated identical input bits for $mux cell $flatten\mchip.\top.\bobby.\fsm.$procmux$1472:
      Old ports: A=2'10, B=$flatten\mchip.\top.\bobby.\fsm.$5\send_clear[1:0], Y=$flatten\mchip.\top.\bobby.\fsm.$4\send_clear[1:0]
      New ports: A=1'1, B=$flatten\mchip.\top.\bobby.\fsm.$5\send_clear[1:0] [1], Y=$flatten\mchip.\top.\bobby.\fsm.$4\send_clear[1:0] [1]
      New connections: $flatten\mchip.\top.\bobby.\fsm.$4\send_clear[1:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\top.\bobby.\id_manager.$procmux$1312:
      Old ports: A=4'1110, B=$flatten\mchip.\top.\bobby.\id_manager.$procmux$1310_Y, Y=$flatten\mchip.\top.\bobby.\id_manager.$procmux$1312_Y
      New ports: A=2'10, B={ $flatten\mchip.\top.\bobby.\id_manager.$procmux$1310_Y [0] $flatten\mchip.\top.\bobby.\id_manager.$procmux$1310_Y [0] }, Y=$flatten\mchip.\top.\bobby.\id_manager.$procmux$1312_Y [1:0]
      New connections: $flatten\mchip.\top.\bobby.\id_manager.$procmux$1312_Y [3:2] = { $flatten\mchip.\top.\bobby.\id_manager.$procmux$1312_Y [1] $flatten\mchip.\top.\bobby.\id_manager.$procmux$1312_Y [1] }
  Optimizing cells in module \toplevel_chip.
    Consolidated identical input bits for $mux cell $flatten\mchip.\top.\bobby.$procmux$4138:
      Old ports: A=$flatten\mchip.\top.\bobby.$procmux$4135_Y, B=3'101, Y=$flatten\mchip.\top.\bobby.$procmux$4138_Y
      New ports: A={ 1'1 $flatten\mchip.\top.\bobby.$procmux$4135_Y [0] }, B=2'01, Y=$flatten\mchip.\top.\bobby.$procmux$4138_Y [1:0]
      New connections: $flatten\mchip.\top.\bobby.$procmux$4138_Y [2] = 1'1
    Consolidated identical input bits for $mux cell $flatten\mchip.\top.\bobby.\id_manager.$procmux$1314:
      Old ports: A=4'1101, B=$flatten\mchip.\top.\bobby.\id_manager.$procmux$1312_Y, Y=$flatten\mchip.\top.\bobby.\id_manager.$procmux$1314_Y
      New ports: A=3'101, B={ $flatten\mchip.\top.\bobby.\id_manager.$procmux$1312_Y [1] $flatten\mchip.\top.\bobby.\id_manager.$procmux$1312_Y [1:0] }, Y=$flatten\mchip.\top.\bobby.\id_manager.$procmux$1314_Y [2:0]
      New connections: $flatten\mchip.\top.\bobby.\id_manager.$procmux$1314_Y [3] = $flatten\mchip.\top.\bobby.\id_manager.$procmux$1314_Y [2]
  Optimizing cells in module \toplevel_chip.
    Consolidated identical input bits for $mux cell $flatten\mchip.\top.\bobby.$procmux$4141:
      Old ports: A=$flatten\mchip.\top.\bobby.$procmux$4138_Y, B=3'100, Y=$flatten\mchip.\top.\bobby.$procmux$4141_Y
      New ports: A=$flatten\mchip.\top.\bobby.$procmux$4138_Y [1:0], B=2'00, Y=$flatten\mchip.\top.\bobby.$procmux$4141_Y [1:0]
      New connections: $flatten\mchip.\top.\bobby.$procmux$4141_Y [2] = 1'1
    Consolidated identical input bits for $mux cell $flatten\mchip.\top.\bobby.\id_manager.$procmux$1316:
      Old ports: A=4'1100, B=$flatten\mchip.\top.\bobby.\id_manager.$procmux$1314_Y, Y=$flatten\mchip.\top.\bobby.\id_manager.$procmux$1316_Y
      New ports: A=3'100, B=$flatten\mchip.\top.\bobby.\id_manager.$procmux$1314_Y [2:0], Y=$flatten\mchip.\top.\bobby.\id_manager.$procmux$1316_Y [2:0]
      New connections: $flatten\mchip.\top.\bobby.\id_manager.$procmux$1316_Y [3] = $flatten\mchip.\top.\bobby.\id_manager.$procmux$1316_Y [2]
  Optimizing cells in module \toplevel_chip.
Performed a total of 11 changes.

4.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.20.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\mchip.\top.\bobby.\landing_fifo.$procmux$628 in front of them:
        $auto$alumacc.cc:485:replace_alu$4828
        $auto$alumacc.cc:485:replace_alu$4822

    Found cells that share an operand and can be merged by moving the $mux $flatten\mchip.\top.\bobby.\takeoff_fifo.$procmux$628 in front of them:
        $auto$alumacc.cc:485:replace_alu$4843
        $auto$alumacc.cc:485:replace_alu$4837

    Found cells that share an operand and can be merged by moving the $mux $flatten\mchip.\top.\bobby.\uart_replies.$procmux$970 in front of them:
        $auto$alumacc.cc:485:replace_alu$4858
        $auto$alumacc.cc:485:replace_alu$4852

    Found cells that share an operand and can be merged by moving the $mux $flatten\mchip.\top.\bobby.\uart_requests.$procmux$970 in front of them:
        $auto$alumacc.cc:485:replace_alu$4873
        $auto$alumacc.cc:485:replace_alu$4867

4.20.7. Executing OPT_DFF pass (perform DFF optimizations).

4.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

4.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~12 debug messages>

4.20.10. Rerunning OPT passes. (Maybe there is more to do..)

4.20.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

4.20.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
    Consolidated identical input bits for $mux cell $auto$opt_share.cc:244:merge_operators$4891:
      Old ports: A=4'1111, B=4'0001, Y=$auto$rtlil.cc:2558:Mux$4892
      New ports: A=1'1, B=1'0, Y=$auto$rtlil.cc:2558:Mux$4892 [1]
      New connections: { $auto$rtlil.cc:2558:Mux$4892 [3:2] $auto$rtlil.cc:2558:Mux$4892 [0] } = { $auto$rtlil.cc:2558:Mux$4892 [1] $auto$rtlil.cc:2558:Mux$4892 [1] 1'1 }
    Consolidated identical input bits for $mux cell $auto$opt_share.cc:244:merge_operators$4898:
      Old ports: A=4'1111, B=4'0001, Y=$auto$rtlil.cc:2558:Mux$4899
      New ports: A=1'1, B=1'0, Y=$auto$rtlil.cc:2558:Mux$4899 [1]
      New connections: { $auto$rtlil.cc:2558:Mux$4899 [3:2] $auto$rtlil.cc:2558:Mux$4899 [0] } = { $auto$rtlil.cc:2558:Mux$4899 [1] $auto$rtlil.cc:2558:Mux$4899 [1] 1'1 }
    Consolidated identical input bits for $mux cell $auto$opt_share.cc:244:merge_operators$4905:
      Old ports: A=3'111, B=3'001, Y=$auto$rtlil.cc:2558:Mux$4906
      New ports: A=1'1, B=1'0, Y=$auto$rtlil.cc:2558:Mux$4906 [1]
      New connections: { $auto$rtlil.cc:2558:Mux$4906 [2] $auto$rtlil.cc:2558:Mux$4906 [0] } = { $auto$rtlil.cc:2558:Mux$4906 [1] 1'1 }
    Consolidated identical input bits for $mux cell $auto$opt_share.cc:244:merge_operators$4912:
      Old ports: A=3'111, B=3'001, Y=$auto$rtlil.cc:2558:Mux$4913
      New ports: A=1'1, B=1'0, Y=$auto$rtlil.cc:2558:Mux$4913 [1]
      New connections: { $auto$rtlil.cc:2558:Mux$4913 [2] $auto$rtlil.cc:2558:Mux$4913 [0] } = { $auto$rtlil.cc:2558:Mux$4913 [1] 1'1 }
  Optimizing cells in module \toplevel_chip.
Performed a total of 4 changes.

4.20.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

4.20.14. Executing OPT_SHARE pass.

4.20.15. Executing OPT_DFF pass (perform DFF optimizations).

4.20.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

4.20.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~4 debug messages>

4.20.18. Rerunning OPT passes. (Maybe there is more to do..)

4.20.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

4.20.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.20.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.20.22. Executing OPT_SHARE pass.

4.20.23. Executing OPT_DFF pass (perform DFF optimizations).

4.20.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.20.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.20.26. Finished OPT passes. (There is nothing left to do.)

4.21. Executing TECHMAP pass (map to technology primitives).

4.21.1. Executing Verilog-2005 frontend: /Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using template $paramod$5fb3cea3e36078ed44b85aadf768a6588af6651e\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$constmap:37b3cc4e06391b7a7ef418215dc52e2abb59f048$paramod$282e2f6c0b1116d84b8f8102ddacd7ff760b6794\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_90_alu for cells of type $alu.
Using template $paramod$98fdd47e93ebd6ee7b239851ea6e44b4909054e6\_90_alu for cells of type $alu.
Using template $paramod$constmap:5804069588edb7ff25baa001bebacc87928895c1$paramod$f7d26b43d3f1e8db078109925a281da6be642e01\_90_shift_shiftx for cells of type $shift.
Analyzing pattern of constant bits for this cell:
Creating constmapped module `$paramod$constmap:87f1fa8c8dcb9196cfcf01ac6d09276950f96d52$paramod$f7d26b43d3f1e8db078109925a281da6be642e01\_90_shift_shiftx'.

4.21.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:87f1fa8c8dcb9196cfcf01ac6d09276950f96d52$paramod$f7d26b43d3f1e8db078109925a281da6be642e01\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$6147.
    dead port 2/2 on $mux $procmux$6141.
    dead port 2/2 on $mux $procmux$6135.
    dead port 2/2 on $mux $procmux$6129.
    dead port 2/2 on $mux $procmux$6123.
    dead port 2/2 on $mux $procmux$6117.
Removed 6 multiplexer ports.
<suppressed ~839 debug messages>

4.21.28. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:87f1fa8c8dcb9196cfcf01ac6d09276950f96d52$paramod$f7d26b43d3f1e8db078109925a281da6be642e01\_90_shift_shiftx.
<suppressed ~28 debug messages>
Removed 0 unused cells and 11 unused wires.
Using template $paramod$constmap:87f1fa8c8dcb9196cfcf01ac6d09276950f96d52$paramod$f7d26b43d3f1e8db078109925a281da6be642e01\_90_shift_shiftx for cells of type $shift.
Using template $paramod$constmap:446553370afc6c2aa6cc0b8f657b7f64b237ff7c$paramod$962bb79c2a50a422516483c1c9c06046761917ac\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:d7801926ab4ecd2bd3570493cb586bab22bf12ac$paramod$73504d2b3189e7a53a61f736fd84dc03bdfe7985\_90_shift_shiftx for cells of type $shift.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'0
Creating constmapped module `$paramod$constmap:28d6f7c7c13123157439dd6cfbad5786b226ff76$paramod$73504d2b3189e7a53a61f736fd84dc03bdfe7985\_90_shift_shiftx'.

4.21.43. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:28d6f7c7c13123157439dd6cfbad5786b226ff76$paramod$73504d2b3189e7a53a61f736fd84dc03bdfe7985\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$6904.
    dead port 2/2 on $mux $procmux$6898.
    dead port 2/2 on $mux $procmux$6892.
    dead port 2/2 on $mux $procmux$6886.
    dead port 2/2 on $mux $procmux$6880.
Removed 5 multiplexer ports.
<suppressed ~558 debug messages>

4.21.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:28d6f7c7c13123157439dd6cfbad5786b226ff76$paramod$73504d2b3189e7a53a61f736fd84dc03bdfe7985\_90_shift_shiftx.
<suppressed ~35 debug messages>
Removed 51 unused cells and 69 unused wires.
Using template $paramod$constmap:28d6f7c7c13123157439dd6cfbad5786b226ff76$paramod$73504d2b3189e7a53a61f736fd84dc03bdfe7985\_90_shift_shiftx for cells of type $shift.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$constmap:5bb736f28100a66674c02e4dcb544fb4c600c498$paramod$038383553253758e8f741c3dc0591b3c7e80f6b8\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using template $paramod$constmap:79ee240afdfd622112cdf973c4ee8d97acf4a125$paramod$d26ceb004b1c92f0df605bf9b3fc829369ac4a34\_90_shift_shiftx for cells of type $shift.
Analyzing pattern of constant bits for this cell:
Creating constmapped module `$paramod$constmap:96db1c8882733f290d4b3012b59af5a420ef500e$paramod$d26ceb004b1c92f0df605bf9b3fc829369ac4a34\_90_shift_shiftx'.

4.21.59. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:96db1c8882733f290d4b3012b59af5a420ef500e$paramod$d26ceb004b1c92f0df605bf9b3fc829369ac4a34\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$7307.
    dead port 2/2 on $mux $procmux$7301.
    dead port 2/2 on $mux $procmux$7295.
    dead port 2/2 on $mux $procmux$7289.
    dead port 2/2 on $mux $procmux$7283.
    dead port 2/2 on $mux $procmux$7277.
Removed 6 multiplexer ports.
<suppressed ~477 debug messages>

4.21.60. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:96db1c8882733f290d4b3012b59af5a420ef500e$paramod$d26ceb004b1c92f0df605bf9b3fc829369ac4a34\_90_shift_shiftx.
<suppressed ~28 debug messages>
Removed 0 unused cells and 11 unused wires.
Using template $paramod$constmap:96db1c8882733f290d4b3012b59af5a420ef500e$paramod$d26ceb004b1c92f0df605bf9b3fc829369ac4a34\_90_shift_shiftx for cells of type $shift.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~2657 debug messages>

4.22. Executing OPT pass (performing simple optimizations).

4.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~8922 debug messages>

4.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~3894 debug messages>
Removed a total of 1298 cells.

4.22.3. Executing OPT_DFF pass (perform DFF optimizations).

4.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 567 unused cells and 2675 unused wires.
<suppressed ~569 debug messages>

4.22.5. Finished fast OPT passes.

4.23. Executing ABC pass (technology mapping using ABC).

4.23.1. Extracting gate netlist of module `\toplevel_chip' to `<abc-temp-dir>/input.blif'..
Extracted 2197 gates and 2491 wires to a netlist network with 292 inputs and 310 outputs.

4.23.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.23.1.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:      200
ABC RESULTS:               NOR cells:       36
ABC RESULTS:               NOT cells:       81
ABC RESULTS:             ORNOT cells:      125
ABC RESULTS:              XNOR cells:       18
ABC RESULTS:              NAND cells:      106
ABC RESULTS:                OR cells:      629
ABC RESULTS:            ANDNOT cells:      512
ABC RESULTS:               AND cells:       29
ABC RESULTS:               XOR cells:       60
ABC RESULTS:        internal signals:     1889
ABC RESULTS:           input signals:      292
ABC RESULTS:          output signals:      310
Removing temp directory.

4.24. Executing OPT pass (performing simple optimizations).

4.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~86 debug messages>

4.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

4.24.3. Executing OPT_DFF pass (perform DFF optimizations).

4.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 10 unused cells and 1373 unused wires.
<suppressed ~131 debug messages>

4.24.5. Finished fast OPT passes.

4.25. Executing HIERARCHY pass (managing design hierarchy).

4.25.1. Analyzing design hierarchy..
Top module:  \toplevel_chip

4.25.2. Analyzing design hierarchy..
Top module:  \toplevel_chip
Removed 0 unused modules.

4.26. Printing statistics.

=== toplevel_chip ===

   Number of wires:               1859
   Number of wire bits:           2425
   Number of public wires:         144
   Number of public wire bits:     608
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2073
     $_ANDNOT_                     510
     $_AND_                         29
     $_DFFE_PP_                    128
     $_DFF_P_                       22
     $_MUX_                        199
     $_NAND_                       104
     $_NOR_                         34
     $_NOT_                         71
     $_ORNOT_                      124
     $_OR_                         629
     $_SDFFE_PP0N_                  34
     $_SDFFE_PP0P_                  89
     $_SDFF_PP0_                    21
     $_SDFF_PP1_                     1
     $_XNOR_                        18
     $_XOR_                         60

4.27. Executing CHECK pass (checking for obvious problems).
Checking module toplevel_chip...
Found and reported 0 problems.

5. Executing SETUNDEF pass (replace undef values with defined constants).

6. Executing SETUNDEF pass (replace undef values with defined constants).

7. Executing ASYNC2SYNC pass.

8. Executing SYNTH pass.

8.1. Executing HIERARCHY pass (managing design hierarchy).

8.1.1. Analyzing design hierarchy..
Top module:  \toplevel_chip

8.1.2. Analyzing design hierarchy..
Top module:  \toplevel_chip
Removed 0 unused modules.

8.2. Executing PROC pass (convert processes to netlists).

8.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

8.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

8.2.4. Executing PROC_INIT pass (extract init attributes).

8.2.5. Executing PROC_ARST pass (detect async resets in processes).

8.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

8.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

8.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

8.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

8.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

8.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.5. Executing CHECK pass (checking for obvious problems).
Checking module toplevel_chip...
Found and reported 0 problems.

8.6. Executing OPT pass (performing simple optimizations).

8.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.6.6. Executing OPT_DFF pass (perform DFF optimizations).

8.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.6.9. Finished OPT passes. (There is nothing left to do.)

8.7. Executing FSM pass (extract and optimize FSM).

8.7.1. Executing FSM_DETECT pass (finding FSMs in design).

8.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).

8.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).

8.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).

8.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

8.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

8.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

8.8. Executing OPT pass (performing simple optimizations).

8.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.8.6. Executing OPT_DFF pass (perform DFF optimizations).

8.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.8.9. Finished OPT passes. (There is nothing left to do.)

8.9. Executing WREDUCE pass (reducing word size of cells).

8.10. Executing PEEPOPT pass (run peephole optimizers).

8.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module toplevel_chip:
  created 0 $alu and 0 $macc cells.

8.13. Executing SHARE pass (SAT-based resource sharing).

8.14. Executing OPT pass (performing simple optimizations).

8.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.14.6. Executing OPT_DFF pass (perform DFF optimizations).

8.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.14.9. Finished OPT passes. (There is nothing left to do.)

8.15. Executing MEMORY pass.

8.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

8.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

8.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

8.15.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

8.15.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

8.15.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.15.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

8.15.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

8.15.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.15.10. Executing MEMORY_COLLECT pass (generating $mem cells).

8.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.17. Executing OPT pass (performing simple optimizations).

8.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.17.3. Executing OPT_DFF pass (perform DFF optimizations).

8.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.17.5. Finished fast OPT passes.

8.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

8.19. Executing OPT pass (performing simple optimizations).

8.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.19.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$20217$auto$blifparse.cc:386:parse_blif$20492 in front of them:
        $abc$20217$auto$blifparse.cc:386:parse_blif$20486
        $abc$20217$auto$blifparse.cc:386:parse_blif$20491

8.19.7. Executing OPT_DFF pass (perform DFF optimizations).

8.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

8.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~1 debug messages>

8.19.10. Rerunning OPT passes. (Maybe there is more to do..)

8.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

8.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.19.14. Executing OPT_SHARE pass.

8.19.15. Executing OPT_DFF pass (perform DFF optimizations).

8.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

8.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.19.18. Rerunning OPT passes. (Maybe there is more to do..)

8.19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

8.19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.19.22. Executing OPT_SHARE pass.

8.19.23. Executing OPT_DFF pass (perform DFF optimizations).

8.19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.19.26. Finished OPT passes. (There is nothing left to do.)

8.20. Executing TECHMAP pass (map to technology primitives).

8.20.1. Executing Verilog-2005 frontend: /Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~74 debug messages>

8.21. Executing OPT pass (performing simple optimizations).

8.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.21.3. Executing OPT_DFF pass (perform DFF optimizations).

8.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.21.5. Finished fast OPT passes.

8.22. Executing ABC pass (technology mapping using ABC).

8.22.1. Extracting gate netlist of module `\toplevel_chip' to `<abc-temp-dir>/input.blif'..
Extracted 1777 gates and 2069 wires to a netlist network with 292 inputs and 310 outputs.

8.22.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.22.1.2. Re-integrating ABC results.
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               NOR cells:       45
ABC RESULTS:               NOT cells:       71
ABC RESULTS:               MUX cells:      216
ABC RESULTS:             ORNOT cells:      122
ABC RESULTS:              NAND cells:      121
ABC RESULTS:                OR cells:      586
ABC RESULTS:            ANDNOT cells:      471
ABC RESULTS:               AND cells:       30
ABC RESULTS:               XOR cells:       67
ABC RESULTS:        internal signals:     1467
ABC RESULTS:           input signals:      292
ABC RESULTS:          output signals:      310
Removing temp directory.

8.23. Executing OPT pass (performing simple optimizations).

8.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~100 debug messages>

8.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.23.3. Executing OPT_DFF pass (perform DFF optimizations).

8.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 10 unused cells and 2079 unused wires.
<suppressed ~11 debug messages>

8.23.5. Finished fast OPT passes.

8.24. Executing HIERARCHY pass (managing design hierarchy).

8.24.1. Analyzing design hierarchy..
Top module:  \toplevel_chip

8.24.2. Analyzing design hierarchy..
Top module:  \toplevel_chip
Removed 0 unused modules.

8.25. Printing statistics.

=== toplevel_chip ===

   Number of wires:               1804
   Number of wire bits:           2370
   Number of public wires:         144
   Number of public wire bits:     608
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2018
     $_ANDNOT_                     471
     $_AND_                         30
     $_DFFE_PP_                    128
     $_DFF_P_                       22
     $_MUX_                        216
     $_NAND_                       121
     $_NOR_                         45
     $_NOT_                         61
     $_ORNOT_                      122
     $_OR_                         586
     $_SDFFE_PP0P_                 123
     $_SDFF_PP0_                    21
     $_SDFF_PP1_                     1
     $_XNOR_                         4
     $_XOR_                         67

8.26. Executing CHECK pass (checking for obvious problems).
Checking module toplevel_chip...
Found and reported 0 problems.
Renaming module \toplevel_chip to \d16_jaehyun3_bobatc.

9. Executing Verilog backend.

9.1. Executing BMUXMAP pass.

9.2. Executing DEMUXMAP pass.
Dumping module `\d16_jaehyun3_bobatc'.

10. Executing CHECK pass (checking for obvious problems).
Checking module d16_jaehyun3_bobatc...
Found and reported 0 problems.

11. Printing statistics.

=== d16_jaehyun3_bobatc ===

   Number of wires:               1804
   Number of wire bits:           2370
   Number of public wires:         144
   Number of public wire bits:     608
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2018
     $_ANDNOT_                     471
     $_AND_                         30
     $_DFFE_PP_                    128
     $_DFF_P_                       22
     $_MUX_                        216
     $_NAND_                       121
     $_NOR_                         45
     $_NOT_                         61
     $_ORNOT_                      122
     $_OR_                         586
     $_SDFFE_PP0P_                 123
     $_SDFF_PP0_                    21
     $_SDFF_PP1_                     1
     $_XNOR_                         4
     $_XOR_                         67

Warnings: 5 unique messages, 5 total
End of script. Logfile hash: eda0ad175d, CPU: user 1.73s system 0.07s
Yosys 0.36+3 (git sha1 a53032104, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 28% 62x opt_expr (0 sec), 14% 41x opt_clean (0 sec), ...

