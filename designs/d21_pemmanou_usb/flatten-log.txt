
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.36+3 (git sha1 a53032104, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Running command `read_verilog -sv d21_pemmanou_usb/src/toplevel_chip.v d21_pemmanou_usb/src/chip.sv d21_pemmanou_usb/src/USBHost.v; synth -flatten -top toplevel_chip; setundef -undriven -zero; setundef -zero; async2sync; synth -top toplevel_chip; rename toplevel_chip d21_pemmanou_usb; write_verilog -attr2comment d21_pemmanou_usb/flattened.v; check; stat;' --

1. Executing Verilog-2005 frontend: d21_pemmanou_usb/src/toplevel_chip.v
Parsing SystemVerilog input from `d21_pemmanou_usb/src/toplevel_chip.v' to AST representation.
Generating RTLIL representation for module `\toplevel_chip'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: d21_pemmanou_usb/src/chip.sv
Parsing SystemVerilog input from `d21_pemmanou_usb/src/chip.sv' to AST representation.
Generating RTLIL representation for module `\my_chip'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: d21_pemmanou_usb/src/USBHost.v
Parsing SystemVerilog input from `d21_pemmanou_usb/src/USBHost.v' to AST representation.
Generating RTLIL representation for module `\USBHost'.
Generating RTLIL representation for module `\HOST_INTERFACE'.
Generating RTLIL representation for module `\HALFBYTE_PICKER_64'.
Generating RTLIL representation for module `\HALFBYTE_PICKER_32'.
Generating RTLIL representation for module `\PACKET_SEND'.
Generating RTLIL representation for module `\CRC5'.
Generating RTLIL representation for module `\CRC16'.
Generating RTLIL representation for module `\CRC_DRIVER'.
Generating RTLIL representation for module `\PACKET_SEND_MANAGER'.
Generating RTLIL representation for module `\PACKET_ENCODER'.
Generating RTLIL representation for module `\BIT_STUFFER'.
Generating RTLIL representation for module `\NRZI'.
Generating RTLIL representation for module `\WIRE_DRIVER'.
Generating RTLIL representation for module `\IN_OUT_HANDLER'.
Generating RTLIL representation for module `\READ_WRITE_HANDLER'.
Generating RTLIL representation for module `\WIRE_LISTENER'.
Generating RTLIL representation for module `\SYNC_DETECTOR'.
Generating RTLIL representation for module `\NRZI_DECODER'.
Generating RTLIL representation for module `\BIT_UNSTUFFER'.
Generating RTLIL representation for module `\PACKET_RECEIVER'.
Generating RTLIL representation for module `\PACKET_RECEIVE_MANAGER'.
Generating RTLIL representation for module `\CRC_DRIVER_RECEIVE'.
Generating RTLIL representation for module `\PACKET_RECEIVE'.
Successfully finished Verilog frontend.

4. Executing SYNTH pass.

4.1. Executing HIERARCHY pass (managing design hierarchy).

4.1.1. Analyzing design hierarchy..
Top module:  \toplevel_chip
Used module:     \my_chip
Used module:         \USBHost
Used module:             \READ_WRITE_HANDLER
Used module:             \IN_OUT_HANDLER
Used module:             \PACKET_RECEIVE
Used module:                 \PACKET_RECEIVE_MANAGER
Used module:                 \CRC_DRIVER_RECEIVE
Used module:                     \CRC16
Used module:                     \CRC5
Used module:                 \PACKET_RECEIVER
Used module:                 \BIT_UNSTUFFER
Used module:                 \NRZI_DECODER
Used module:                 \SYNC_DETECTOR
Used module:                 \WIRE_LISTENER
Used module:             \PACKET_SEND
Used module:                 \WIRE_DRIVER
Used module:                 \NRZI
Used module:                 \BIT_STUFFER
Used module:                 \CRC_DRIVER
Used module:                 \PACKET_ENCODER
Used module:                 \PACKET_SEND_MANAGER
Used module:             \HOST_INTERFACE
Used module:                 \HALFBYTE_PICKER_32
Used module:                 \HALFBYTE_PICKER_64

4.1.2. Analyzing design hierarchy..
Top module:  \toplevel_chip
Used module:     \my_chip
Used module:         \USBHost
Used module:             \READ_WRITE_HANDLER
Used module:             \IN_OUT_HANDLER
Used module:             \PACKET_RECEIVE
Used module:                 \PACKET_RECEIVE_MANAGER
Used module:                 \CRC_DRIVER_RECEIVE
Used module:                     \CRC16
Used module:                     \CRC5
Used module:                 \PACKET_RECEIVER
Used module:                 \BIT_UNSTUFFER
Used module:                 \NRZI_DECODER
Used module:                 \SYNC_DETECTOR
Used module:                 \WIRE_LISTENER
Used module:             \PACKET_SEND
Used module:                 \WIRE_DRIVER
Used module:                 \NRZI
Used module:                 \BIT_STUFFER
Used module:                 \CRC_DRIVER
Used module:                 \PACKET_ENCODER
Used module:                 \PACKET_SEND_MANAGER
Used module:             \HOST_INTERFACE
Used module:                 \HALFBYTE_PICKER_32
Used module:                 \HALFBYTE_PICKER_64
Removed 0 unused modules.

4.2. Executing PROC pass (convert processes to netlists).

4.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1813$454 in module PACKET_RECEIVE_MANAGER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1808$452 in module PACKET_RECEIVE_MANAGER.
Removed 1 dead cases from process $proc$d21_pemmanou_usb/src/USBHost.v:1714$445 in module PACKET_RECEIVE_MANAGER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1714$445 in module PACKET_RECEIVE_MANAGER.
Removed 1 dead cases from process $proc$d21_pemmanou_usb/src/USBHost.v:1652$391 in module PACKET_RECEIVE_MANAGER.
Marked 10 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1652$391 in module PACKET_RECEIVE_MANAGER.
Marked 2 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1584$389 in module PACKET_RECEIVER.
Marked 2 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1545$385 in module BIT_UNSTUFFER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1534$380 in module BIT_UNSTUFFER.
Marked 2 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1508$377 in module NRZI_DECODER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1483$369 in module SYNC_DETECTOR.
Removed 1 dead cases from process $proc$d21_pemmanou_usb/src/USBHost.v:1451$365 in module WIRE_LISTENER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1451$365 in module WIRE_LISTENER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1442$359 in module WIRE_LISTENER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1416$357 in module READ_WRITE_HANDLER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1364$335 in module READ_WRITE_HANDLER.
Marked 7 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1337$330 in module READ_WRITE_HANDLER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1284$327 in module IN_OUT_HANDLER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1279$325 in module IN_OUT_HANDLER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1274$322 in module IN_OUT_HANDLER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1265$320 in module IN_OUT_HANDLER.
Marked 3 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1164$277 in module IN_OUT_HANDLER.
Marked 9 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1126$264 in module IN_OUT_HANDLER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1062$255 in module WIRE_DRIVER.
Removed 1 dead cases from process $proc$d21_pemmanou_usb/src/USBHost.v:1023$253 in module WIRE_DRIVER.
Marked 4 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1023$253 in module WIRE_DRIVER.
Marked 4 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:1012$247 in module WIRE_DRIVER.
Marked 2 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:984$242 in module NRZI.
Marked 2 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:958$237 in module BIT_STUFFER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:947$232 in module BIT_STUFFER.
Marked 3 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:919$220 in module PACKET_ENCODER.
Marked 3 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:903$212 in module PACKET_ENCODER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:840$205 in module PACKET_SEND_MANAGER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:835$203 in module PACKET_SEND_MANAGER.
Removed 1 dead cases from process $proc$d21_pemmanou_usb/src/USBHost.v:738$199 in module PACKET_SEND_MANAGER.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:738$199 in module PACKET_SEND_MANAGER.
Removed 1 dead cases from process $proc$d21_pemmanou_usb/src/USBHost.v:678$147 in module PACKET_SEND_MANAGER.
Marked 9 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:678$147 in module PACKET_SEND_MANAGER.
Marked 2 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:544$99 in module CRC16.
Marked 2 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:506$89 in module CRC5.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:363$85 in module HALFBYTE_PICKER_32.
Removed 1 dead cases from process $proc$d21_pemmanou_usb/src/USBHost.v:334$84 in module HALFBYTE_PICKER_64.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:334$84 in module HALFBYTE_PICKER_64.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:320$82 in module HOST_INTERFACE.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:315$79 in module HOST_INTERFACE.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:302$77 in module HOST_INTERFACE.
Marked 1 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:297$75 in module HOST_INTERFACE.
Marked 3 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:226$24 in module HOST_INTERFACE.
Marked 3 switch rules as full_case in process $proc$d21_pemmanou_usb/src/USBHost.v:58$13 in module USBHost.
Removed a total of 7 dead cases.

4.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 32 redundant assignments.
Promoted 221 assignments to connections.

4.2.4. Executing PROC_INIT pass (extract init attributes).

4.2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset_n in `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1813$454'.
Found async reset \reset_n in `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1808$452'.
Found async reset \reset_n in `\PACKET_RECEIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1584$389'.
Found async reset \reset_n in `\BIT_UNSTUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:1545$385'.
Found async reset \reset_n in `\NRZI_DECODER.$proc$d21_pemmanou_usb/src/USBHost.v:1508$377'.
Found async reset \reset_n in `\SYNC_DETECTOR.$proc$d21_pemmanou_usb/src/USBHost.v:1483$369'.
Found async reset \reset_n in `\WIRE_LISTENER.$proc$d21_pemmanou_usb/src/USBHost.v:1442$359'.
Found async reset \reset_n in `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1416$357'.
Found async reset \reset_n in `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1284$327'.
Found async reset \reset_n in `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1279$325'.
Found async reset \reset_n in `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1274$322'.
Found async reset \reset_n in `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1265$320'.
Found async reset \reset_n in `\WIRE_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1062$255'.
Found async reset \reset_n in `\NRZI.$proc$d21_pemmanou_usb/src/USBHost.v:984$242'.
Found async reset \reset_n in `\BIT_STUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:958$237'.
Found async reset \reset_n in `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:840$205'.
Found async reset \reset_n in `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:835$203'.
Found async reset \reset_n in `\CRC16.$proc$d21_pemmanou_usb/src/USBHost.v:544$99'.
Found async reset \reset_n in `\CRC5.$proc$d21_pemmanou_usb/src/USBHost.v:506$89'.
Found async reset \reset_n in `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:320$82'.
Found async reset \reset_n in `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:315$79'.
Found async reset \reset_n in `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:302$77'.
Found async reset \reset_n in `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:297$75'.

4.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.
<suppressed ~72 debug messages>

4.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\CRC_DRIVER_RECEIVE.$proc$d21_pemmanou_usb/src/USBHost.v:1847$457'.
Creating decoders for process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1813$454'.
     1/1: $0\count[6:0]
Creating decoders for process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1808$452'.
     1/1: $0\cur_state[2:0]
Creating decoders for process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1714$445'.
     1/9: $1\hard_init[0:0]
     2/9: $1\send_done[0:0]
     3/9: $1\nrzi_init[0:0]
     4/9: $1\nrzi_en[0:0]
     5/9: $1\stuff_en[0:0]
     6/9: $1\crc_init[0:0]
     7/9: $1\crc_select[0:0]
     8/9: $1\packet_phase[1:0]
     9/9: $1\crc_pause[0:0]
Creating decoders for process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1652$391'.
     1/12: $7\count_next[6:0]
     2/12: $6\count_next[6:0]
     3/12: $5\count_next[6:0]
     4/12: $4\count_next[6:0]
     5/12: $3\count_next[6:0]
     6/12: $5\next_state[2:0]
     7/12: $4\next_state[2:0]
     8/12: $3\next_state[2:0]
     9/12: $2\next_state[2:0]
    10/12: $2\count_next[6:0]
    11/12: $1\count_next[6:0]
    12/12: $1\next_state[2:0]
Creating decoders for process `\PACKET_RECEIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1584$389'.
     1/3: $0\PAYLOAD_accum[63:0]
     2/3: $0\ADDR_ENDP_accum[10:0]
     3/3: $0\PID_accum[7:0]
Creating decoders for process `\BIT_UNSTUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:1545$385'.
     1/1: $0\count[2:0]
Creating decoders for process `\BIT_UNSTUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:1534$380'.
     1/3: $1\is_stuffing[0:0]
     2/3: $1\count_next[2:0]
     3/3: $1\bit_out[0:0]
Creating decoders for process `\NRZI_DECODER.$proc$d21_pemmanou_usb/src/USBHost.v:1508$377'.
     1/1: $0\cur_value[0:0]
Creating decoders for process `\SYNC_DETECTOR.$proc$d21_pemmanou_usb/src/USBHost.v:1483$369'.
     1/1: $0\log[7:0]
Creating decoders for process `\WIRE_LISTENER.$proc$d21_pemmanou_usb/src/USBHost.v:1451$365'.
     1/2: $1\invalid[0:0]
     2/2: $1\bit_out[0:0]
Creating decoders for process `\WIRE_LISTENER.$proc$d21_pemmanou_usb/src/USBHost.v:1442$359'.
     1/2: $0\dm_log[2:0]
     2/2: $0\dp_log[2:0]
Creating decoders for process `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1416$357'.
     1/1: $0\cur_state[2:0]
Creating decoders for process `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1364$335'.
     1/6: $1\addr_or_data[0:0]
     2/6: $1\out_data[63:0]
     3/6: $1\make_in[0:0]
     4/6: $1\make_out[0:0]
     5/6: $1\finished_with_error[0:0]
     6/6: $1\finished[0:0]
Creating decoders for process `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1337$330'.
     1/7: $7\next_state[2:0]
     2/7: $6\next_state[2:0]
     3/7: $5\next_state[2:0]
     4/7: $4\next_state[2:0]
     5/7: $3\next_state[2:0]
     6/7: $2\next_state[2:0]
     7/7: $1\next_state[2:0]
Creating decoders for process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1284$327'.
     1/3: $0\timer[8:0]
     2/3: $0\timeout_counter[3:0]
     3/3: $0\error_counter[3:0]
Creating decoders for process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1279$325'.
     1/1: $0\cur_state[3:0]
Creating decoders for process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1274$322'.
     1/1: $0\final_data[63:0]
Creating decoders for process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1265$320'.
     1/2: $0\ended_with_errors[0:0]
     2/2: $0\completed_transaction[0:0]
Creating decoders for process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1264$315'.
Creating decoders for process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1164$277'.
     1/10: $3\PID_to_sender[3:0]
     2/10: $2\PID_to_sender[3:0]
     3/10: $1\completed_transaction_log[0:0]
     4/10: $1\data_to_sender[63:0]
     5/10: $1\PID_to_sender[3:0]
     6/10: $1\expect_packet[0:0]
     7/10: $1\send_packet[0:0]
     8/10: $1\timer_nxt[8:0]
     9/10: $1\timeout_counter_nxt[3:0]
    10/10: $1\error_counter_nxt[3:0]
Creating decoders for process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1126$264'.
     1/9: $9\next_state[3:0]
     2/9: $8\next_state[3:0]
     3/9: $7\next_state[3:0]
     4/9: $6\next_state[3:0]
     5/9: $5\next_state[3:0]
     6/9: $4\next_state[3:0]
     7/9: $3\next_state[3:0]
     8/9: $2\next_state[3:0]
     9/9: $1\next_state[3:0]
Creating decoders for process `\WIRE_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1062$255'.
     1/1: $0\cur_state[1:0]
Creating decoders for process `\WIRE_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1023$253'.
     1/8: $4\drive_dm[0:0]
     2/8: $4\drive_dp[0:0]
     3/8: $3\drive_dm[0:0]
     4/8: $3\drive_dp[0:0]
     5/8: $2\drive_dm[0:0]
     6/8: $2\drive_dp[0:0]
     7/8: $1\drive_dm[0:0]
     8/8: $1\drive_dp[0:0]
Creating decoders for process `\WIRE_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1012$247'.
     1/4: $4\next_state[1:0]
     2/4: $3\next_state[1:0]
     3/4: $2\next_state[1:0]
     4/4: $1\next_state[1:0]
Creating decoders for process `\NRZI.$proc$d21_pemmanou_usb/src/USBHost.v:984$242'.
     1/1: $0\cur_value[0:0]
Creating decoders for process `\BIT_STUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:958$237'.
     1/1: $0\count[2:0]
Creating decoders for process `\BIT_STUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:947$232'.
     1/3: $1\is_stuffing[0:0]
     2/3: $1\count_next[2:0]
     3/3: $1\bit_out[0:0]
Creating decoders for process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:919$220'.
     1/3: $3\bit_out[0:0]
     2/3: $2\bit_out[0:0]
     3/3: $1\bit_out[0:0]
Creating decoders for process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:903$212'.
     1/9: $3\acknak_register[15:0]
     2/9: $3\inout_register[26:0]
     3/9: $3\data_register[95:0]
     4/9: $2\data_register[95:0]
     5/9: $2\inout_register[26:0]
     6/9: $2\acknak_register[15:0]
     7/9: $1\inout_register[26:0]
     8/9: $1\acknak_register[15:0]
     9/9: $1\data_register[95:0]
Creating decoders for process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:879$207'.
Creating decoders for process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:840$205'.
     1/1: $0\count[6:0]
Creating decoders for process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:835$203'.
     1/1: $0\cur_state[2:0]
Creating decoders for process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
     1/14: $1\hard_init[0:0]
     2/14: $1\nrzi_init[0:0]
     3/14: $1\packet_phase[1:0]
     4/14: $1\wire_en[0:0]
     5/14: $1\nrzi_en[0:0]
     6/14: $1\stuff_en[0:0]
     7/14: $1\crc_init[0:0]
     8/14: $1\crc_select[0:0]
     9/14: $1\crc_index[6:0]
    10/14: $1\packet_index[6:0]
    11/14: $1\crc_pause[0:0]
    12/14: $1\is_eop[0:0]
    13/14: $1\encoder_or_crc[0:0]
    14/14: $1\send_done[0:0]
Creating decoders for process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:678$147'.
     1/11: $7\count_next[6:0]
     2/11: $6\count_next[6:0]
     3/11: $5\count_next[6:0]
     4/11: $4\count_next[6:0]
     5/11: $3\count_next[6:0]
     6/11: $4\next_state[2:0]
     7/11: $3\next_state[2:0]
     8/11: $2\next_state[2:0]
     9/11: $2\count_next[6:0]
    10/11: $1\count_next[6:0]
    11/11: $1\next_state[2:0]
Creating decoders for process `\CRC_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:600$120'.
Creating decoders for process `\CRC16.$proc$d21_pemmanou_usb/src/USBHost.v:544$99'.
     1/19: $2\sv2v_autoblock_2.i[31:0]
     2/19: $0\crc16_out[15:0] [15]
     3/19: $0\crc16_out[15:0] [14]
     4/19: $0\crc16_out[15:0] [13]
     5/19: $0\crc16_out[15:0] [12]
     6/19: $0\crc16_out[15:0] [11]
     7/19: $0\crc16_out[15:0] [10]
     8/19: $0\crc16_out[15:0] [9]
     9/19: $0\crc16_out[15:0] [8]
    10/19: $0\crc16_out[15:0] [7]
    11/19: $0\crc16_out[15:0] [6]
    12/19: $0\crc16_out[15:0] [5]
    13/19: $0\crc16_out[15:0] [4]
    14/19: $0\crc16_out[15:0] [3]
    15/19: $0\crc16_out[15:0] [2]
    16/19: $0\crc16_out[15:0] [1]
    17/19: $0\crc16_out[15:0] [0]
    18/19: $1\sv2v_autoblock_2.i[31:0]
    19/19: $1\sv2v_autoblock_1.i[31:0]
Creating decoders for process `\CRC5.$proc$d21_pemmanou_usb/src/USBHost.v:506$89'.
     1/8: $2\sv2v_autoblock_2.i[31:0]
     2/8: $0\crc5_out[4:0] [4]
     3/8: $0\crc5_out[4:0] [3]
     4/8: $0\crc5_out[4:0] [2]
     5/8: $0\crc5_out[4:0] [1]
     6/8: $0\crc5_out[4:0] [0]
     7/8: $1\sv2v_autoblock_2.i[31:0]
     8/8: $1\sv2v_autoblock_1.i[31:0]
Creating decoders for process `\HALFBYTE_PICKER_32.$proc$d21_pemmanou_usb/src/USBHost.v:363$85'.
     1/1: $1\halfbyte[3:0]
Creating decoders for process `\HALFBYTE_PICKER_64.$proc$d21_pemmanou_usb/src/USBHost.v:334$84'.
     1/1: $1\halfbyte[3:0]
Creating decoders for process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:320$82'.
     1/1: $0\count[3:0]
Creating decoders for process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:315$79'.
     1/1: $0\data_in_reg[63:0]
Creating decoders for process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:302$77'.
     1/4: $0\data_out_reg[63:0]
     2/4: $0\mempage_reg[15:0]
     3/4: $0\Addr_reg[7:0]
     4/4: $0\ENDP_reg[7:0]
Creating decoders for process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:297$75'.
     1/1: $0\cur_state[3:0]
Creating decoders for process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:226$24'.
     1/10: $3\next_state[3:0]
     2/10: $2\next_state[3:0]
     3/10: $1\next_state[3:0]
     4/10: $1\count_next[3:0]
     5/10: $1\data_out_reg_next[63:0]
     6/10: $1\mempage_reg_next[15:0]
     7/10: $1\Addr_reg_next[7:0]
     8/10: $1\ENDP_reg_next[7:0]
     9/10: $1\data_out[3:0]
    10/10: $1\data_indx[3:0]
Creating decoders for process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:203$22'.
Creating decoders for process `\USBHost.$proc$d21_pemmanou_usb/src/USBHost.v:58$13'.
     1/3: $3\status[1:0]
     2/3: $2\status[1:0]
     3/3: $1\status[1:0]

4.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\CRC_DRIVER_RECEIVE.\sv2v_autoblock_1.i' from process `\CRC_DRIVER_RECEIVE.$proc$d21_pemmanou_usb/src/USBHost.v:1847$457'.
No latch inferred for signal `\CRC_DRIVER_RECEIVE.\crc5_out_inv' from process `\CRC_DRIVER_RECEIVE.$proc$d21_pemmanou_usb/src/USBHost.v:1847$457'.
No latch inferred for signal `\CRC_DRIVER_RECEIVE.\crc16_out_inv' from process `\CRC_DRIVER_RECEIVE.$proc$d21_pemmanou_usb/src/USBHost.v:1847$457'.
No latch inferred for signal `\CRC_DRIVER_RECEIVE.\sv2v_autoblock_2.j' from process `\CRC_DRIVER_RECEIVE.$proc$d21_pemmanou_usb/src/USBHost.v:1847$457'.
No latch inferred for signal `\PACKET_RECEIVE_MANAGER.\send_done' from process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1714$445'.
No latch inferred for signal `\PACKET_RECEIVE_MANAGER.\crc_select' from process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1714$445'.
No latch inferred for signal `\PACKET_RECEIVE_MANAGER.\crc_init' from process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1714$445'.
No latch inferred for signal `\PACKET_RECEIVE_MANAGER.\stuff_en' from process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1714$445'.
No latch inferred for signal `\PACKET_RECEIVE_MANAGER.\nrzi_en' from process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1714$445'.
No latch inferred for signal `\PACKET_RECEIVE_MANAGER.\crc_pause' from process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1714$445'.
No latch inferred for signal `\PACKET_RECEIVE_MANAGER.\hard_init' from process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1714$445'.
No latch inferred for signal `\PACKET_RECEIVE_MANAGER.\nrzi_init' from process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1714$445'.
No latch inferred for signal `\PACKET_RECEIVE_MANAGER.\packet_phase' from process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1714$445'.
No latch inferred for signal `\PACKET_RECEIVE_MANAGER.\count_next' from process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1652$391'.
No latch inferred for signal `\PACKET_RECEIVE_MANAGER.\next_state' from process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1652$391'.
No latch inferred for signal `\BIT_UNSTUFFER.\count_next' from process `\BIT_UNSTUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:1534$380'.
No latch inferred for signal `\BIT_UNSTUFFER.\bit_out' from process `\BIT_UNSTUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:1534$380'.
No latch inferred for signal `\BIT_UNSTUFFER.\is_stuffing' from process `\BIT_UNSTUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:1534$380'.
No latch inferred for signal `\WIRE_LISTENER.\bit_out' from process `\WIRE_LISTENER.$proc$d21_pemmanou_usb/src/USBHost.v:1451$365'.
No latch inferred for signal `\WIRE_LISTENER.\invalid' from process `\WIRE_LISTENER.$proc$d21_pemmanou_usb/src/USBHost.v:1451$365'.
No latch inferred for signal `\READ_WRITE_HANDLER.\addr_or_data' from process `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1364$335'.
No latch inferred for signal `\READ_WRITE_HANDLER.\make_in' from process `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1364$335'.
No latch inferred for signal `\READ_WRITE_HANDLER.\make_out' from process `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1364$335'.
No latch inferred for signal `\READ_WRITE_HANDLER.\finished' from process `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1364$335'.
No latch inferred for signal `\READ_WRITE_HANDLER.\finished_with_error' from process `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1364$335'.
No latch inferred for signal `\READ_WRITE_HANDLER.\out_data' from process `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1364$335'.
No latch inferred for signal `\READ_WRITE_HANDLER.\next_state' from process `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1337$330'.
No latch inferred for signal `\IN_OUT_HANDLER.\ended_with_errors_log' from process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1264$315'.
No latch inferred for signal `\IN_OUT_HANDLER.\send_packet' from process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1164$277'.
No latch inferred for signal `\IN_OUT_HANDLER.\expect_packet' from process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1164$277'.
No latch inferred for signal `\IN_OUT_HANDLER.\PID_to_sender' from process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1164$277'.
No latch inferred for signal `\IN_OUT_HANDLER.\data_to_sender' from process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1164$277'.
No latch inferred for signal `\IN_OUT_HANDLER.\ENDP_to_sender' from process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1164$277'.
No latch inferred for signal `\IN_OUT_HANDLER.\error_counter_nxt' from process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1164$277'.
No latch inferred for signal `\IN_OUT_HANDLER.\timeout_counter_nxt' from process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1164$277'.
No latch inferred for signal `\IN_OUT_HANDLER.\timer_nxt' from process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1164$277'.
No latch inferred for signal `\IN_OUT_HANDLER.\completed_transaction_log' from process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1164$277'.
No latch inferred for signal `\IN_OUT_HANDLER.\next_state' from process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1126$264'.
No latch inferred for signal `\WIRE_DRIVER.\drive_dp' from process `\WIRE_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1023$253'.
No latch inferred for signal `\WIRE_DRIVER.\drive_dm' from process `\WIRE_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1023$253'.
No latch inferred for signal `\WIRE_DRIVER.\next_state' from process `\WIRE_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1012$247'.
No latch inferred for signal `\BIT_STUFFER.\count_next' from process `\BIT_STUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:947$232'.
No latch inferred for signal `\BIT_STUFFER.\bit_out' from process `\BIT_STUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:947$232'.
No latch inferred for signal `\BIT_STUFFER.\is_stuffing' from process `\BIT_STUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:947$232'.
No latch inferred for signal `\PACKET_ENCODER.\bit_out' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:919$220'.
No latch inferred for signal `\PACKET_ENCODER.\data_register' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:903$212'.
No latch inferred for signal `\PACKET_ENCODER.\acknak_register' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:903$212'.
No latch inferred for signal `\PACKET_ENCODER.\inout_register' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:903$212'.
No latch inferred for signal `\PACKET_ENCODER.\sv2v_autoblock_1.i' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:879$207'.
No latch inferred for signal `\PACKET_ENCODER.\sv2v_autoblock_2.j' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:879$207'.
No latch inferred for signal `\PACKET_ENCODER.\PID_lsb' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:879$207'.
No latch inferred for signal `\PACKET_ENCODER.\PID_lsb_inv' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:879$207'.
No latch inferred for signal `\PACKET_ENCODER.\ENDP_lsb' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:879$207'.
No latch inferred for signal `\PACKET_ENCODER.\Addr_lsb' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:879$207'.
No latch inferred for signal `\PACKET_ENCODER.\Payload_lsb' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:879$207'.
No latch inferred for signal `\PACKET_ENCODER.\SYNC' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:879$207'.
No latch inferred for signal `\PACKET_ENCODER.\PID_full' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:879$207'.
No latch inferred for signal `\PACKET_ENCODER.\Addr_Endp_register' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:879$207'.
No latch inferred for signal `\PACKET_ENCODER.\sv2v_autoblock_3.k' from process `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:879$207'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\send_done' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\encoder_or_crc' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\crc_select' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\crc_init' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\stuff_en' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\nrzi_en' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\wire_en' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\is_eop' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\packet_pause' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\crc_pause' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\hard_init' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\nrzi_init' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\crc_index' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\packet_index' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\packet_phase' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\count_next' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:678$147'.
No latch inferred for signal `\PACKET_SEND_MANAGER.\next_state' from process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:678$147'.
No latch inferred for signal `\CRC_DRIVER.\sv2v_autoblock_1.i' from process `\CRC_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:600$120'.
No latch inferred for signal `\CRC_DRIVER.\crc5_out_inv' from process `\CRC_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:600$120'.
No latch inferred for signal `\CRC_DRIVER.\crc16_out_inv' from process `\CRC_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:600$120'.
No latch inferred for signal `\CRC_DRIVER.\sv2v_autoblock_2.j' from process `\CRC_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:600$120'.
No latch inferred for signal `\HALFBYTE_PICKER_32.\halfbyte' from process `\HALFBYTE_PICKER_32.$proc$d21_pemmanou_usb/src/USBHost.v:363$85'.
No latch inferred for signal `\HALFBYTE_PICKER_64.\halfbyte' from process `\HALFBYTE_PICKER_64.$proc$d21_pemmanou_usb/src/USBHost.v:334$84'.
No latch inferred for signal `\HOST_INTERFACE.\data_indx' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:226$24'.
No latch inferred for signal `\HOST_INTERFACE.\data_out' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:226$24'.
No latch inferred for signal `\HOST_INTERFACE.\ENDP_reg_next' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:226$24'.
No latch inferred for signal `\HOST_INTERFACE.\Addr_reg_next' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:226$24'.
No latch inferred for signal `\HOST_INTERFACE.\mempage_reg_next' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:226$24'.
No latch inferred for signal `\HOST_INTERFACE.\data_out_reg_next' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:226$24'.
No latch inferred for signal `\HOST_INTERFACE.\count_next' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:226$24'.
No latch inferred for signal `\HOST_INTERFACE.\next_state' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:226$24'.
No latch inferred for signal `\HOST_INTERFACE.\send_Addr' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:203$22'.
No latch inferred for signal `\HOST_INTERFACE.\is_idle' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:203$22'.
No latch inferred for signal `\HOST_INTERFACE.\data_ENDP' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:203$22'.
No latch inferred for signal `\HOST_INTERFACE.\addr_ENDP' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:203$22'.
No latch inferred for signal `\HOST_INTERFACE.\mempage' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:203$22'.
No latch inferred for signal `\HOST_INTERFACE.\memdata' from process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:203$22'.
No latch inferred for signal `\USBHost.\status' from process `\USBHost.$proc$d21_pemmanou_usb/src/USBHost.v:58$13'.
No latch inferred for signal `\USBHost.\do_read' from process `\USBHost.$proc$d21_pemmanou_usb/src/USBHost.v:58$13'.
No latch inferred for signal `\USBHost.\do_write' from process `\USBHost.$proc$d21_pemmanou_usb/src/USBHost.v:58$13'.
No latch inferred for signal `\USBHost.\data_received' from process `\USBHost.$proc$d21_pemmanou_usb/src/USBHost.v:58$13'.
No latch inferred for signal `\USBHost.\en_interface' from process `\USBHost.$proc$d21_pemmanou_usb/src/USBHost.v:58$13'.

4.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\PACKET_RECEIVE_MANAGER.\count' using process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1813$454'.
  created $adff cell `$procdff$1632' with positive edge clock and negative level reset.
Creating register for signal `\PACKET_RECEIVE_MANAGER.\cur_state' using process `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1808$452'.
  created $adff cell `$procdff$1633' with positive edge clock and negative level reset.
Creating register for signal `\PACKET_RECEIVER.\PID_accum' using process `\PACKET_RECEIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1584$389'.
  created $adff cell `$procdff$1634' with positive edge clock and negative level reset.
Creating register for signal `\PACKET_RECEIVER.\ADDR_ENDP_accum' using process `\PACKET_RECEIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1584$389'.
  created $adff cell `$procdff$1635' with positive edge clock and negative level reset.
Creating register for signal `\PACKET_RECEIVER.\PAYLOAD_accum' using process `\PACKET_RECEIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1584$389'.
  created $adff cell `$procdff$1636' with positive edge clock and negative level reset.
Creating register for signal `\BIT_UNSTUFFER.\count' using process `\BIT_UNSTUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:1545$385'.
  created $adff cell `$procdff$1637' with positive edge clock and negative level reset.
Creating register for signal `\NRZI_DECODER.\cur_value' using process `\NRZI_DECODER.$proc$d21_pemmanou_usb/src/USBHost.v:1508$377'.
  created $adff cell `$procdff$1638' with positive edge clock and negative level reset.
Creating register for signal `\SYNC_DETECTOR.\log' using process `\SYNC_DETECTOR.$proc$d21_pemmanou_usb/src/USBHost.v:1483$369'.
  created $adff cell `$procdff$1639' with positive edge clock and negative level reset.
Creating register for signal `\WIRE_LISTENER.\dp_log' using process `\WIRE_LISTENER.$proc$d21_pemmanou_usb/src/USBHost.v:1442$359'.
  created $adff cell `$procdff$1640' with positive edge clock and negative level reset.
Creating register for signal `\WIRE_LISTENER.\dm_log' using process `\WIRE_LISTENER.$proc$d21_pemmanou_usb/src/USBHost.v:1442$359'.
  created $adff cell `$procdff$1641' with positive edge clock and negative level reset.
Creating register for signal `\READ_WRITE_HANDLER.\cur_state' using process `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1416$357'.
  created $adff cell `$procdff$1642' with positive edge clock and negative level reset.
Creating register for signal `\IN_OUT_HANDLER.\error_counter' using process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1284$327'.
  created $adff cell `$procdff$1643' with positive edge clock and negative level reset.
Creating register for signal `\IN_OUT_HANDLER.\timeout_counter' using process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1284$327'.
  created $adff cell `$procdff$1644' with positive edge clock and negative level reset.
Creating register for signal `\IN_OUT_HANDLER.\timer' using process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1284$327'.
  created $adff cell `$procdff$1645' with positive edge clock and negative level reset.
Creating register for signal `\IN_OUT_HANDLER.\cur_state' using process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1279$325'.
  created $adff cell `$procdff$1646' with positive edge clock and negative level reset.
Creating register for signal `\IN_OUT_HANDLER.\final_data' using process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1274$322'.
  created $adff cell `$procdff$1647' with positive edge clock and negative level reset.
Creating register for signal `\IN_OUT_HANDLER.\completed_transaction' using process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1265$320'.
  created $adff cell `$procdff$1648' with positive edge clock and negative level reset.
Creating register for signal `\IN_OUT_HANDLER.\ended_with_errors' using process `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1265$320'.
  created $adff cell `$procdff$1649' with positive edge clock and negative level reset.
Creating register for signal `\WIRE_DRIVER.\cur_state' using process `\WIRE_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1062$255'.
  created $adff cell `$procdff$1650' with positive edge clock and negative level reset.
Creating register for signal `\NRZI.\cur_value' using process `\NRZI.$proc$d21_pemmanou_usb/src/USBHost.v:984$242'.
  created $adff cell `$procdff$1651' with positive edge clock and negative level reset.
Creating register for signal `\BIT_STUFFER.\count' using process `\BIT_STUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:958$237'.
  created $adff cell `$procdff$1652' with positive edge clock and negative level reset.
Creating register for signal `\PACKET_SEND_MANAGER.\count' using process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:840$205'.
  created $adff cell `$procdff$1653' with positive edge clock and negative level reset.
Creating register for signal `\PACKET_SEND_MANAGER.\cur_state' using process `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:835$203'.
  created $adff cell `$procdff$1654' with positive edge clock and negative level reset.
Creating register for signal `\CRC16.\sv2v_autoblock_1.i' using process `\CRC16.$proc$d21_pemmanou_usb/src/USBHost.v:544$99'.
  created $adff cell `$procdff$1655' with positive edge clock and negative level reset.
Creating register for signal `\CRC16.\sv2v_autoblock_2.i' using process `\CRC16.$proc$d21_pemmanou_usb/src/USBHost.v:544$99'.
  created $dff cell `$procdff$1658' with positive edge clock.
Creating register for signal `\CRC16.\crc16_out' using process `\CRC16.$proc$d21_pemmanou_usb/src/USBHost.v:544$99'.
  created $adff cell `$procdff$1659' with positive edge clock and negative level reset.
Creating register for signal `\CRC5.\crc5_out' using process `\CRC5.$proc$d21_pemmanou_usb/src/USBHost.v:506$89'.
  created $adff cell `$procdff$1660' with positive edge clock and negative level reset.
Creating register for signal `\CRC5.\sv2v_autoblock_1.i' using process `\CRC5.$proc$d21_pemmanou_usb/src/USBHost.v:506$89'.
  created $adff cell `$procdff$1661' with positive edge clock and negative level reset.
Creating register for signal `\CRC5.\sv2v_autoblock_2.i' using process `\CRC5.$proc$d21_pemmanou_usb/src/USBHost.v:506$89'.
  created $dff cell `$procdff$1664' with positive edge clock.
Creating register for signal `\HOST_INTERFACE.\count' using process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:320$82'.
  created $adff cell `$procdff$1665' with positive edge clock and negative level reset.
Creating register for signal `\HOST_INTERFACE.\data_in_reg' using process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:315$79'.
  created $adff cell `$procdff$1666' with positive edge clock and negative level reset.
Creating register for signal `\HOST_INTERFACE.\ENDP_reg' using process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:302$77'.
  created $adff cell `$procdff$1667' with positive edge clock and negative level reset.
Creating register for signal `\HOST_INTERFACE.\Addr_reg' using process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:302$77'.
  created $adff cell `$procdff$1668' with positive edge clock and negative level reset.
Creating register for signal `\HOST_INTERFACE.\mempage_reg' using process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:302$77'.
  created $adff cell `$procdff$1669' with positive edge clock and negative level reset.
Creating register for signal `\HOST_INTERFACE.\data_out_reg' using process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:302$77'.
  created $adff cell `$procdff$1670' with positive edge clock and negative level reset.
Creating register for signal `\HOST_INTERFACE.\cur_state' using process `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:297$75'.
  created $adff cell `$procdff$1671' with positive edge clock and negative level reset.

4.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `CRC_DRIVER_RECEIVE.$proc$d21_pemmanou_usb/src/USBHost.v:1847$457'.
Removing empty process `PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1813$454'.
Removing empty process `PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1808$452'.
Found and cleaned up 1 empty switch in `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1714$445'.
Removing empty process `PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1714$445'.
Found and cleaned up 10 empty switches in `\PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1652$391'.
Removing empty process `PACKET_RECEIVE_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:1652$391'.
Found and cleaned up 1 empty switch in `\PACKET_RECEIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1584$389'.
Removing empty process `PACKET_RECEIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1584$389'.
Found and cleaned up 1 empty switch in `\BIT_UNSTUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:1545$385'.
Removing empty process `BIT_UNSTUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:1545$385'.
Found and cleaned up 1 empty switch in `\BIT_UNSTUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:1534$380'.
Removing empty process `BIT_UNSTUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:1534$380'.
Found and cleaned up 1 empty switch in `\NRZI_DECODER.$proc$d21_pemmanou_usb/src/USBHost.v:1508$377'.
Removing empty process `NRZI_DECODER.$proc$d21_pemmanou_usb/src/USBHost.v:1508$377'.
Removing empty process `SYNC_DETECTOR.$proc$d21_pemmanou_usb/src/USBHost.v:1483$369'.
Found and cleaned up 1 empty switch in `\WIRE_LISTENER.$proc$d21_pemmanou_usb/src/USBHost.v:1451$365'.
Removing empty process `WIRE_LISTENER.$proc$d21_pemmanou_usb/src/USBHost.v:1451$365'.
Removing empty process `WIRE_LISTENER.$proc$d21_pemmanou_usb/src/USBHost.v:1442$359'.
Removing empty process `READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1416$357'.
Found and cleaned up 1 empty switch in `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1364$335'.
Removing empty process `READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1364$335'.
Found and cleaned up 7 empty switches in `\READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1337$330'.
Removing empty process `READ_WRITE_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1337$330'.
Removing empty process `IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1284$327'.
Removing empty process `IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1279$325'.
Removing empty process `IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1274$322'.
Removing empty process `IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1265$320'.
Removing empty process `IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1264$315'.
Found and cleaned up 3 empty switches in `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1164$277'.
Removing empty process `IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1164$277'.
Found and cleaned up 9 empty switches in `\IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1126$264'.
Removing empty process `IN_OUT_HANDLER.$proc$d21_pemmanou_usb/src/USBHost.v:1126$264'.
Removing empty process `WIRE_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1062$255'.
Found and cleaned up 4 empty switches in `\WIRE_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1023$253'.
Removing empty process `WIRE_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1023$253'.
Found and cleaned up 4 empty switches in `\WIRE_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1012$247'.
Removing empty process `WIRE_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:1012$247'.
Found and cleaned up 1 empty switch in `\NRZI.$proc$d21_pemmanou_usb/src/USBHost.v:984$242'.
Removing empty process `NRZI.$proc$d21_pemmanou_usb/src/USBHost.v:984$242'.
Found and cleaned up 1 empty switch in `\BIT_STUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:958$237'.
Removing empty process `BIT_STUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:958$237'.
Found and cleaned up 1 empty switch in `\BIT_STUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:947$232'.
Removing empty process `BIT_STUFFER.$proc$d21_pemmanou_usb/src/USBHost.v:947$232'.
Found and cleaned up 3 empty switches in `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:919$220'.
Removing empty process `PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:919$220'.
Found and cleaned up 3 empty switches in `\PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:903$212'.
Removing empty process `PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:903$212'.
Removing empty process `PACKET_ENCODER.$proc$d21_pemmanou_usb/src/USBHost.v:879$207'.
Removing empty process `PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:840$205'.
Removing empty process `PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:835$203'.
Found and cleaned up 1 empty switch in `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
Removing empty process `PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:738$199'.
Found and cleaned up 9 empty switches in `\PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:678$147'.
Removing empty process `PACKET_SEND_MANAGER.$proc$d21_pemmanou_usb/src/USBHost.v:678$147'.
Removing empty process `CRC_DRIVER.$proc$d21_pemmanou_usb/src/USBHost.v:600$120'.
Found and cleaned up 1 empty switch in `\CRC16.$proc$d21_pemmanou_usb/src/USBHost.v:544$99'.
Removing empty process `CRC16.$proc$d21_pemmanou_usb/src/USBHost.v:544$99'.
Found and cleaned up 1 empty switch in `\CRC5.$proc$d21_pemmanou_usb/src/USBHost.v:506$89'.
Removing empty process `CRC5.$proc$d21_pemmanou_usb/src/USBHost.v:506$89'.
Found and cleaned up 1 empty switch in `\HALFBYTE_PICKER_32.$proc$d21_pemmanou_usb/src/USBHost.v:363$85'.
Removing empty process `HALFBYTE_PICKER_32.$proc$d21_pemmanou_usb/src/USBHost.v:363$85'.
Found and cleaned up 1 empty switch in `\HALFBYTE_PICKER_64.$proc$d21_pemmanou_usb/src/USBHost.v:334$84'.
Removing empty process `HALFBYTE_PICKER_64.$proc$d21_pemmanou_usb/src/USBHost.v:334$84'.
Removing empty process `HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:320$82'.
Removing empty process `HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:315$79'.
Removing empty process `HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:302$77'.
Removing empty process `HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:297$75'.
Found and cleaned up 3 empty switches in `\HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:226$24'.
Removing empty process `HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:226$24'.
Removing empty process `HOST_INTERFACE.$proc$d21_pemmanou_usb/src/USBHost.v:203$22'.
Found and cleaned up 3 empty switches in `\USBHost.$proc$d21_pemmanou_usb/src/USBHost.v:58$13'.
Removing empty process `USBHost.$proc$d21_pemmanou_usb/src/USBHost.v:58$13'.
Cleaned up 73 empty switches.

4.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module PACKET_RECEIVE.
Optimizing module CRC_DRIVER_RECEIVE.
Optimizing module PACKET_RECEIVE_MANAGER.
<suppressed ~17 debug messages>
Optimizing module PACKET_RECEIVER.
<suppressed ~3 debug messages>
Optimizing module BIT_UNSTUFFER.
<suppressed ~1 debug messages>
Optimizing module NRZI_DECODER.
Optimizing module SYNC_DETECTOR.
<suppressed ~2 debug messages>
Optimizing module WIRE_LISTENER.
<suppressed ~5 debug messages>
Optimizing module READ_WRITE_HANDLER.
<suppressed ~16 debug messages>
Optimizing module IN_OUT_HANDLER.
<suppressed ~9 debug messages>
Optimizing module WIRE_DRIVER.
<suppressed ~13 debug messages>
Optimizing module NRZI.
Optimizing module BIT_STUFFER.
<suppressed ~1 debug messages>
Optimizing module PACKET_ENCODER.
<suppressed ~1 debug messages>
Optimizing module PACKET_SEND_MANAGER.
<suppressed ~23 debug messages>
Optimizing module CRC_DRIVER.
Optimizing module CRC16.
Optimizing module CRC5.
Optimizing module PACKET_SEND.
Optimizing module HALFBYTE_PICKER_32.
<suppressed ~1 debug messages>
Optimizing module HALFBYTE_PICKER_64.
<suppressed ~1 debug messages>
Optimizing module HOST_INTERFACE.
<suppressed ~18 debug messages>
Optimizing module USBHost.
Optimizing module my_chip.
Optimizing module toplevel_chip.

4.3. Executing FLATTEN pass (flatten design).
Deleting now unused module PACKET_RECEIVE.
Deleting now unused module CRC_DRIVER_RECEIVE.
Deleting now unused module PACKET_RECEIVE_MANAGER.
Deleting now unused module PACKET_RECEIVER.
Deleting now unused module BIT_UNSTUFFER.
Deleting now unused module NRZI_DECODER.
Deleting now unused module SYNC_DETECTOR.
Deleting now unused module WIRE_LISTENER.
Deleting now unused module READ_WRITE_HANDLER.
Deleting now unused module IN_OUT_HANDLER.
Deleting now unused module WIRE_DRIVER.
Deleting now unused module NRZI.
Deleting now unused module BIT_STUFFER.
Deleting now unused module PACKET_ENCODER.
Deleting now unused module PACKET_SEND_MANAGER.
Deleting now unused module CRC_DRIVER.
Deleting now unused module CRC16.
Deleting now unused module CRC5.
Deleting now unused module PACKET_SEND.
Deleting now unused module HALFBYTE_PICKER_32.
Deleting now unused module HALFBYTE_PICKER_64.
Deleting now unused module HOST_INTERFACE.
Deleting now unused module USBHost.
Deleting now unused module my_chip.
<suppressed ~27 debug messages>

4.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~113 debug messages>

4.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 90 unused cells and 759 unused wires.
<suppressed ~123 debug messages>

4.6. Executing CHECK pass (checking for obvious problems).
Checking module toplevel_chip...
Found and reported 0 problems.

4.7. Executing OPT pass (performing simple optimizations).

4.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~1281 debug messages>
Removed a total of 427 cells.

4.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\mchip.\design.$procmux$1618.
    dead port 2/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$1011.
    dead port 2/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$577.
    dead port 2/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$584.
    dead port 2/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$592.
    dead port 2/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$601.
    dead port 2/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$611.
    dead port 1/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$624.
    dead port 1/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$627.
    dead port 2/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$629.
    dead port 2/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$631.
    dead port 1/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$644.
    dead port 2/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$646.
    dead port 2/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$648.
    dead port 2/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$660.
    dead port 2/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$662.
    dead port 2/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$673.
    dead port 2/2 on $mux $flatten\mchip.\design.\receiver.\fsm.$procmux$684.
    dead port 1/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$857.
    dead port 2/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$859.
    dead port 1/2 on $mux $flatten\mchip.\design.$procmux$1621.
    dead port 2/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$869.
    dead port 1/2 on $mux $flatten\mchip.\design.$procmux$1627.
    dead port 1/2 on $mux $flatten\mchip.\design.\rw_fsm.$procmux$786.
    dead port 2/2 on $mux $flatten\mchip.\design.\rw_fsm.$procmux$788.
    dead port 2/2 on $mux $flatten\mchip.\design.\rw_fsm.$procmux$795.
    dead port 1/2 on $mux $flatten\mchip.\design.\rw_fsm.$procmux$805.
    dead port 2/2 on $mux $flatten\mchip.\design.\rw_fsm.$procmux$807.
    dead port 1/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$929.
    dead port 2/2 on $mux $flatten\mchip.\design.\rw_fsm.$procmux$816.
    dead port 2/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$931.
    dead port 1/2 on $mux $flatten\mchip.\design.\rw_fsm.$procmux$827.
    dead port 2/2 on $mux $flatten\mchip.\design.\rw_fsm.$procmux$829.
    dead port 2/2 on $mux $flatten\mchip.\design.\rw_fsm.$procmux$839.
    dead port 2/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$938.
    dead port 2/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$940.
    dead port 2/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$946.
    dead port 1/2 on $mux $flatten\mchip.\design.\transmitter.\encoder.$procmux$1131.
    dead port 1/2 on $mux $flatten\mchip.\design.\transmitter.\encoder.$procmux$1134.
    dead port 1/2 on $mux $flatten\mchip.\design.\transmitter.\encoder.$procmux$1140.
    dead port 1/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$957.
    dead port 2/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$959.
    dead port 2/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$970.
    dead port 2/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$972.
    dead port 2/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$982.
    dead port 1/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$996.
    dead port 2/2 on $mux $flatten\mchip.\design.\io_fsm.$procmux$998.
    dead port 2/2 on $mux $flatten\mchip.\design.\inter.$procmux$1533.
    dead port 2/2 on $mux $flatten\mchip.\design.\inter.$procmux$1535.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\fsm.$procmux$1326.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\fsm.$procmux$1332.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\fsm.$procmux$1339.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\fsm.$procmux$1347.
    dead port 2/2 on $mux $flatten\mchip.\design.\inter.$procmux$1548.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\fsm.$procmux$1356.
    dead port 1/2 on $mux $flatten\mchip.\design.\transmitter.\fsm.$procmux$1368.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\fsm.$procmux$1370.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\fsm.$procmux$1372.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\fsm.$procmux$1383.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\fsm.$procmux$1385.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\fsm.$procmux$1395.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\fsm.$procmux$1405.
    dead port 1/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1029.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1031.
    dead port 1/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1039.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1041.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1048.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1055.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1062.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1068.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1070.
    dead port 1/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1086.
    dead port 1/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1089.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1092.
    dead port 1/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1098.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1101.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1107.
    dead port 2/2 on $mux $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1110.
Removed 78 multiplexer ports.
<suppressed ~113 debug messages>

4.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
    New ctrl vector for $pmux cell $flatten\mchip.\design.\receiver.\fsm.$procmux$528: { $auto$opt_reduce.cc:134:opt_pmux$1675 $auto$opt_reduce.cc:134:opt_pmux$1673 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\io_fsm.$procmux$872: $auto$opt_reduce.cc:134:opt_pmux$1677
    New ctrl vector for $pmux cell $flatten\mchip.\design.\io_fsm.$procmux$877: { $auto$opt_reduce.cc:134:opt_pmux$1679 $flatten\mchip.\design.\io_fsm.$procmux$1015_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\inter.$procmux$1608: $auto$opt_reduce.cc:134:opt_pmux$1681
    New ctrl vector for $pmux cell $flatten\mchip.\design.\receiver.\packet_decode.$procmux$704: { $auto$opt_reduce.cc:134:opt_pmux$1683 $flatten\mchip.\design.\receiver.\packet_decode.$procmux$705_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\receiver.\packet_decode.$procmux$714: { $flatten\mchip.\design.\receiver.\packet_decode.$procmux$707_CMP $auto$opt_reduce.cc:134:opt_pmux$1685 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\receiver.\wire_in.$procmux$739: { $auto$opt_reduce.cc:134:opt_pmux$1689 $auto$opt_reduce.cc:134:opt_pmux$1687 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\io_fsm.$procmux$892: { $flatten\mchip.\design.\io_fsm.$procmux$1021_CMP $flatten\mchip.\design.\io_fsm.$procmux$1018_CMP $auto$opt_reduce.cc:134:opt_pmux$1691 $flatten\mchip.\design.\io_fsm.$procmux$1015_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\rw_fsm.$procmux$746: { \mchip.design.no_transaction $auto$opt_reduce.cc:134:opt_pmux$1693 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\rw_fsm.$procmux$751: { \mchip.design.no_transaction $flatten\mchip.\design.\rw_fsm.$procmux$748_CMP $flatten\mchip.\design.\rw_fsm.$procmux$747_CMP $auto$opt_reduce.cc:134:opt_pmux$1695 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\io_fsm.$procmux$907: $auto$opt_reduce.cc:134:opt_pmux$1697
    New ctrl vector for $pmux cell $flatten\mchip.\design.\rw_fsm.$procmux$763: { $flatten\mchip.\design.\rw_fsm.$procmux$748_CMP $flatten\mchip.\design.\rw_fsm.$procmux$747_CMP $auto$opt_reduce.cc:134:opt_pmux$1699 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\io_fsm.$procmux$911: { $flatten\mchip.\design.\io_fsm.$procmux$1019_CMP $auto$opt_reduce.cc:134:opt_pmux$1701 $flatten\mchip.\design.\io_fsm.$procmux$1015_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\rw_fsm.$procmux$769: { $auto$opt_reduce.cc:134:opt_pmux$1705 $auto$opt_reduce.cc:134:opt_pmux$1703 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\io_fsm.$procmux$918: { $flatten\mchip.\design.\io_fsm.$procmux$1019_CMP $auto$opt_reduce.cc:134:opt_pmux$1707 $flatten\mchip.\design.\io_fsm.$procmux$1015_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\rw_fsm.$procmux$775: { $auto$opt_reduce.cc:134:opt_pmux$1711 $auto$opt_reduce.cc:134:opt_pmux$1709 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\receiver.\fsm.$procmux$537: { $auto$opt_reduce.cc:134:opt_pmux$1715 $auto$opt_reduce.cc:134:opt_pmux$1713 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\receiver.\fsm.$procmux$555: { $flatten\mchip.\design.\receiver.\fsm.$procmux$499_CMP $flatten\mchip.\design.\receiver.\fsm.$procmux$498_CMP $flatten\mchip.\design.\receiver.\fsm.$procmux$497_CMP $auto$opt_reduce.cc:134:opt_pmux$1717 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\receiver.\fsm.$procmux$510: { $flatten\mchip.\design.\receiver.\fsm.$procmux$500_CMP $auto$opt_reduce.cc:134:opt_pmux$1719 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\receiver.\fsm.$procmux$564: { $auto$opt_reduce.cc:134:opt_pmux$1723 $auto$opt_reduce.cc:134:opt_pmux$1721 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1197: { $auto$opt_reduce.cc:134:opt_pmux$1727 $auto$opt_reduce.cc:134:opt_pmux$1725 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1206: { $flatten\mchip.\design.\transmitter.\fsm.$procmux$1205_CMP $auto$opt_reduce.cc:134:opt_pmux$1729 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1215: { $flatten\mchip.\design.\transmitter.\fsm.$procmux$1204_CMP $flatten\mchip.\design.\transmitter.\fsm.$procmux$1202_CMP $flatten\mchip.\design.\transmitter.\fsm.$procmux$1201_CMP $auto$opt_reduce.cc:134:opt_pmux$1731 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1224: { $flatten\mchip.\design.\transmitter.\fsm.$procmux$1205_CMP $auto$opt_reduce.cc:134:opt_pmux$1733 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1233: { $auto$opt_reduce.cc:134:opt_pmux$1737 $auto$opt_reduce.cc:134:opt_pmux$1735 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1242: { $auto$opt_reduce.cc:134:opt_pmux$1741 $auto$opt_reduce.cc:134:opt_pmux$1739 $flatten\mchip.\design.\transmitter.\fsm.$procmux$1198_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1251: { $auto$opt_reduce.cc:134:opt_pmux$1745 $auto$opt_reduce.cc:134:opt_pmux$1743 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1260: { $flatten\mchip.\design.\transmitter.\fsm.$procmux$1200_CMP $auto$opt_reduce.cc:134:opt_pmux$1747 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1269: { $auto$opt_reduce.cc:134:opt_pmux$1751 $auto$opt_reduce.cc:134:opt_pmux$1749 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1278: { $auto$opt_reduce.cc:134:opt_pmux$1755 $auto$opt_reduce.cc:134:opt_pmux$1753 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1287: { $auto$opt_reduce.cc:134:opt_pmux$1759 $auto$opt_reduce.cc:134:opt_pmux$1757 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1296: { $auto$opt_reduce.cc:134:opt_pmux$1761 $flatten\mchip.\design.\transmitter.\fsm.$procmux$1198_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1305: { $auto$opt_reduce.cc:134:opt_pmux$1765 $auto$opt_reduce.cc:134:opt_pmux$1763 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1314: { $auto$opt_reduce.cc:134:opt_pmux$1767 $flatten\mchip.\design.\transmitter.\fsm.$procmux$1198_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\receiver.\fsm.$procmux$492: { $auto$opt_reduce.cc:134:opt_pmux$1771 $auto$opt_reduce.cc:134:opt_pmux$1769 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\receiver.\fsm.$procmux$501: { $auto$opt_reduce.cc:134:opt_pmux$1773 $flatten\mchip.\design.\receiver.\fsm.$procmux$494_CMP $flatten\mchip.\design.\receiver.\fsm.$procmux$493_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1072: { $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1015$249_Y $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1017$250_Y $auto$opt_reduce.cc:134:opt_pmux$1775 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1077: { $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1017$250_Y $auto$opt_reduce.cc:134:opt_pmux$1777 $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1073_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\receiver.\fsm.$procmux$519: $auto$opt_reduce.cc:134:opt_pmux$1779
  Optimizing cells in module \toplevel_chip.
Performed a total of 39 changes.

4.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

4.7.6. Executing OPT_DFF pass (perform DFF optimizations).

4.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 559 unused wires.
<suppressed ~34 debug messages>

4.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.7.9. Rerunning OPT passes. (Maybe there is more to do..)

4.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~115 debug messages>

4.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
    New ctrl vector for $pmux cell $flatten\mchip.\design.\inter.$procmux$1561: { $auto$opt_reduce.cc:134:opt_pmux$1783 $flatten\mchip.\design.\inter.$procmux$1556_CMP $auto$opt_reduce.cc:134:opt_pmux$1781 $flatten\mchip.\design.\inter.$procmux$1552_CMP }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\io_fsm.$procmux$911: { $auto$opt_reduce.cc:134:opt_pmux$1701 $auto$opt_reduce.cc:134:opt_pmux$1785 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\io_fsm.$procmux$918: { $auto$opt_reduce.cc:134:opt_pmux$1701 $auto$opt_reduce.cc:134:opt_pmux$1787 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\rw_fsm.$procmux$751: { \mchip.design.no_transaction $auto$opt_reduce.cc:134:opt_pmux$1789 $auto$opt_reduce.cc:134:opt_pmux$1695 }
  Optimizing cells in module \toplevel_chip.
Performed a total of 4 changes.

4.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

4.7.13. Executing OPT_DFF pass (perform DFF optimizations).

4.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

4.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.7.16. Rerunning OPT passes. (Maybe there is more to do..)

4.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~115 debug messages>

4.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.7.20. Executing OPT_DFF pass (perform DFF optimizations).

4.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.7.23. Finished OPT passes. (There is nothing left to do.)

4.8. Executing FSM pass (extract and optimize FSM).

4.8.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking toplevel_chip.mchip.design.io_fsm.cur_state as FSM state register:
    Circuit seems to be self-resetting.
Not marking toplevel_chip.mchip.design.receiver.fsm.cur_state as FSM state register:
    Circuit seems to be self-resetting.
Not marking toplevel_chip.mchip.design.rw_fsm.cur_state as FSM state register:
    Circuit seems to be self-resetting.
Not marking toplevel_chip.mchip.design.transmitter.fsm.cur_state as FSM state register:
    Circuit seems to be self-resetting.
Found FSM state register toplevel_chip.mchip.design.transmitter.out_wire.cur_state.

4.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\mchip.design.transmitter.out_wire.cur_state' from module `\toplevel_chip'.
  found $adff cell for state register: $flatten\mchip.\design.\transmitter.\out_wire.$procdff$1650
  root of input selection tree: $flatten\mchip.\design.\transmitter.\out_wire.$0\cur_state[1:0]
  found reset state: 2'00 (from async reset)
  found ctrl input: \mchip.design.transmitter.out_wire.en
  found ctrl input: $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1015$249_Y
  found ctrl input: $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1017$250_Y
  found ctrl input: $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1019$252_Y
  found state code: 2'11
  found ctrl input: \mchip.design.transmitter.out_wire.is_eop
  found state code: 2'01
  found state code: 2'10
  found ctrl output: $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1015$249_Y
  found ctrl output: $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1017$250_Y
  found ctrl output: $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1019$252_Y
  found ctrl output: $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1073_CMP
  ctrl inputs: { \mchip.design.transmitter.out_wire.en \mchip.design.transmitter.out_wire.is_eop }
  ctrl outputs: { $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1073_CMP $flatten\mchip.\design.\transmitter.\out_wire.$0\cur_state[1:0] $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1019$252_Y $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1017$250_Y $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1015$249_Y }
  transition:       2'00 2'0- ->       2'00 6'000001
  transition:       2'00 2'1- ->       2'01 6'001001
  transition:       2'10 2'0- ->       2'10 6'010100
  transition:       2'10 2'1- ->       2'11 6'011100
  transition:       2'01 2'0- ->       2'01 6'001010
  transition:       2'01 2'10 ->       2'01 6'001010
  transition:       2'01 2'11 ->       2'10 6'010010
  transition:       2'11 2'0- ->       2'11 6'111000
  transition:       2'11 2'1- ->       2'00 6'100000

4.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\mchip.design.transmitter.out_wire.cur_state$1790' from module `\toplevel_chip'.

4.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 10 unused cells and 10 unused wires.
<suppressed ~12 debug messages>

4.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\mchip.design.transmitter.out_wire.cur_state$1790' from module `\toplevel_chip'.
  Removing unused output signal $flatten\mchip.\design.\transmitter.\out_wire.$0\cur_state[1:0] [0].
  Removing unused output signal $flatten\mchip.\design.\transmitter.\out_wire.$0\cur_state[1:0] [1].

4.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\mchip.design.transmitter.out_wire.cur_state$1790' from module `\toplevel_chip' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---

4.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\mchip.design.transmitter.out_wire.cur_state$1790' from module `toplevel_chip':
-------------------------------------

  Information on FSM $fsm$\mchip.design.transmitter.out_wire.cur_state$1790 (\mchip.design.transmitter.out_wire.cur_state):

  Number of input signals:    2
  Number of output signals:   4
  Number of state bits:       4

  Input signals:
    0: \mchip.design.transmitter.out_wire.is_eop
    1: \mchip.design.transmitter.out_wire.en

  Output signals:
    0: $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1015$249_Y
    1: $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1017$250_Y
    2: $flatten\mchip.\design.\transmitter.\out_wire.$eq$d21_pemmanou_usb/src/USBHost.v:1019$252_Y
    3: $flatten\mchip.\design.\transmitter.\out_wire.$procmux$1073_CMP

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'0-   ->     0 4'0001
      1:     0 2'1-   ->     2 4'0001
      2:     1 2'0-   ->     1 4'0100
      3:     1 2'1-   ->     3 4'0100
      4:     2 2'11   ->     1 4'0010
      5:     2 2'10   ->     2 4'0010
      6:     2 2'0-   ->     2 4'0010
      7:     3 2'1-   ->     0 4'1000
      8:     3 2'0-   ->     3 4'1000

-------------------------------------

4.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\mchip.design.transmitter.out_wire.cur_state$1790' from module `\toplevel_chip'.

4.9. Executing OPT pass (performing simple optimizations).

4.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~7 debug messages>

4.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

4.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~114 debug messages>

4.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\mchip.\design.\transmitter.\nrzi.$procdff$1651 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\transmitter.\nrzi.$0\cur_value[0:0], Q = \mchip.design.transmitter.nrzi.cur_value).
Adding EN signal on $flatten\mchip.\design.\transmitter.\fsm.$procdff$1653 ($adff) from module toplevel_chip (D = \mchip.design.transmitter.fsm.count_next, Q = \mchip.design.transmitter.fsm.count).
Adding EN signal on $flatten\mchip.\design.\transmitter.\crc.\crc5.$procdff$1660 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\transmitter.\crc.\crc5.$0\crc5_out[4:0], Q = \mchip.design.transmitter.crc.crc5.crc5_out).
Adding EN signal on $flatten\mchip.\design.\transmitter.\crc.\crc16.$procdff$1659 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0], Q = \mchip.design.transmitter.crc.crc16.crc16_out).
Adding EN signal on $flatten\mchip.\design.\transmitter.\bit_stuff.$procdff$1652 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\transmitter.\bit_stuff.$0\count[2:0], Q = \mchip.design.transmitter.bit_stuff.count).
Adding EN signal on $flatten\mchip.\design.\receiver.\packet_decode.$procdff$1636 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\receiver.\packet_decode.$0\PAYLOAD_accum[63:0], Q = \mchip.design.receiver.packet_decode.PAYLOAD_accum).
Adding EN signal on $flatten\mchip.\design.\receiver.\packet_decode.$procdff$1634 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\receiver.\packet_decode.$0\PID_accum[7:0], Q = \mchip.design.receiver.packet_decode.PID_accum).
Adding EN signal on $flatten\mchip.\design.\receiver.\nrzi.$procdff$1638 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\receiver.\nrzi.$ternary$d21_pemmanou_usb/src/USBHost.v:1512$379_Y, Q = \mchip.design.receiver.nrzi.cur_value).
Adding EN signal on $flatten\mchip.\design.\receiver.\fsm.$procdff$1632 ($adff) from module toplevel_chip (D = \mchip.design.receiver.fsm.count_next, Q = \mchip.design.receiver.fsm.count).
Adding EN signal on $flatten\mchip.\design.\receiver.\crc.\crc5.$procdff$1660 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\receiver.\crc.\crc5.$0\crc5_out[4:0], Q = \mchip.design.receiver.crc.crc5.crc5_out).
Adding EN signal on $flatten\mchip.\design.\receiver.\crc.\crc16.$procdff$1659 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0], Q = \mchip.design.receiver.crc.crc16.crc16_out).
Adding EN signal on $flatten\mchip.\design.\receiver.\bit_unstuff.$procdff$1637 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\receiver.\bit_unstuff.$0\count[2:0], Q = \mchip.design.receiver.bit_unstuff.count).
Adding EN signal on $flatten\mchip.\design.\io_fsm.$procdff$1647 ($adff) from module toplevel_chip (D = \mchip.design.receiver.packet_decode.PAYLOAD_accum, Q = \mchip.design.io_fsm.final_data).
Adding EN signal on $flatten\mchip.\design.\io_fsm.$procdff$1644 ($adff) from module toplevel_chip (D = \mchip.design.io_fsm.timeout_counter_nxt, Q = \mchip.design.io_fsm.timeout_counter).
Adding EN signal on $flatten\mchip.\design.\io_fsm.$procdff$1643 ($adff) from module toplevel_chip (D = \mchip.design.io_fsm.error_counter_nxt, Q = \mchip.design.io_fsm.error_counter).
Adding EN signal on $flatten\mchip.\design.\inter.$procdff$1670 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:269$56_Y, Q = \mchip.design.inter.data_out_reg).
Adding EN signal on $flatten\mchip.\design.\inter.$procdff$1669 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:264$48_Y, Q = \mchip.design.inter.mempage_reg).
Adding EN signal on $flatten\mchip.\design.\inter.$procdff$1668 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:259$40_Y, Q = \mchip.design.inter.Addr_reg).
Adding EN signal on $flatten\mchip.\design.\inter.$procdff$1667 ($adff) from module toplevel_chip (D = $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:254$32_Y, Q = \mchip.design.inter.ENDP_reg).
Adding EN signal on $flatten\mchip.\design.\inter.$procdff$1666 ($adff) from module toplevel_chip (D = \mchip.design.io_fsm.final_data, Q = \mchip.design.inter.data_in_reg).

4.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 7 unused cells and 20 unused wires.
<suppressed ~12 debug messages>

4.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~9 debug messages>

4.9.9. Rerunning OPT passes. (Maybe there is more to do..)

4.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~108 debug messages>

4.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
    New ctrl vector for $pmux cell $flatten\mchip.\design.\receiver.\packet_decode.$procmux$704: $flatten\mchip.\design.\receiver.\packet_decode.$procmux$705_CMP
    New ctrl vector for $pmux cell $flatten\mchip.\design.\receiver.\packet_decode.$procmux$714: $flatten\mchip.\design.\receiver.\packet_decode.$procmux$707_CMP
  Optimizing cells in module \toplevel_chip.
Performed a total of 2 changes.

4.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

4.9.13. Executing OPT_DFF pass (perform DFF optimizations).

4.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 2 unused cells and 5 unused wires.
<suppressed ~3 debug messages>

4.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.9.16. Rerunning OPT passes. (Maybe there is more to do..)

4.9.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~108 debug messages>

4.9.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.9.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.9.20. Executing OPT_DFF pass (perform DFF optimizations).

4.9.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.9.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.9.23. Finished OPT passes. (There is nothing left to do.)

4.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 29 address bits (of 32) from memory init port toplevel_chip.$flatten\mchip.\design.\inter.$auto$mem.cc:328:emit$491 ($flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489).
Removed top 1 bits (of 2) from port B of cell toplevel_chip.$auto$opt_dff.cc:195:make_patterns_logic$1858 ($ne).
Removed top 1 bits (of 2) from port B of cell toplevel_chip.$auto$opt_dff.cc:195:make_patterns_logic$1887 ($ne).
Removed top 1 bits (of 9) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1124$258 ($eq).
Removed top 1 bits (of 2) from mux cell toplevel_chip.$flatten\mchip.\design.$procmux$1615 ($mux).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.\in_hb.$procmux$1514_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.\in_hb.$procmux$1515_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.\in_hb.$procmux$1516_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.\in_hb.$procmux$1518_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.$procmux$1558_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.$procmux$1557_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.$procmux$1556_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.$procmux$1555_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.$procmux$1554_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.$procmux$1553_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.$procmux$1552_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:285$74 ($mux).
Removed top 28 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:284$72 ($mux).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.$eq$d21_pemmanou_usb/src/USBHost.v:284$69 ($eq).
Removed top 1 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:279$68 ($mux).
Removed top 1 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:273$62 ($mux).
Removed top 1 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:268$54 ($mux).
Removed top 28 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:267$52 ($mux).
Removed top 2 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:263$46 ($mux).
Removed top 28 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:262$44 ($mux).
Removed top 2 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.$eq$d21_pemmanou_usb/src/USBHost.v:262$41 ($eq).
Removed top 3 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:258$38 ($mux).
Removed top 2 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:253$30 ($mux).
Removed top 28 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:252$28 ($mux).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:252$26 ($add).
Removed top 28 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:252$26 ($add).
Removed top 3 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\inter.$eq$d21_pemmanou_usb/src/USBHost.v:252$25 ($eq).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\bit_stuff.$add$d21_pemmanou_usb/src/USBHost.v:955$234 ($add).
Removed top 28 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\bit_stuff.$add$d21_pemmanou_usb/src/USBHost.v:955$234 ($add).
Removed top 29 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\transmitter.\bit_stuff.$ternary$d21_pemmanou_usb/src/USBHost.v:955$236 ($mux).
Removed top 29 bits (of 32) from port A of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\crc.$sub$d21_pemmanou_usb/src/USBHost.v:630$142 ($sub).
Removed top 24 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\crc.$sub$d21_pemmanou_usb/src/USBHost.v:630$142 ($sub).
Removed top 24 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\crc.$shiftx$d21_pemmanou_usb/src/USBHost.v:0$143 ($shiftx).
Removed top 28 bits (of 32) from port A of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\crc.$sub$d21_pemmanou_usb/src/USBHost.v:630$144 ($sub).
Removed top 24 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\crc.$sub$d21_pemmanou_usb/src/USBHost.v:630$144 ($sub).
Removed top 24 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\crc.$shiftx$d21_pemmanou_usb/src/USBHost.v:0$145 ($shiftx).
Removed top 29 bits (of 32) from port A of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:921$222 ($sub).
Removed top 24 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:921$222 ($sub).
Removed top 24 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\encoder.$shiftx$d21_pemmanou_usb/src/USBHost.v:0$223 ($shiftx).
Removed top 1 bits (of 2) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\encoder.$eq$d21_pemmanou_usb/src/USBHost.v:922$224 ($eq).
Removed top 28 bits (of 32) from port A of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:923$225 ($sub).
Removed top 24 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:923$225 ($sub).
Removed top 24 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\encoder.$shiftx$d21_pemmanou_usb/src/USBHost.v:0$226 ($shiftx).
Removed top 26 bits (of 32) from port A of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:925$228 ($sub).
Removed top 24 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:925$228 ($sub).
Removed top 24 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\encoder.$shiftx$d21_pemmanou_usb/src/USBHost.v:0$229 ($shiftx).
Removed top 24 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\encoder.$shiftx$d21_pemmanou_usb/src/USBHost.v:0$231 ($shiftx).
Removed top 4 bits (of 7) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:685$149 ($eq).
Removed top 1 bits (of 3) from mux cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:685$150 ($mux).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$add$d21_pemmanou_usb/src/USBHost.v:686$152 ($add).
Removed top 24 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$add$d21_pemmanou_usb/src/USBHost.v:686$152 ($add).
Removed top 25 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:686$154 ($mux).
Removed top 3 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:691$157 ($eq).
Removed top 2 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:693$159 ($eq).
Removed top 3 bits (of 7) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:703$161 ($eq).
Removed top 25 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:707$168 ($mux).
Removed top 4 bits (of 7) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:710$169 ($eq).
Removed top 1 bits (of 3) from mux cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:710$172 ($mux).
Removed top 25 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:714$176 ($mux).
Removed top 3 bits (of 7) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:717$177 ($eq).
Removed top 2 bits (of 3) from mux cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:717$180 ($mux).
Removed top 25 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:721$184 ($mux).
Removed top 1 bits (of 7) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:724$185 ($eq).
Removed top 1 bits (of 3) from mux cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:724$188 ($mux).
Removed top 25 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:728$192 ($mux).
Removed top 5 bits (of 7) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:731$193 ($eq).
Removed top 25 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:735$198 ($mux).
Removed top 1 bits (of 3) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$procmux$1202_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$procmux$1203_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$procmux$1204_CMP0 ($eq).
Removed top 1 bits (of 3) from mux cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$procmux$1365 ($mux).
Removed top 2 bits (of 3) from mux cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:681$148 ($mux).
Removed top 2 bits (of 3) from mux cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1655$393 ($mux).
Removed top 4 bits (of 7) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1659$394 ($eq).
Removed top 3 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1661$396 ($eq).
Removed top 2 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1663$398 ($eq).
Removed top 2 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1665$400 ($eq).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$add$d21_pemmanou_usb/src/USBHost.v:1672$402 ($add).
Removed top 24 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$add$d21_pemmanou_usb/src/USBHost.v:1672$402 ($add).
Removed top 3 bits (of 7) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1675$403 ($eq).
Removed top 25 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1679$410 ($mux).
Removed top 1 bits (of 7) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1682$411 ($eq).
Removed top 25 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1686$418 ($mux).
Removed top 4 bits (of 7) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1689$419 ($eq).
Removed top 1 bits (of 3) from mux cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1689$422 ($mux).
Removed top 25 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1693$426 ($mux).
Removed top 3 bits (of 7) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1696$427 ($eq).
Removed top 1 bits (of 3) from mux cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1696$430 ($mux).
Removed top 25 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1700$434 ($mux).
Removed top 5 bits (of 7) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1703$435 ($eq).
Removed top 25 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1707$440 ($mux).
Removed top 25 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1711$444 ($mux).
Removed top 1 bits (of 2) from mux cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1736$448 ($mux).
Removed top 1 bits (of 3) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$procmux$497_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$procmux$498_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$procmux$499_CMP0 ($eq).
Removed top 2 bits (of 3) from mux cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$procmux$621 ($mux).
Removed top 1 bits (of 5) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\crc.\crc5.$eq$d21_pemmanou_usb/src/USBHost.v:505$88 ($eq).
Removed top 1 bits (of 2) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\packet_decode.$procmux$707_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\bit_unstuff.$add$d21_pemmanou_usb/src/USBHost.v:1542$382 ($add).
Removed top 28 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\design.\receiver.\bit_unstuff.$add$d21_pemmanou_usb/src/USBHost.v:1542$382 ($add).
Removed top 29 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\receiver.\bit_unstuff.$ternary$d21_pemmanou_usb/src/USBHost.v:1542$384 ($mux).
Removed top 1 bits (of 8) from FF cell toplevel_chip.$flatten\mchip.\design.\receiver.\find_sync.$procdff$1639 ($adff).
Removed top 1 bits (of 8) from port Y of cell toplevel_chip.$flatten\mchip.\design.\receiver.\find_sync.$add$d21_pemmanou_usb/src/USBHost.v:1487$372 ($add).
Removed top 1 bits (of 8) from port A of cell toplevel_chip.$flatten\mchip.\design.\receiver.\find_sync.$add$d21_pemmanou_usb/src/USBHost.v:1487$372 ($add).
Removed top 1 bits (of 7) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\find_sync.$eq$d21_pemmanou_usb/src/USBHost.v:1488$373 ($eq).
Removed top 2 bits (of 3) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\wire_in.$eq$d21_pemmanou_usb/src/USBHost.v:1470$366 ($eq).
Removed top 1 bits (of 2) from port B of cell toplevel_chip.$flatten\mchip.\design.\receiver.\wire_in.$procmux$742_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$procmux$1021_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$procmux$1020_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$procmux$1019_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$procmux$1018_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$procmux$1017_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$procmux$1016_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$procmux$1015_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$procmux$993 ($mux).
Removed top 2 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1249$313 ($mux).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1247$309 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ne$d21_pemmanou_usb/src/USBHost.v:1217$297 ($ne).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1216$296 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1205$294 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1203$293 ($eq).
Removed top 2 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1202$292 ($eq).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1200$291 ($add).
Removed top 23 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1200$291 ($add).
Removed top 28 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1199$290 ($mux).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1199$288 ($add).
Removed top 28 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1199$288 ($add).
Removed top 28 bits (of 32) from mux cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1198$287 ($mux).
Removed top 31 bits (of 32) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1198$285 ($add).
Removed top 28 bits (of 32) from port Y of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1198$285 ($add).
Removed top 2 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1193$284 ($mux).
Removed top 2 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ne$d21_pemmanou_usb/src/USBHost.v:1193$283 ($ne).
Removed top 3 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ne$d21_pemmanou_usb/src/USBHost.v:1182$282 ($ne).
Removed top 3 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1173$280 ($eq).
Removed top 1 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1154$275 ($mux).
Removed top 2 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ne$d21_pemmanou_usb/src/USBHost.v:1153$273 ($ne).
Removed top 1 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1150$271 ($mux).
Removed top 1 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1149$270 ($mux).
Removed top 2 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1148$269 ($mux).
Removed top 1 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1140$267 ($mux).
Removed top 1 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1136$266 ($mux).
Removed top 2 bits (of 4) from mux cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1135$265 ($mux).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1125$261 ($eq).
Removed top 1 bits (of 4) from port B of cell toplevel_chip.$flatten\mchip.\design.\io_fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1125$259 ($eq).
Removed top 1 bits (of 3) from mux cell toplevel_chip.$flatten\mchip.\design.\rw_fsm.$procmux$824 ($mux).
Removed top 1 bits (of 3) from mux cell toplevel_chip.$flatten\mchip.\design.\rw_fsm.$procmux$802 ($mux).
Removed top 1 bits (of 3) from port B of cell toplevel_chip.$flatten\mchip.\design.\rw_fsm.$procmux$754_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell toplevel_chip.$flatten\mchip.\design.\rw_fsm.$procmux$748_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell toplevel_chip.$flatten\mchip.\design.\rw_fsm.$procmux$747_CMP0 ($eq).
Removed top 1 bits (of 3) from mux cell toplevel_chip.$flatten\mchip.\design.\rw_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1353$332 ($mux).
Removed top 1 bits (of 4) from port Y of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\bit_stuff.$add$d21_pemmanou_usb/src/USBHost.v:955$234 ($add).
Removed top 1 bits (of 8) from port Y of cell toplevel_chip.$flatten\mchip.\design.\transmitter.\fsm.$add$d21_pemmanou_usb/src/USBHost.v:686$152 ($add).
Removed top 1 bits (of 8) from port Y of cell toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$add$d21_pemmanou_usb/src/USBHost.v:1672$402 ($add).
Removed top 1 bits (of 4) from port Y of cell toplevel_chip.$flatten\mchip.\design.\receiver.\bit_unstuff.$add$d21_pemmanou_usb/src/USBHost.v:1542$382 ($add).
Removed top 1 bits (of 2) from wire toplevel_chip.$flatten\mchip.\design.$3\status[1:0].
Removed top 28 bits (of 32) from wire toplevel_chip.$flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:252$26_Y.
Removed top 28 bits (of 32) from wire toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:267$52_Y.
Removed top 1 bits (of 4) from wire toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:268$54_Y.
Removed top 1 bits (of 4) from wire toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:273$62_Y.
Removed top 1 bits (of 4) from wire toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:279$68_Y.
Removed top 28 bits (of 32) from wire toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:284$72_Y.
Removed top 1 bits (of 4) from wire toplevel_chip.$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:285$74_Y.
Removed top 2 bits (of 4) from wire toplevel_chip.$flatten\mchip.\design.\io_fsm.$3\next_state[3:0].
Removed top 28 bits (of 32) from wire toplevel_chip.$flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1198$285_Y.
Removed top 3 bits (of 4) from wire toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1135$265_Y.
Removed top 1 bits (of 4) from wire toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1136$266_Y.
Removed top 1 bits (of 4) from wire toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1140$267_Y.
Removed top 2 bits (of 4) from wire toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1148$269_Y.
Removed top 2 bits (of 4) from wire toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1149$270_Y.
Removed top 1 bits (of 4) from wire toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1150$271_Y.
Removed top 1 bits (of 4) from wire toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1154$275_Y.
Removed top 2 bits (of 4) from wire toplevel_chip.$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1193$284_Y.
Removed top 2 bits (of 3) from wire toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$5\next_state[2:0].
Removed top 25 bits (of 32) from wire toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$add$d21_pemmanou_usb/src/USBHost.v:1672$402_Y.
Removed top 2 bits (of 3) from wire toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1655$393_Y.
Removed top 25 bits (of 32) from wire toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1679$410_Y.
Removed top 25 bits (of 32) from wire toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1686$418_Y.
Removed top 1 bits (of 3) from wire toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1689$422_Y.
Removed top 25 bits (of 32) from wire toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1693$426_Y.
Removed top 1 bits (of 3) from wire toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1696$430_Y.
Removed top 25 bits (of 32) from wire toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1700$434_Y.
Removed top 25 bits (of 32) from wire toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1707$440_Y.
Removed top 25 bits (of 32) from wire toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1711$444_Y.
Removed top 1 bits (of 2) from wire toplevel_chip.$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1736$448_Y.
Removed top 49 bits (of 64) from wire toplevel_chip.$flatten\mchip.\design.\receiver.\packet_decode.$0\PAYLOAD_accum[63:0].
Removed top 29 bits (of 32) from wire toplevel_chip.$flatten\mchip.\design.\transmitter.\bit_stuff.$add$d21_pemmanou_usb/src/USBHost.v:955$234_Y.
Removed top 29 bits (of 32) from wire toplevel_chip.$flatten\mchip.\design.\transmitter.\bit_stuff.$ternary$d21_pemmanou_usb/src/USBHost.v:955$236_Y.

4.11. Executing PEEPOPT pass (run peephole optimizers).

4.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 33 unused wires.
<suppressed ~1 debug messages>

4.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module toplevel_chip:
  creating $macc model for $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:252$26 ($add).
  creating $macc model for $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:254$32 ($add).
  creating $macc model for $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:259$40 ($add).
  creating $macc model for $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:264$48 ($add).
  creating $macc model for $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:269$56 ($add).
  creating $macc model for $flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1198$285 ($add).
  creating $macc model for $flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1199$288 ($add).
  creating $macc model for $flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1200$291 ($add).
  creating $macc model for $flatten\mchip.\design.\receiver.\bit_unstuff.$add$d21_pemmanou_usb/src/USBHost.v:1542$382 ($add).
  creating $macc model for $flatten\mchip.\design.\receiver.\find_sync.$add$d21_pemmanou_usb/src/USBHost.v:1487$372 ($add).
  creating $macc model for $flatten\mchip.\design.\receiver.\fsm.$add$d21_pemmanou_usb/src/USBHost.v:1672$402 ($add).
  creating $macc model for $flatten\mchip.\design.\receiver.\wire_in.$add$d21_pemmanou_usb/src/USBHost.v:1448$362 ($add).
  creating $macc model for $flatten\mchip.\design.\receiver.\wire_in.$add$d21_pemmanou_usb/src/USBHost.v:1449$364 ($add).
  creating $macc model for $flatten\mchip.\design.\transmitter.\bit_stuff.$add$d21_pemmanou_usb/src/USBHost.v:955$234 ($add).
  creating $macc model for $flatten\mchip.\design.\transmitter.\crc.$sub$d21_pemmanou_usb/src/USBHost.v:630$142 ($sub).
  creating $macc model for $flatten\mchip.\design.\transmitter.\crc.$sub$d21_pemmanou_usb/src/USBHost.v:630$144 ($sub).
  creating $macc model for $flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:921$222 ($sub).
  creating $macc model for $flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:923$225 ($sub).
  creating $macc model for $flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:925$228 ($sub).
  creating $macc model for $flatten\mchip.\design.\transmitter.\fsm.$add$d21_pemmanou_usb/src/USBHost.v:686$152 ($add).
  creating $alu model for $macc $flatten\mchip.\design.\transmitter.\fsm.$add$d21_pemmanou_usb/src/USBHost.v:686$152.
  creating $alu model for $macc $flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:925$228.
  creating $alu model for $macc $flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:923$225.
  creating $alu model for $macc $flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:921$222.
  creating $alu model for $macc $flatten\mchip.\design.\transmitter.\crc.$sub$d21_pemmanou_usb/src/USBHost.v:630$144.
  creating $alu model for $macc $flatten\mchip.\design.\transmitter.\crc.$sub$d21_pemmanou_usb/src/USBHost.v:630$142.
  creating $alu model for $macc $flatten\mchip.\design.\transmitter.\bit_stuff.$add$d21_pemmanou_usb/src/USBHost.v:955$234.
  creating $alu model for $macc $flatten\mchip.\design.\receiver.\wire_in.$add$d21_pemmanou_usb/src/USBHost.v:1449$364.
  creating $alu model for $macc $flatten\mchip.\design.\receiver.\wire_in.$add$d21_pemmanou_usb/src/USBHost.v:1448$362.
  creating $alu model for $macc $flatten\mchip.\design.\receiver.\fsm.$add$d21_pemmanou_usb/src/USBHost.v:1672$402.
  creating $alu model for $macc $flatten\mchip.\design.\receiver.\find_sync.$add$d21_pemmanou_usb/src/USBHost.v:1487$372.
  creating $alu model for $macc $flatten\mchip.\design.\receiver.\bit_unstuff.$add$d21_pemmanou_usb/src/USBHost.v:1542$382.
  creating $alu model for $macc $flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1200$291.
  creating $alu model for $macc $flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1199$288.
  creating $alu model for $macc $flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1198$285.
  creating $alu model for $macc $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:269$56.
  creating $alu model for $macc $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:264$48.
  creating $alu model for $macc $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:259$40.
  creating $alu model for $macc $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:254$32.
  creating $alu model for $macc $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:252$26.
  creating $alu cell for $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:252$26: $auto$alumacc.cc:485:replace_alu$1947
  creating $alu cell for $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:254$32: $auto$alumacc.cc:485:replace_alu$1950
  creating $alu cell for $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:259$40: $auto$alumacc.cc:485:replace_alu$1953
  creating $alu cell for $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:264$48: $auto$alumacc.cc:485:replace_alu$1956
  creating $alu cell for $flatten\mchip.\design.\inter.$add$d21_pemmanou_usb/src/USBHost.v:269$56: $auto$alumacc.cc:485:replace_alu$1959
  creating $alu cell for $flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1198$285: $auto$alumacc.cc:485:replace_alu$1962
  creating $alu cell for $flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1199$288: $auto$alumacc.cc:485:replace_alu$1965
  creating $alu cell for $flatten\mchip.\design.\io_fsm.$add$d21_pemmanou_usb/src/USBHost.v:1200$291: $auto$alumacc.cc:485:replace_alu$1968
  creating $alu cell for $flatten\mchip.\design.\receiver.\bit_unstuff.$add$d21_pemmanou_usb/src/USBHost.v:1542$382: $auto$alumacc.cc:485:replace_alu$1971
  creating $alu cell for $flatten\mchip.\design.\receiver.\find_sync.$add$d21_pemmanou_usb/src/USBHost.v:1487$372: $auto$alumacc.cc:485:replace_alu$1974
  creating $alu cell for $flatten\mchip.\design.\receiver.\fsm.$add$d21_pemmanou_usb/src/USBHost.v:1672$402: $auto$alumacc.cc:485:replace_alu$1977
  creating $alu cell for $flatten\mchip.\design.\receiver.\wire_in.$add$d21_pemmanou_usb/src/USBHost.v:1448$362: $auto$alumacc.cc:485:replace_alu$1980
  creating $alu cell for $flatten\mchip.\design.\receiver.\wire_in.$add$d21_pemmanou_usb/src/USBHost.v:1449$364: $auto$alumacc.cc:485:replace_alu$1983
  creating $alu cell for $flatten\mchip.\design.\transmitter.\bit_stuff.$add$d21_pemmanou_usb/src/USBHost.v:955$234: $auto$alumacc.cc:485:replace_alu$1986
  creating $alu cell for $flatten\mchip.\design.\transmitter.\crc.$sub$d21_pemmanou_usb/src/USBHost.v:630$142: $auto$alumacc.cc:485:replace_alu$1989
  creating $alu cell for $flatten\mchip.\design.\transmitter.\crc.$sub$d21_pemmanou_usb/src/USBHost.v:630$144: $auto$alumacc.cc:485:replace_alu$1992
  creating $alu cell for $flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:921$222: $auto$alumacc.cc:485:replace_alu$1995
  creating $alu cell for $flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:923$225: $auto$alumacc.cc:485:replace_alu$1998
  creating $alu cell for $flatten\mchip.\design.\transmitter.\encoder.$sub$d21_pemmanou_usb/src/USBHost.v:925$228: $auto$alumacc.cc:485:replace_alu$2001
  creating $alu cell for $flatten\mchip.\design.\transmitter.\fsm.$add$d21_pemmanou_usb/src/USBHost.v:686$152: $auto$alumacc.cc:485:replace_alu$2004
  created 20 $alu and 0 $macc cells.

4.14. Executing SHARE pass (SAT-based resource sharing).

4.15. Executing OPT pass (performing simple optimizations).

4.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~108 debug messages>

4.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.15.6. Executing OPT_DFF pass (perform DFF optimizations).

4.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.15.9. Rerunning OPT passes. (Maybe there is more to do..)

4.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~108 debug messages>

4.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
    New ctrl vector for $pmux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1407: { $flatten\mchip.\design.\transmitter.\fsm.$procmux$1205_CMP $auto$opt_reduce.cc:134:opt_pmux$2008 $flatten\mchip.\design.\transmitter.\fsm.$procmux$1202_CMP $flatten\mchip.\design.\transmitter.\fsm.$procmux$1200_CMP $flatten\mchip.\design.\transmitter.\fsm.$procmux$1199_CMP $flatten\mchip.\design.\transmitter.\fsm.$procmux$1201_CMP $flatten\mchip.\design.\transmitter.\fsm.$procmux$1198_CMP }
  Optimizing cells in module \toplevel_chip.
Performed a total of 1 changes.

4.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.15.13. Executing OPT_DFF pass (perform DFF optimizations).

4.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.15.16. Rerunning OPT passes. (Maybe there is more to do..)

4.15.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~108 debug messages>

4.15.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.15.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.15.20. Executing OPT_DFF pass (perform DFF optimizations).

4.15.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.15.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.15.23. Finished OPT passes. (There is nothing left to do.)

4.16. Executing MEMORY pass.

4.16.1. Executing OPT_MEM pass (optimize memories).
toplevel_chip.$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489: removing const-0 lane 3
Performed a total of 1 transformations.

4.16.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.16.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

4.16.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.16.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489'[0] in module `\toplevel_chip': no output FF found.
Checking read port address `$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489'[0] in module `\toplevel_chip': no address FF found.

4.16.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.16.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.16.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.16.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.18. Executing OPT pass (performing simple optimizations).

4.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~178 debug messages>

4.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

4.18.3. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $auto$ff.cc:266:slice$1871 ($adffe) from module toplevel_chip.

4.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 15 unused cells and 113 unused wires.
<suppressed ~26 debug messages>

4.18.5. Rerunning OPT passes. (Removed registers in this run.)

4.18.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.18.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.18.8. Executing OPT_DFF pass (perform DFF optimizations).

4.18.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.18.10. Finished fast OPT passes.

4.19. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489 in module \toplevel_chip:
  created 8 $dff cells and 0 static cells of width 3.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.

4.20. Executing OPT pass (performing simple optimizations).

4.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~65 debug messages>

4.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
    Consolidated identical input bits for $mux cell $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][2][2]$2052:
      Old ports: A=3'100, B=3'101, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][1]$a$2044
      New ports: A=1'0, B=1'1, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][1]$a$2044 [0]
      New connections: $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][1]$a$2044 [2:1] = 2'10
    Consolidated identical input bits for $mux cell $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][2][1]$2049:
      Old ports: A=3'010, B=3'011, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][0]$b$2042
      New ports: A=1'0, B=1'1, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][0]$b$2042 [0]
      New connections: $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][0]$b$2042 [2:1] = 2'01
    Consolidated identical input bits for $mux cell $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][2][0]$2046:
      Old ports: A=3'000, B=3'001, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][0]$a$2041
      New ports: A=1'0, B=1'1, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][0]$a$2041 [0]
      New connections: $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][0]$a$2041 [2:1] = 2'00
    Consolidated identical input bits for $mux cell $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][2][3]$2055:
      Old ports: A=3'110, B=3'111, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][1]$b$2045
      New ports: A=1'0, B=1'1, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][1]$b$2045 [0]
      New connections: $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][1]$b$2045 [2:1] = 2'11
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\inter.$procmux$1531:
      Old ports: A={ 1'0 $flatten\mchip.\design.\inter.$auto$proc_rom.cc:149:do_switch$488 [2:0] }, B=4'0000, Y=$flatten\mchip.\design.\inter.$3\next_state[3:0]
      New ports: A=$flatten\mchip.\design.\inter.$auto$proc_rom.cc:149:do_switch$488 [2:0], B=3'000, Y=$flatten\mchip.\design.\inter.$3\next_state[3:0] [2:0]
      New connections: $flatten\mchip.\design.\inter.$3\next_state[3:0] [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:253$30:
      Old ports: A=2'10, B=2'00, Y=$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:253$30_Y [1:0]
      New ports: A=1'1, B=1'0, Y=$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:253$30_Y [1]
      New connections: $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:253$30_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:263$46:
      Old ports: A=2'11, B=2'00, Y=$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:263$46_Y [1:0]
      New ports: A=1'1, B=1'0, Y=$flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:263$46_Y [0]
      New connections: $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:263$46_Y [1] = $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:263$46_Y [0]
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:268$54:
      Old ports: A=3'100, B=3'000, Y=$auto$wreduce.cc:461:run$1917 [2:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$1917 [2]
      New connections: $auto$wreduce.cc:461:run$1917 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:273$62:
      Old ports: A=3'101, B=3'000, Y=$auto$wreduce.cc:461:run$1918 [2:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$1918 [0]
      New connections: $auto$wreduce.cc:461:run$1918 [2:1] = { $auto$wreduce.cc:461:run$1918 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:279$68:
      Old ports: A=3'110, B=3'000, Y=$auto$wreduce.cc:461:run$1919 [2:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$1919 [1]
      New connections: { $auto$wreduce.cc:461:run$1919 [2] $auto$wreduce.cc:461:run$1919 [0] } = { $auto$wreduce.cc:461:run$1919 [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:285$74:
      Old ports: A=3'111, B=3'000, Y=$auto$wreduce.cc:461:run$1921 [2:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$1921 [0]
      New connections: $auto$wreduce.cc:461:run$1921 [2:1] = { $auto$wreduce.cc:461:run$1921 [0] $auto$wreduce.cc:461:run$1921 [0] }
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$procmux$1009:
      Old ports: A={ 2'00 $auto$wreduce.cc:461:run$1922 [1:0] }, B=4'0001, Y=$flatten\mchip.\design.\io_fsm.$2\next_state[3:0]
      New ports: A=$auto$wreduce.cc:461:run$1922 [1:0], B=2'01, Y=$flatten\mchip.\design.\io_fsm.$2\next_state[3:0] [1:0]
      New connections: $flatten\mchip.\design.\io_fsm.$2\next_state[3:0] [3:2] = 2'00
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$procmux$854:
      Old ports: A=4'0000, B=4'1010, Y=$flatten\mchip.\design.\io_fsm.$3\PID_to_sender[3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\mchip.\design.\io_fsm.$3\PID_to_sender[3:0] [1]
      New connections: { $flatten\mchip.\design.\io_fsm.$3\PID_to_sender[3:0] [3:2] $flatten\mchip.\design.\io_fsm.$3\PID_to_sender[3:0] [0] } = { $flatten\mchip.\design.\io_fsm.$3\PID_to_sender[3:0] [1] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$procmux$926:
      Old ports: A=4'0111, B={ 1'0 $auto$wreduce.cc:461:run$1930 [2:0] }, Y=$flatten\mchip.\design.\io_fsm.$9\next_state[3:0]
      New ports: A=3'111, B=$auto$wreduce.cc:461:run$1930 [2:0], Y=$flatten\mchip.\design.\io_fsm.$9\next_state[3:0] [2:0]
      New connections: $flatten\mchip.\design.\io_fsm.$9\next_state[3:0] [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$procmux$936:
      Old ports: A=4'0000, B={ 1'0 $auto$wreduce.cc:461:run$1930 [2:0] }, Y=$flatten\mchip.\design.\io_fsm.$8\next_state[3:0]
      New ports: A=3'000, B=$auto$wreduce.cc:461:run$1930 [2:0], Y=$flatten\mchip.\design.\io_fsm.$8\next_state[3:0] [2:0]
      New connections: $flatten\mchip.\design.\io_fsm.$8\next_state[3:0] [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$procmux$954:
      Old ports: A=4'0011, B={ 1'0 $auto$wreduce.cc:461:run$1926 [2:0] }, Y=$flatten\mchip.\design.\io_fsm.$6\next_state[3:0]
      New ports: A=3'011, B=$auto$wreduce.cc:461:run$1926 [2:0], Y=$flatten\mchip.\design.\io_fsm.$6\next_state[3:0] [2:0]
      New connections: $flatten\mchip.\design.\io_fsm.$6\next_state[3:0] [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$procmux$968:
      Old ports: A=4'0101, B={ 1'0 $auto$wreduce.cc:461:run$1926 [2:0] }, Y=$flatten\mchip.\design.\io_fsm.$5\next_state[3:0]
      New ports: A=3'101, B=$auto$wreduce.cc:461:run$1926 [2:0], Y=$flatten\mchip.\design.\io_fsm.$5\next_state[3:0] [2:0]
      New connections: $flatten\mchip.\design.\io_fsm.$5\next_state[3:0] [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$procmux$993:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:461:run$1922 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$1922 [1]
      New connections: $auto$wreduce.cc:461:run$1922 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1135$265:
      Old ports: A=2'01, B=2'11, Y=$auto$wreduce.cc:461:run$1924 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$1924 [1]
      New connections: $auto$wreduce.cc:461:run$1924 [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1136$266:
      Old ports: A=3'010, B=3'100, Y=$auto$wreduce.cc:461:run$1925 [2:0]
      New ports: A=2'01, B=2'10, Y=$auto$wreduce.cc:461:run$1925 [2:1]
      New connections: $auto$wreduce.cc:461:run$1925 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1140$267:
      Old ports: A=3'110, B=3'000, Y=$auto$wreduce.cc:461:run$1926 [2:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$1926 [1]
      New connections: { $auto$wreduce.cc:461:run$1926 [2] $auto$wreduce.cc:461:run$1926 [0] } = { $auto$wreduce.cc:461:run$1926 [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1148$269:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:461:run$1927 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$1927 [0]
      New connections: $auto$wreduce.cc:461:run$1927 [1] = $auto$wreduce.cc:461:run$1927 [0]
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1149$270:
      Old ports: A=3'101, B=3'000, Y=$auto$wreduce.cc:461:run$1928 [2:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$1928 [0]
      New connections: $auto$wreduce.cc:461:run$1928 [2:1] = { $auto$wreduce.cc:461:run$1928 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1150$271:
      Old ports: A=3'110, B=3'011, Y=$auto$wreduce.cc:461:run$1929 [2:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:461:run$1929 [2] $auto$wreduce.cc:461:run$1929 [0] }
      New connections: $auto$wreduce.cc:461:run$1929 [1] = 1'1
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1154$275:
      Old ports: A=3'100, B=3'000, Y=$auto$wreduce.cc:461:run$1930 [2:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$1930 [2]
      New connections: $auto$wreduce.cc:461:run$1930 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1173$281:
      Old ports: A=4'0001, B=4'1001, Y=$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1173$281_Y
      New ports: A=1'0, B=1'1, Y=$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1173$281_Y [3]
      New connections: $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1173$281_Y [2:0] = 3'001
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1193$284:
      Old ports: A=2'01, B=2'11, Y=$auto$wreduce.cc:461:run$1931 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$1931 [1]
      New connections: $auto$wreduce.cc:461:run$1931 [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1249$313:
      Old ports: A=2'00, B=2'11, Y=$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1249$313_Y [1:0]
      New ports: A=1'0, B=1'1, Y=$flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1249$313_Y [0]
      New connections: $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1249$313_Y [1] = $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1249$313_Y [0]
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\receiver.\fsm.$procmux$641:
      Old ports: A={ 2'11 $auto$wreduce.cc:461:run$1932 [0] }, B=3'011, Y=$flatten\mchip.\design.\receiver.\fsm.$4\next_state[2:0]
      New ports: A={ 1'1 $auto$wreduce.cc:461:run$1932 [0] }, B=2'01, Y={ $flatten\mchip.\design.\receiver.\fsm.$4\next_state[2:0] [2] $flatten\mchip.\design.\receiver.\fsm.$4\next_state[2:0] [0] }
      New connections: $flatten\mchip.\design.\receiver.\fsm.$4\next_state[2:0] [1] = 1'1
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1675$406:
      Old ports: A=3'010, B=3'100, Y=$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1675$406_Y
      New ports: A=2'01, B=2'10, Y=$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1675$406_Y [2:1]
      New connections: $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1675$406_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1682$414:
      Old ports: A=3'011, B=3'101, Y=$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1682$414_Y
      New ports: A=2'01, B=2'10, Y=$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1682$414_Y [2:1]
      New connections: $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1682$414_Y [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1689$422:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:461:run$1937 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$1937 [1]
      New connections: $auto$wreduce.cc:461:run$1937 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1703$436:
      Old ports: A=3'110, B=3'000, Y=$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1703$436_Y
      New ports: A=1'1, B=1'0, Y=$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1703$436_Y [1]
      New connections: { $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1703$436_Y [2] $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1703$436_Y [0] } = { $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1703$436_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1710$441:
      Old ports: A=3'111, B=3'000, Y=$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1710$441_Y
      New ports: A=1'1, B=1'0, Y=$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1710$441_Y [0]
      New connections: $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1710$441_Y [2:1] = { $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1710$441_Y [0] $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1710$441_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1746$449:
      Old ports: A=2'10, B=2'00, Y=$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1746$449_Y
      New ports: A=1'1, B=1'0, Y=$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1746$449_Y [1]
      New connections: $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1746$449_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1756$450:
      Old ports: A=2'11, B=2'00, Y=$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1756$450_Y
      New ports: A=1'1, B=1'0, Y=$flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1756$450_Y [0]
      New connections: $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1756$450_Y [1] = $flatten\mchip.\design.\receiver.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1756$450_Y [0]
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\rw_fsm.$procmux$783:
      Old ports: A=3'011, B=3'100, Y=$flatten\mchip.\design.\rw_fsm.$7\next_state[2:0]
      New ports: A=2'01, B=2'10, Y={ $flatten\mchip.\design.\rw_fsm.$7\next_state[2:0] [2] $flatten\mchip.\design.\rw_fsm.$7\next_state[2:0] [0] }
      New connections: $flatten\mchip.\design.\rw_fsm.$7\next_state[2:0] [1] = $flatten\mchip.\design.\rw_fsm.$7\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\rw_fsm.$procmux$814:
      Old ports: A={ 1'0 $flatten\mchip.\design.\rw_fsm.$5\next_state[2:0] [1:0] }, B=3'000, Y=$flatten\mchip.\design.\rw_fsm.$4\next_state[2:0]
      New ports: A=$flatten\mchip.\design.\rw_fsm.$5\next_state[2:0] [1:0], B=2'00, Y=$flatten\mchip.\design.\rw_fsm.$4\next_state[2:0] [1:0]
      New connections: $flatten\mchip.\design.\rw_fsm.$4\next_state[2:0] [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\rw_fsm.$procmux$824:
      Old ports: A=2'00, B=2'11, Y=$flatten\mchip.\design.\rw_fsm.$3\next_state[2:0] [1:0]
      New ports: A=1'0, B=1'1, Y=$flatten\mchip.\design.\rw_fsm.$3\next_state[2:0] [0]
      New connections: $flatten\mchip.\design.\rw_fsm.$3\next_state[2:0] [1] = $flatten\mchip.\design.\rw_fsm.$3\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\rw_fsm.$procmux$837:
      Old ports: A={ 1'0 $flatten\mchip.\design.\rw_fsm.$3\next_state[2:0] [1:0] }, B=3'001, Y=$flatten\mchip.\design.\rw_fsm.$2\next_state[2:0]
      New ports: A=$flatten\mchip.\design.\rw_fsm.$3\next_state[2:0] [1:0], B=2'01, Y=$flatten\mchip.\design.\rw_fsm.$2\next_state[2:0] [1:0]
      New connections: $flatten\mchip.\design.\rw_fsm.$2\next_state[2:0] [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\rw_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1353$332:
      Old ports: A=2'10, B=2'00, Y=$flatten\mchip.\design.\rw_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1353$332_Y [1:0]
      New ports: A=1'1, B=1'0, Y=$flatten\mchip.\design.\rw_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1353$332_Y [1]
      New connections: $flatten\mchip.\design.\rw_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1353$332_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\rw_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1361$334:
      Old ports: A=3'100, B=3'000, Y=$flatten\mchip.\design.\rw_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1361$334_Y
      New ports: A=1'1, B=1'0, Y=$flatten\mchip.\design.\rw_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1361$334_Y [2]
      New connections: $flatten\mchip.\design.\rw_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1361$334_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\rw_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1371$338:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \mchip.design.inter.mempage_reg 48'000000000000000000000000000000000000000000000000 }, Y=$flatten\mchip.\design.\rw_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1371$338_Y
      New ports: A=16'0000000000000000, B=\mchip.design.inter.mempage_reg, Y=$flatten\mchip.\design.\rw_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1371$338_Y [63:48]
      New connections: $flatten\mchip.\design.\rw_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1371$338_Y [47:0] = 48'000000000000000000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1365:
      Old ports: A=2'11, B=2'01, Y=$flatten\mchip.\design.\transmitter.\fsm.$4\next_state[2:0] [1:0]
      New ports: A=1'1, B=1'0, Y=$flatten\mchip.\design.\transmitter.\fsm.$4\next_state[2:0] [1]
      New connections: $flatten\mchip.\design.\transmitter.\fsm.$4\next_state[2:0] [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:703$164:
      Old ports: A=3'011, B=3'100, Y=$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:703$164_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:703$164_Y [2] $flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:703$164_Y [0] }
      New connections: $flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:703$164_Y [1] = $flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:703$164_Y [0]
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:710$172:
      Old ports: A=2'00, B=2'11, Y=$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:710$172_Y [1:0]
      New ports: A=1'0, B=1'1, Y=$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:710$172_Y [0]
      New connections: $flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:710$172_Y [1] = $flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:710$172_Y [0]
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:731$194:
      Old ports: A=3'111, B=3'000, Y=$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:731$194_Y
      New ports: A=1'1, B=1'0, Y=$flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:731$194_Y [0]
      New connections: $flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:731$194_Y [2:1] = { $flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:731$194_Y [0] $flatten\mchip.\design.\transmitter.\fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:731$194_Y [0] }
  Optimizing cells in module \toplevel_chip.
    Consolidated identical input bits for $mux cell $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][1]$2043:
      Old ports: A=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][1]$a$2044, B=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][1]$b$2045, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][0][0]$b$2039
      New ports: A={ 1'0 $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][1]$a$2044 [0] }, B={ 1'1 $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][1]$b$2045 [0] }, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][0][0]$b$2039 [1:0]
      New connections: $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][0][0]$b$2039 [2] = 1'1
    Consolidated identical input bits for $mux cell $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][0]$2040:
      Old ports: A=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][0]$a$2041, B=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][0]$b$2042, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][0][0]$a$2038
      New ports: A={ 1'0 $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][0]$a$2041 [0] }, B={ 1'1 $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][0]$b$2042 [0] }, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][0][0]$a$2038 [1:0]
      New connections: $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][0][0]$a$2038 [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\inter.$procmux$1546:
      Old ports: A=4'0000, B=$flatten\mchip.\design.\inter.$3\next_state[3:0], Y=$flatten\mchip.\design.\inter.$2\next_state[3:0]
      New ports: A=3'000, B=$flatten\mchip.\design.\inter.$3\next_state[3:0] [2:0], Y=$flatten\mchip.\design.\inter.$2\next_state[3:0] [2:0]
      New connections: $flatten\mchip.\design.\inter.$2\next_state[3:0] [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$procmux$867:
      Old ports: A=$flatten\mchip.\design.\io_fsm.$3\PID_to_sender[3:0], B=4'0010, Y=$flatten\mchip.\design.\io_fsm.$2\PID_to_sender[3:0]
      New ports: A={ $flatten\mchip.\design.\io_fsm.$3\PID_to_sender[3:0] [1] $flatten\mchip.\design.\io_fsm.$3\PID_to_sender[3:0] [1] }, B=2'01, Y={ $flatten\mchip.\design.\io_fsm.$2\PID_to_sender[3:0] [3] $flatten\mchip.\design.\io_fsm.$2\PID_to_sender[3:0] [1] }
      New connections: { $flatten\mchip.\design.\io_fsm.$2\PID_to_sender[3:0] [2] $flatten\mchip.\design.\io_fsm.$2\PID_to_sender[3:0] [0] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$procmux$926:
      Old ports: A=3'111, B=$auto$wreduce.cc:461:run$1930 [2:0], Y=$flatten\mchip.\design.\io_fsm.$9\next_state[3:0] [2:0]
      New ports: A=2'11, B={ $auto$wreduce.cc:461:run$1930 [2] 1'0 }, Y={ $flatten\mchip.\design.\io_fsm.$9\next_state[3:0] [2] $flatten\mchip.\design.\io_fsm.$9\next_state[3:0] [0] }
      New connections: $flatten\mchip.\design.\io_fsm.$9\next_state[3:0] [1] = $flatten\mchip.\design.\io_fsm.$9\next_state[3:0] [0]
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$procmux$936:
      Old ports: A=3'000, B=$auto$wreduce.cc:461:run$1930 [2:0], Y=$flatten\mchip.\design.\io_fsm.$8\next_state[3:0] [2:0]
      New ports: A=1'0, B=$auto$wreduce.cc:461:run$1930 [2], Y=$flatten\mchip.\design.\io_fsm.$8\next_state[3:0] [2]
      New connections: $flatten\mchip.\design.\io_fsm.$8\next_state[3:0] [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$procmux$944:
      Old ports: A=$flatten\mchip.\design.\io_fsm.$9\next_state[3:0], B=$flatten\mchip.\design.\io_fsm.$8\next_state[3:0], Y=$flatten\mchip.\design.\io_fsm.$7\next_state[3:0]
      New ports: A=$flatten\mchip.\design.\io_fsm.$9\next_state[3:0] [2:0], B=$flatten\mchip.\design.\io_fsm.$8\next_state[3:0] [2:0], Y=$flatten\mchip.\design.\io_fsm.$7\next_state[3:0] [2:0]
      New connections: $flatten\mchip.\design.\io_fsm.$7\next_state[3:0] [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$procmux$980:
      Old ports: A=$flatten\mchip.\design.\io_fsm.$6\next_state[3:0], B=$flatten\mchip.\design.\io_fsm.$5\next_state[3:0], Y=$flatten\mchip.\design.\io_fsm.$4\next_state[3:0]
      New ports: A=$flatten\mchip.\design.\io_fsm.$6\next_state[3:0] [2:0], B=$flatten\mchip.\design.\io_fsm.$5\next_state[3:0] [2:0], Y=$flatten\mchip.\design.\io_fsm.$4\next_state[3:0] [2:0]
      New connections: $flatten\mchip.\design.\io_fsm.$4\next_state[3:0] [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\receiver.\fsm.$procmux$658:
      Old ports: A=$flatten\mchip.\design.\receiver.\fsm.$4\next_state[2:0], B=3'010, Y=$flatten\mchip.\design.\receiver.\fsm.$3\next_state[2:0]
      New ports: A={ $flatten\mchip.\design.\receiver.\fsm.$4\next_state[2:0] [2] $flatten\mchip.\design.\receiver.\fsm.$4\next_state[2:0] [0] }, B=2'00, Y={ $flatten\mchip.\design.\receiver.\fsm.$3\next_state[2:0] [2] $flatten\mchip.\design.\receiver.\fsm.$3\next_state[2:0] [0] }
      New connections: $flatten\mchip.\design.\receiver.\fsm.$3\next_state[2:0] [1] = 1'1
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\rw_fsm.$procmux$793:
      Old ports: A=$flatten\mchip.\design.\rw_fsm.$7\next_state[2:0], B=3'000, Y=$flatten\mchip.\design.\rw_fsm.$6\next_state[2:0]
      New ports: A={ $flatten\mchip.\design.\rw_fsm.$7\next_state[2:0] [2] $flatten\mchip.\design.\rw_fsm.$7\next_state[2:0] [0] }, B=2'00, Y={ $flatten\mchip.\design.\rw_fsm.$6\next_state[2:0] [2] $flatten\mchip.\design.\rw_fsm.$6\next_state[2:0] [0] }
      New connections: $flatten\mchip.\design.\rw_fsm.$6\next_state[2:0] [1] = $flatten\mchip.\design.\rw_fsm.$6\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\transmitter.\fsm.$procmux$1381:
      Old ports: A={ 1'1 $flatten\mchip.\design.\transmitter.\fsm.$4\next_state[2:0] [1:0] }, B=3'011, Y=$flatten\mchip.\design.\transmitter.\fsm.$3\next_state[2:0]
      New ports: A={ 1'1 $flatten\mchip.\design.\transmitter.\fsm.$4\next_state[2:0] [1] }, B=2'01, Y=$flatten\mchip.\design.\transmitter.\fsm.$3\next_state[2:0] [2:1]
      New connections: $flatten\mchip.\design.\transmitter.\fsm.$3\next_state[2:0] [0] = 1'1
  Optimizing cells in module \toplevel_chip.
    Consolidated identical input bits for $pmux cell $flatten\mchip.\design.\inter.$procmux$1551:
      Old ports: A=4'0000, B={ $flatten\mchip.\design.\inter.$2\next_state[3:0] 2'00 $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:253$30_Y [1:0] 3'000 $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:258$38_Y [0] 2'00 $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:263$46_Y [1:0] 1'0 $auto$wreduce.cc:461:run$1917 [2:0] 1'0 $auto$wreduce.cc:461:run$1918 [2:0] 1'0 $auto$wreduce.cc:461:run$1919 [2:0] 1'0 $auto$wreduce.cc:461:run$1921 [2:0] }, Y=\mchip.design.inter.next_state
      New ports: A=3'000, B={ $flatten\mchip.\design.\inter.$2\next_state[3:0] [2:0] 1'0 $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:253$30_Y [1] 3'000 $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:258$38_Y [0] 1'0 $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:263$46_Y [0] $flatten\mchip.\design.\inter.$ternary$d21_pemmanou_usb/src/USBHost.v:263$46_Y [0] $auto$wreduce.cc:461:run$1917 [2] 2'00 $auto$wreduce.cc:461:run$1918 [0] 1'0 $auto$wreduce.cc:461:run$1918 [0] $auto$wreduce.cc:461:run$1919 [1] $auto$wreduce.cc:461:run$1919 [1] 1'0 $auto$wreduce.cc:461:run$1921 [0] $auto$wreduce.cc:461:run$1921 [0] $auto$wreduce.cc:461:run$1921 [0] }, Y=\mchip.design.inter.next_state [2:0]
      New connections: \mchip.design.inter.next_state [3] = 1'0
    Consolidated identical input bits for $pmux cell $flatten\mchip.\design.\io_fsm.$procmux$1014:
      Old ports: A=4'0000, B={ $flatten\mchip.\design.\io_fsm.$2\next_state[3:0] 2'00 $auto$wreduce.cc:461:run$1924 [1:0] 1'0 $auto$wreduce.cc:461:run$1925 [2:0] $flatten\mchip.\design.\io_fsm.$4\next_state[3:0] 2'01 $auto$wreduce.cc:461:run$1927 [1:0] 1'0 $auto$wreduce.cc:461:run$1928 [2:0] 1'0 $auto$wreduce.cc:461:run$1929 [2:0] $flatten\mchip.\design.\io_fsm.$7\next_state[3:0] }, Y=\mchip.design.io_fsm.next_state
      New ports: A=3'000, B={ 1'0 $flatten\mchip.\design.\io_fsm.$2\next_state[3:0] [1:0] 1'0 $auto$wreduce.cc:461:run$1924 [1] 1'1 $auto$wreduce.cc:461:run$1925 [2:1] 1'0 $flatten\mchip.\design.\io_fsm.$4\next_state[3:0] [2:0] 1'1 $auto$wreduce.cc:461:run$1927 [0] $auto$wreduce.cc:461:run$1927 [0] $auto$wreduce.cc:461:run$1928 [0] 1'0 $auto$wreduce.cc:461:run$1928 [0] $auto$wreduce.cc:461:run$1929 [2] 1'1 $auto$wreduce.cc:461:run$1929 [0] $flatten\mchip.\design.\io_fsm.$7\next_state[3:0] [2:0] }, Y=\mchip.design.io_fsm.next_state [2:0]
      New connections: \mchip.design.io_fsm.next_state [3] = 1'0
    Consolidated identical input bits for $pmux cell $flatten\mchip.\design.\io_fsm.$procmux$882:
      Old ports: A=4'0000, B={ $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1173$281_Y 6'100100 $auto$wreduce.cc:461:run$1931 [1:0] $flatten\mchip.\design.\io_fsm.$2\PID_to_sender[3:0] 14'00110010101000 $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1249$313_Y [1:0] }, Y=\mchip.design.transmitter.encoder.PID
      New ports: A=3'000, B={ $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1173$281_Y [3] 6'011010 $auto$wreduce.cc:461:run$1931 [1] 1'1 $flatten\mchip.\design.\io_fsm.$2\PID_to_sender[3:0] [3] $flatten\mchip.\design.\io_fsm.$2\PID_to_sender[3:0] [1] 11'00110101100 $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1249$313_Y [0] $flatten\mchip.\design.\io_fsm.$ternary$d21_pemmanou_usb/src/USBHost.v:1249$313_Y [0] }, Y={ \mchip.design.transmitter.encoder.PID [3] \mchip.design.transmitter.encoder.PID [1:0] }
      New connections: \mchip.design.transmitter.encoder.PID [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mchip.\design.\io_fsm.$procmux$944:
      Old ports: A=$flatten\mchip.\design.\io_fsm.$9\next_state[3:0] [2:0], B=$flatten\mchip.\design.\io_fsm.$8\next_state[3:0] [2:0], Y=$flatten\mchip.\design.\io_fsm.$7\next_state[3:0] [2:0]
      New ports: A={ $flatten\mchip.\design.\io_fsm.$9\next_state[3:0] [2] $flatten\mchip.\design.\io_fsm.$9\next_state[3:0] [0] }, B={ $flatten\mchip.\design.\io_fsm.$8\next_state[3:0] [2] 1'0 }, Y={ $flatten\mchip.\design.\io_fsm.$7\next_state[3:0] [2] $flatten\mchip.\design.\io_fsm.$7\next_state[3:0] [0] }
      New connections: $flatten\mchip.\design.\io_fsm.$7\next_state[3:0] [1] = $flatten\mchip.\design.\io_fsm.$7\next_state[3:0] [0]
  Optimizing cells in module \toplevel_chip.
Performed a total of 62 changes.

4.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

4.20.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $pmux $flatten\mchip.\design.\io_fsm.$procmux$892 in front of them:
        $flatten\mchip.\design.\io_fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1247$309
        $flatten\mchip.\design.\io_fsm.$eq$d21_pemmanou_usb/src/USBHost.v:1202$292

    Found cells that share an operand and can be merged by moving the $pmux $flatten\mchip.\design.\io_fsm.$procmux$892 in front of them:
        $flatten\mchip.\design.\io_fsm.$ne$d21_pemmanou_usb/src/USBHost.v:1217$297
        $flatten\mchip.\design.\io_fsm.$ne$d21_pemmanou_usb/src/USBHost.v:1182$282

    Found cells that share an operand and can be merged by moving the $pmux $flatten\mchip.\design.\rw_fsm.$procmux$763 in front of them:
        $flatten\mchip.\design.\rw_fsm.$logic_and$d21_pemmanou_usb/src/USBHost.v:1393$353
        $flatten\mchip.\design.\rw_fsm.$logic_and$d21_pemmanou_usb/src/USBHost.v:1377$345

4.20.7. Executing OPT_DFF pass (perform DFF optimizations).

4.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

4.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~29 debug messages>

4.20.10. Rerunning OPT passes. (Maybe there is more to do..)

4.20.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~65 debug messages>

4.20.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
    Consolidated identical input bits for $mux cell $auto$opt_share.cc:246:merge_operators$2059:
      Old ports: A=3'011, B=3'111, Y=$auto$rtlil.cc:2560:Pmux$2060
      New ports: A=1'0, B=1'1, Y=$auto$rtlil.cc:2560:Pmux$2060 [2]
      New connections: $auto$rtlil.cc:2560:Pmux$2060 [1:0] = 2'11
    Consolidated identical input bits for $mux cell $auto$opt_share.cc:246:merge_operators$2062:
      Old ports: A=3'001, B=3'100, Y=$auto$rtlil.cc:2560:Pmux$2063
      New ports: A=2'01, B=2'10, Y={ $auto$rtlil.cc:2560:Pmux$2063 [2] $auto$rtlil.cc:2560:Pmux$2063 [0] }
      New connections: $auto$rtlil.cc:2560:Pmux$2063 [1] = 1'0
    New ctrl vector for $pmux cell $flatten\mchip.\design.\io_fsm.$procmux$892: { $auto$opt_reduce.cc:134:opt_pmux$2070 $auto$opt_reduce.cc:134:opt_pmux$2068 }
    New ctrl vector for $pmux cell $flatten\mchip.\design.\rw_fsm.$procmux$763: { $auto$opt_reduce.cc:134:opt_pmux$2072 $auto$opt_reduce.cc:134:opt_pmux$1699 }
    Consolidated identical input bits for $mux cell $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][0][0]$2037:
      Old ports: A={ 1'0 $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][0][0]$a$2038 [1:0] }, B={ 1'1 $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][0][0]$a$2038 [1:0] }, Y=$flatten\mchip.\design.\inter.$auto$proc_rom.cc:149:do_switch$488 [2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\mchip.\design.\inter.$auto$proc_rom.cc:149:do_switch$488 [2]
      New connections: $flatten\mchip.\design.\inter.$auto$proc_rom.cc:149:do_switch$488 [1:0] = $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][0][0]$a$2038 [1:0]
    Consolidated identical input bits for $mux cell $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][1]$2043:
      Old ports: A={ 1'0 $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][0]$a$2041 [0] }, B={ 1'1 $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][1][0]$a$2041 [0] }, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][0][0]$a$2038 [1:0]
      New ports: A=1'0, B=1'1, Y=$memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][0][0]$a$2038 [1]
      New connections: $memory$flatten\mchip.\design.\inter.$auto$proc_rom.cc:150:do_switch$489$rdmux[0][0][0]$a$2038 [0] = \io_in [6]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$2067: { $flatten\mchip.\design.\io_fsm.$procmux$1015_CMP $flatten\mchip.\design.\io_fsm.$procmux$1016_CMP $flatten\mchip.\design.\io_fsm.$procmux$1019_CMP }
  Optimizing cells in module \toplevel_chip.
Performed a total of 7 changes.

4.20.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

4.20.14. Executing OPT_SHARE pass.

4.20.15. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 3 on $flatten\mchip.\design.\inter.$procdff$1671 ($adff) from module toplevel_chip.
Setting constant 0-bit at position 3 on $flatten\mchip.\design.\io_fsm.$procdff$1646 ($adff) from module toplevel_chip.

4.20.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 1 unused cells and 16 unused wires.
<suppressed ~2 debug messages>

4.20.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~5 debug messages>

4.20.18. Rerunning OPT passes. (Maybe there is more to do..)

4.20.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

4.20.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.20.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.20.22. Executing OPT_SHARE pass.

4.20.23. Executing OPT_DFF pass (perform DFF optimizations).

4.20.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

4.20.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.20.26. Rerunning OPT passes. (Maybe there is more to do..)

4.20.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

4.20.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

4.20.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

4.20.30. Executing OPT_SHARE pass.

4.20.31. Executing OPT_DFF pass (perform DFF optimizations).

4.20.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

4.20.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

4.20.34. Finished OPT passes. (There is nothing left to do.)

4.21. Executing TECHMAP pass (map to technology primitives).

4.21.1. Executing Verilog-2005 frontend: /Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $and.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$b6ec48645094baeb70d6b93add0cdbbe7498ad3c\_90_pmux for cells of type $pmux.
Using template $paramod$5d37c9676d77ab033e85de89a3261885cba80ce3\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$20d3ee62d72123142eb855d7ddafd835e31ba009\_90_pmux for cells of type $pmux.
Using template $paramod$e1315d5acb461a412426e33a80ee551cb676987f\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$a473f4770a4b60111e9e52de7ee27405c26ecd63\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$025d767fc934a3e7d59a671de523743ebaa07759\_90_alu for cells of type $alu.
Using template $paramod$constmap:4e9e5ee1156db721f30ed0be46b0ee8c9d5c14b3$paramod$b32b487a6d6ce7ea3d89035eb510642d99cfec73\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$3ace65afedd5f6a6849996376b6c02262a5f23eb\_90_alu for cells of type $alu.
Using template $paramod$constmap:4ce4dd6e10543adc4ee9ced0f0bd4a7d2e43c459$paramod$13a4ec2ddcd690d788fd1dfc925e8814f0966ce8\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $or.
Using template $paramod$9b068a3f4468c7b15193a17d454654d1b2560530\_90_alu for cells of type $alu.
Using template $paramod$constmap:cc4b7ed1723fdfb5120cbe807695a7d153e785cd$paramod$b2aeca7619d8ea50cf753f5aed21b4f8994eab01\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$9e8c19db10db5b8954224cafa0587db20bab09bd\_90_alu for cells of type $alu.
Using template $paramod$constmap:9a1a35c97d9654fa9d9369b547896d00c354048f$paramod$dd1054b1f60b86c1698e81c775da5bb39ec05dfb\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_90_alu for cells of type $alu.
Using template $paramod$b76f0c7d813c9b9e201e1c450cfd00106058a636\_90_pmux for cells of type $pmux.
Using template $paramod$54a4503cc57b9df40b70c1899504d6aac2650719\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:a2afd12071f3a2da6afcb0cd3bd99edc7952fe11$paramod$390f13ba1ee8dbb962f1fe0219c93dbf52c4128c\_90_shift_shiftx for cells of type $shiftx.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
  Constant input on bit 1 of port A: 1'0
  Constant input on bit 2 of port A: 1'0
  Constant input on bit 3 of port A: 1'0
  Constant input on bit 4 of port A: 1'0
  Constant input on bit 5 of port A: 1'0
  Constant input on bit 6 of port A: 1'0
  Constant input on bit 7 of port A: 1'0
Creating constmapped module `$paramod$constmap:5ad3f6e56da048d8b5e9df6516b03acaff325865$paramod$b2aeca7619d8ea50cf753f5aed21b4f8994eab01\_90_shift_shiftx'.

4.21.58. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:5ad3f6e56da048d8b5e9df6516b03acaff325865$paramod$b2aeca7619d8ea50cf753f5aed21b4f8994eab01\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$3232.
    dead port 2/2 on $mux $procmux$3226.
    dead port 2/2 on $mux $procmux$3220.
    dead port 2/2 on $mux $procmux$3214.
Removed 4 multiplexer ports.
<suppressed ~1284 debug messages>

4.21.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:5ad3f6e56da048d8b5e9df6516b03acaff325865$paramod$b2aeca7619d8ea50cf753f5aed21b4f8994eab01\_90_shift_shiftx.
<suppressed ~6 debug messages>
Removed 5 unused cells and 15 unused wires.
Using template $paramod$constmap:5ad3f6e56da048d8b5e9df6516b03acaff325865$paramod$b2aeca7619d8ea50cf753f5aed21b4f8994eab01\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$0063cc74cb9d92ba0fcb27304a45144f31b8a510\_90_pmux for cells of type $pmux.
Using template $paramod$2407ada40cc3dda6c6015be2b49b748cddb5a800\_90_pmux for cells of type $pmux.
Using template $paramod$a285b5a57fe61eabc57c91b8c412748ee1151a85\_90_pmux for cells of type $pmux.
Using template $paramod$a9f023b7f9387cc24984a8fa4722169e6d5f74aa\_90_pmux for cells of type $pmux.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_90_alu for cells of type $alu.
Using template $paramod$56f7ce6d87f8add68ca646dc02d7695a3189f8e5\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
No more expansions possible.
<suppressed ~1898 debug messages>

4.22. Executing OPT pass (performing simple optimizations).

4.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~3335 debug messages>

4.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~1188 debug messages>
Removed a total of 396 cells.

4.22.3. Executing OPT_DFF pass (perform DFF optimizations).

4.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 1692 unused cells and 2039 unused wires.
<suppressed ~1699 debug messages>

4.22.5. Finished fast OPT passes.

4.23. Executing ABC pass (technology mapping using ABC).

4.23.1. Extracting gate netlist of module `\toplevel_chip' to `<abc-temp-dir>/input.blif'..
Replacing 114 occurrences of constant undef bits with constant zero bits
Extracted 2663 gates and 2958 wires to a netlist network with 292 inputs and 137 outputs.

4.23.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.23.1.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:       82
ABC RESULTS:              NAND cells:       67
ABC RESULTS:               AND cells:      134
ABC RESULTS:               NOR cells:       61
ABC RESULTS:               MUX cells:      153
ABC RESULTS:            ANDNOT cells:      889
ABC RESULTS:               XOR cells:       35
ABC RESULTS:             ORNOT cells:      116
ABC RESULTS:              XNOR cells:       25
ABC RESULTS:                OR cells:      899
ABC RESULTS:        internal signals:     2529
ABC RESULTS:           input signals:      292
ABC RESULTS:          output signals:      137
Removing temp directory.

4.24. Executing OPT pass (performing simple optimizations).

4.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~254 debug messages>

4.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

4.24.3. Executing OPT_DFF pass (perform DFF optimizations).

4.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 6 unused cells and 1266 unused wires.
<suppressed ~169 debug messages>

4.24.5. Finished fast OPT passes.

4.25. Executing HIERARCHY pass (managing design hierarchy).

4.25.1. Analyzing design hierarchy..
Top module:  \toplevel_chip

4.25.2. Analyzing design hierarchy..
Top module:  \toplevel_chip
Removed 0 unused modules.

4.26. Printing statistics.

=== toplevel_chip ===

   Number of wires:               2566
   Number of wire bits:           4545
   Number of public wires:         181
   Number of public wire bits:    2160
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2867
     $_ANDNOT_                     889
     $_AND_                        134
     $_DFFE_PP0N_                  136
     $_DFFE_PP0P_                  188
     $_DFFE_PP1P_                   43
     $_DFF_PP0_                     46
     $_DFF_PP1_                      2
     $_MUX_                        153
     $_NAND_                        66
     $_NOR_                         61
     $_NOT_                         76
     $_ORNOT_                      115
     $_OR_                         898
     $_XNOR_                        25
     $_XOR_                         35

4.27. Executing CHECK pass (checking for obvious problems).
Checking module toplevel_chip...
Found and reported 0 problems.

5. Executing SETUNDEF pass (replace undef values with defined constants).

6. Executing SETUNDEF pass (replace undef values with defined constants).

7. Executing ASYNC2SYNC pass.
Replacing toplevel_chip.$auto$ff.cc:266:slice$2247 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\nrzi.$0\cur_value[0:0], Q=\mchip.design.transmitter.nrzi.cur_value
Replacing toplevel_chip.$auto$ff.cc:266:slice$2704 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.inter.count_next [0], Q=\mchip.design.inter.count [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2705 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.inter.count_next [1], Q=\mchip.design.inter.count [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2706 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.inter.count_next [2], Q=\mchip.design.inter.count [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2707 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.inter.count_next [3], Q=\mchip.design.inter.count [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2728 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [0], Q=\mchip.design.inter.data_in_reg [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2729 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [1], Q=\mchip.design.inter.data_in_reg [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2730 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [2], Q=\mchip.design.inter.data_in_reg [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2731 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [3], Q=\mchip.design.inter.data_in_reg [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2732 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [4], Q=\mchip.design.inter.data_in_reg [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2733 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [5], Q=\mchip.design.inter.data_in_reg [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2734 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [6], Q=\mchip.design.inter.data_in_reg [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2735 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [7], Q=\mchip.design.inter.data_in_reg [7]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2736 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [8], Q=\mchip.design.inter.data_in_reg [8]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2737 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [9], Q=\mchip.design.inter.data_in_reg [9]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2738 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [10], Q=\mchip.design.inter.data_in_reg [10]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2739 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [11], Q=\mchip.design.inter.data_in_reg [11]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2740 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [12], Q=\mchip.design.inter.data_in_reg [12]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2741 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [13], Q=\mchip.design.inter.data_in_reg [13]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2742 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [14], Q=\mchip.design.inter.data_in_reg [14]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2743 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [15], Q=\mchip.design.inter.data_in_reg [15]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2744 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [16], Q=\mchip.design.inter.data_in_reg [16]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2745 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [17], Q=\mchip.design.inter.data_in_reg [17]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2746 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [18], Q=\mchip.design.inter.data_in_reg [18]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2747 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [19], Q=\mchip.design.inter.data_in_reg [19]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2748 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [20], Q=\mchip.design.inter.data_in_reg [20]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2749 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [21], Q=\mchip.design.inter.data_in_reg [21]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2750 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [22], Q=\mchip.design.inter.data_in_reg [22]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2751 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [23], Q=\mchip.design.inter.data_in_reg [23]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2752 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [24], Q=\mchip.design.inter.data_in_reg [24]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2753 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [25], Q=\mchip.design.inter.data_in_reg [25]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2754 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [26], Q=\mchip.design.inter.data_in_reg [26]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2755 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [27], Q=\mchip.design.inter.data_in_reg [27]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2756 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [28], Q=\mchip.design.inter.data_in_reg [28]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2757 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [29], Q=\mchip.design.inter.data_in_reg [29]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2758 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [30], Q=\mchip.design.inter.data_in_reg [30]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2759 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [31], Q=\mchip.design.inter.data_in_reg [31]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2760 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [32], Q=\mchip.design.inter.data_in_reg [32]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2761 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [33], Q=\mchip.design.inter.data_in_reg [33]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2762 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [34], Q=\mchip.design.inter.data_in_reg [34]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2763 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [35], Q=\mchip.design.inter.data_in_reg [35]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2764 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [36], Q=\mchip.design.inter.data_in_reg [36]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2765 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [37], Q=\mchip.design.inter.data_in_reg [37]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2766 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [38], Q=\mchip.design.inter.data_in_reg [38]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2767 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [39], Q=\mchip.design.inter.data_in_reg [39]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2768 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [40], Q=\mchip.design.inter.data_in_reg [40]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2769 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [41], Q=\mchip.design.inter.data_in_reg [41]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2770 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [42], Q=\mchip.design.inter.data_in_reg [42]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2771 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [43], Q=\mchip.design.inter.data_in_reg [43]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2772 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [44], Q=\mchip.design.inter.data_in_reg [44]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2773 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [45], Q=\mchip.design.inter.data_in_reg [45]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2774 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [46], Q=\mchip.design.inter.data_in_reg [46]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2775 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [47], Q=\mchip.design.inter.data_in_reg [47]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2776 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [48], Q=\mchip.design.inter.data_in_reg [48]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2777 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [49], Q=\mchip.design.inter.data_in_reg [49]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2778 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [50], Q=\mchip.design.inter.data_in_reg [50]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2779 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [51], Q=\mchip.design.inter.data_in_reg [51]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2780 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [52], Q=\mchip.design.inter.data_in_reg [52]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2781 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [53], Q=\mchip.design.inter.data_in_reg [53]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2782 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [54], Q=\mchip.design.inter.data_in_reg [54]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2783 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [55], Q=\mchip.design.inter.data_in_reg [55]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2784 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [56], Q=\mchip.design.inter.data_in_reg [56]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2785 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [57], Q=\mchip.design.inter.data_in_reg [57]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2786 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [58], Q=\mchip.design.inter.data_in_reg [58]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2787 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [59], Q=\mchip.design.inter.data_in_reg [59]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2788 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [60], Q=\mchip.design.inter.data_in_reg [60]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2789 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [61], Q=\mchip.design.inter.data_in_reg [61]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2790 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [62], Q=\mchip.design.inter.data_in_reg [62]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2791 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.final_data [63], Q=\mchip.design.inter.data_in_reg [63]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2807 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [2], Q=\mchip.design.inter.ENDP_reg [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2808 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [3], Q=\mchip.design.inter.ENDP_reg [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2809 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [4], Q=\mchip.design.inter.ENDP_reg [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2810 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [5], Q=\mchip.design.inter.ENDP_reg [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2811 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.ENDP_reg [0], Q=\mchip.design.inter.ENDP_reg [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2812 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.ENDP_reg [1], Q=\mchip.design.inter.ENDP_reg [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2813 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.ENDP_reg [2], Q=\mchip.design.inter.ENDP_reg [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2814 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.ENDP_reg [3], Q=\mchip.design.inter.ENDP_reg [7]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2815 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [2], Q=\mchip.design.inter.Addr_reg [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2816 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [3], Q=\mchip.design.inter.Addr_reg [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2817 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [4], Q=\mchip.design.inter.Addr_reg [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2818 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [5], Q=\mchip.design.inter.Addr_reg [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2819 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.Addr_reg [0], Q=\mchip.design.inter.Addr_reg [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2820 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.Addr_reg [1], Q=\mchip.design.inter.Addr_reg [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2821 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.Addr_reg [2], Q=\mchip.design.inter.Addr_reg [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2822 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.Addr_reg [3], Q=\mchip.design.inter.Addr_reg [7]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2823 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [2], Q=\mchip.design.inter.mempage_reg [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2824 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [3], Q=\mchip.design.inter.mempage_reg [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2825 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [4], Q=\mchip.design.inter.mempage_reg [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2826 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [5], Q=\mchip.design.inter.mempage_reg [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2827 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.mempage_reg [0], Q=\mchip.design.inter.mempage_reg [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2828 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.mempage_reg [1], Q=\mchip.design.inter.mempage_reg [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2829 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.mempage_reg [2], Q=\mchip.design.inter.mempage_reg [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2830 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.mempage_reg [3], Q=\mchip.design.inter.mempage_reg [7]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2831 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.mempage_reg [4], Q=\mchip.design.inter.mempage_reg [8]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2832 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.mempage_reg [5], Q=\mchip.design.inter.mempage_reg [9]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2833 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.mempage_reg [6], Q=\mchip.design.inter.mempage_reg [10]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2834 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.mempage_reg [7], Q=\mchip.design.inter.mempage_reg [11]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2835 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.mempage_reg [8], Q=\mchip.design.inter.mempage_reg [12]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2836 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.mempage_reg [9], Q=\mchip.design.inter.mempage_reg [13]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2837 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.mempage_reg [10], Q=\mchip.design.inter.mempage_reg [14]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2838 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.mempage_reg [11], Q=\mchip.design.inter.mempage_reg [15]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2844 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.next_state [0], Q=\mchip.design.io_fsm.cur_state [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2845 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.next_state [1], Q=\mchip.design.io_fsm.cur_state [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2846 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.next_state [2], Q=\mchip.design.io_fsm.cur_state [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2940 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.transmitter.fsm.count_next [0], Q=\mchip.design.transmitter.fsm.count [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2941 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.transmitter.fsm.count_next [1], Q=\mchip.design.transmitter.fsm.count [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2942 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.transmitter.fsm.count_next [2], Q=\mchip.design.transmitter.fsm.count [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2943 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.transmitter.fsm.count_next [3], Q=\mchip.design.transmitter.fsm.count [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2944 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.transmitter.fsm.count_next [4], Q=\mchip.design.transmitter.fsm.count [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2945 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.transmitter.fsm.count_next [5], Q=\mchip.design.transmitter.fsm.count [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2946 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.transmitter.fsm.count_next [6], Q=\mchip.design.transmitter.fsm.count [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2952 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [1], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2953 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [2], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2954 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [3], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2955 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [4], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2956 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [5], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2957 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [6], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2958 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [7], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2959 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [8], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [7]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2960 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [9], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [8]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2961 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [10], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [9]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2962 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [11], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [10]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2963 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [12], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [11]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2964 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [13], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [12]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2965 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [14], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [13]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2966 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [15], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [14]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2967 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [16], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [15]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2968 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [17], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [16]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2969 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [18], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [17]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2970 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [19], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [18]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2971 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [20], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [19]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2972 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [21], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [20]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2973 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [22], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [21]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2974 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [23], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [22]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2975 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [24], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [23]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2976 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [25], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [24]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2977 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [26], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [25]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2978 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [27], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [26]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2979 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [28], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [27]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2980 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [29], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [28]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2981 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [30], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [29]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2982 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [31], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [30]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2983 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [32], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [31]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2984 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [33], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [32]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2985 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [34], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [33]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2986 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [35], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [34]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2987 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [36], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [35]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2988 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [37], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [36]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2989 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [38], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [37]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2990 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [39], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [38]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2991 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [40], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [39]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2992 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [41], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [40]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2993 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [42], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [41]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2994 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [43], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [42]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2995 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [44], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [43]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2996 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [45], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [44]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2997 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [46], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [45]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2998 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [47], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [46]
Replacing toplevel_chip.$auto$ff.cc:266:slice$2999 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [48], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [47]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3000 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [49], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [48]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3001 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [50], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [49]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3002 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [51], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [50]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3003 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [52], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [51]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3004 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [53], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [52]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3005 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [54], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [53]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3006 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [55], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [54]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3007 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [56], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [55]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3008 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [57], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [56]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3009 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [58], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [57]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3010 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [59], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [58]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3011 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [60], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [59]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3012 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [61], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [60]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3013 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [62], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [61]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3014 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [63], Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [62]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3015 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.crc.crc16.bit_in, Q=\mchip.design.receiver.packet_decode.PAYLOAD_accum [63]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3155 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][0], Q=\mchip.design.transmitter.crc.crc16.crc16_out [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3156 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][1], Q=\mchip.design.transmitter.crc.crc16.crc16_out [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3157 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][2], Q=\mchip.design.transmitter.crc.crc16.crc16_out [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3158 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][3], Q=\mchip.design.transmitter.crc.crc16.crc16_out [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3159 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][4], Q=\mchip.design.transmitter.crc.crc16.crc16_out [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3160 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][5], Q=\mchip.design.transmitter.crc.crc16.crc16_out [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3161 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][6], Q=\mchip.design.transmitter.crc.crc16.crc16_out [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3162 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][7], Q=\mchip.design.transmitter.crc.crc16.crc16_out [7]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3163 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][8], Q=\mchip.design.transmitter.crc.crc16.crc16_out [8]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3164 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][9], Q=\mchip.design.transmitter.crc.crc16.crc16_out [9]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3165 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][10], Q=\mchip.design.transmitter.crc.crc16.crc16_out [10]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3166 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][11], Q=\mchip.design.transmitter.crc.crc16.crc16_out [11]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3167 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][12], Q=\mchip.design.transmitter.crc.crc16.crc16_out [12]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3168 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][13], Q=\mchip.design.transmitter.crc.crc16.crc16_out [13]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3169 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][14], Q=\mchip.design.transmitter.crc.crc16.crc16_out [14]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3170 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc16.$0\crc16_out[15:0][15], Q=\mchip.design.transmitter.crc.crc16.crc16_out [15]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3177 ($_DFFE_PP0P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\bit_stuff.$0\count[2:0][0], Q=\mchip.design.transmitter.bit_stuff.count [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3178 ($_DFFE_PP0P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\bit_stuff.$0\count[2:0][1], Q=\mchip.design.transmitter.bit_stuff.count [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3179 ($_DFFE_PP0P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\bit_stuff.$0\count[2:0][2], Q=\mchip.design.transmitter.bit_stuff.count [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3530 ($_DFF_PP1_): ARST=\io_in [13], D=$abc$11059$auto$fsm_map.cc:170:map_fsm$1796[0], Q=\mchip.design.transmitter.out_wire.cur_state [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3531 ($_DFF_PP0_): ARST=\io_in [13], D=$abc$11059$auto$fsm_map.cc:170:map_fsm$1796[1], Q=\mchip.design.transmitter.out_wire.cur_state [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3532 ($_DFF_PP0_): ARST=\io_in [13], D=$abc$11059$auto$fsm_map.cc:170:map_fsm$1796[2], Q=\mchip.design.transmitter.out_wire.cur_state [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3533 ($_DFF_PP0_): ARST=\io_in [13], D=$abc$11059$auto$fsm_map.cc:170:map_fsm$1796[3], Q=\mchip.design.transmitter.out_wire.cur_state [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3559 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.transmitter.fsm.next_state [0], Q=\mchip.design.transmitter.fsm.cur_state [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3560 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.transmitter.fsm.next_state [1], Q=\mchip.design.transmitter.fsm.cur_state [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3561 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.transmitter.fsm.next_state [2], Q=\mchip.design.transmitter.fsm.cur_state [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3628 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc5.$0\crc5_out[4:0][0], Q=\mchip.design.transmitter.crc.crc5.crc5_out [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3629 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc5.$0\crc5_out[4:0][1], Q=\mchip.design.transmitter.crc.crc5.crc5_out [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3630 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc5.$0\crc5_out[4:0][2], Q=\mchip.design.transmitter.crc.crc5.crc5_out [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3631 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc5.$0\crc5_out[4:0][3], Q=\mchip.design.transmitter.crc.crc5.crc5_out [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$3632 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\transmitter.\crc.\crc5.$0\crc5_out[4:0][4], Q=\mchip.design.transmitter.crc.crc5.crc5_out [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4098 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.fsm.next_state [0], Q=\mchip.design.receiver.fsm.cur_state [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4099 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.fsm.next_state [1], Q=\mchip.design.receiver.fsm.cur_state [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4100 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.fsm.next_state [2], Q=\mchip.design.receiver.fsm.cur_state [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4133 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc5.$0\crc5_out[4:0][0], Q=\mchip.design.receiver.crc.crc5.crc5_out [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4134 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc5.$0\crc5_out[4:0][1], Q=\mchip.design.receiver.crc.crc5.crc5_out [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4135 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc5.$0\crc5_out[4:0][2], Q=\mchip.design.receiver.crc.crc5.crc5_out [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4136 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc5.$0\crc5_out[4:0][3], Q=\mchip.design.receiver.crc.crc5.crc5_out [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4137 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc5.$0\crc5_out[4:0][4], Q=\mchip.design.receiver.crc.crc5.crc5_out [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4425 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][0], Q=\mchip.design.receiver.crc.crc16.crc16_out [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4426 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][1], Q=\mchip.design.receiver.crc.crc16.crc16_out [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4427 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][2], Q=\mchip.design.receiver.crc.crc16.crc16_out [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4428 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][3], Q=\mchip.design.receiver.crc.crc16.crc16_out [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4429 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][4], Q=\mchip.design.receiver.crc.crc16.crc16_out [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4430 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][5], Q=\mchip.design.receiver.crc.crc16.crc16_out [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4431 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][6], Q=\mchip.design.receiver.crc.crc16.crc16_out [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4432 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][7], Q=\mchip.design.receiver.crc.crc16.crc16_out [7]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4433 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][8], Q=\mchip.design.receiver.crc.crc16.crc16_out [8]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4434 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][9], Q=\mchip.design.receiver.crc.crc16.crc16_out [9]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4435 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][10], Q=\mchip.design.receiver.crc.crc16.crc16_out [10]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4436 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][11], Q=\mchip.design.receiver.crc.crc16.crc16_out [11]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4437 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][12], Q=\mchip.design.receiver.crc.crc16.crc16_out [12]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4438 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][13], Q=\mchip.design.receiver.crc.crc16.crc16_out [13]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4439 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][14], Q=\mchip.design.receiver.crc.crc16.crc16_out [14]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4440 ($_DFFE_PP1P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\crc.\crc16.$0\crc16_out[15:0][15], Q=\mchip.design.receiver.crc.crc16.crc16_out [15]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4465 ($_DFFE_PP0P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\bit_unstuff.$0\count[2:0][0], Q=\mchip.design.receiver.bit_unstuff.count [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4466 ($_DFFE_PP0P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\bit_unstuff.$0\count[2:0][1], Q=\mchip.design.receiver.bit_unstuff.count [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4467 ($_DFFE_PP0P_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\bit_unstuff.$0\count[2:0][2], Q=\mchip.design.receiver.bit_unstuff.count [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4560 ($_DFF_PP1_): ARST=\io_in [13], D=$abc$11059$flatten\mchip.\design.\receiver.\nrzi.$ternary$d21_pemmanou_usb/src/USBHost.v:1512$379_Y, Q=\mchip.design.receiver.nrzi.cur_value
Replacing toplevel_chip.$auto$ff.cc:266:slice$4561 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PID_accum [1], Q=\mchip.design.receiver.packet_decode.PID_accum [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4562 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PID_accum [2], Q=\mchip.design.receiver.packet_decode.PID_accum [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4563 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PID_accum [3], Q=\mchip.design.receiver.packet_decode.PID_accum [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4564 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PID_accum [4], Q=\mchip.design.receiver.packet_decode.PID_accum [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4565 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PID_accum [5], Q=\mchip.design.receiver.packet_decode.PID_accum [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4566 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PID_accum [6], Q=\mchip.design.receiver.packet_decode.PID_accum [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4567 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PID_accum [7], Q=\mchip.design.receiver.packet_decode.PID_accum [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4568 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.crc.crc16.bit_in, Q=\mchip.design.receiver.packet_decode.PID_accum [7]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4569 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [0], Q=\mchip.design.io_fsm.final_data [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4570 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [1], Q=\mchip.design.io_fsm.final_data [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4571 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [2], Q=\mchip.design.io_fsm.final_data [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4572 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [3], Q=\mchip.design.io_fsm.final_data [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4573 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [4], Q=\mchip.design.io_fsm.final_data [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4574 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [5], Q=\mchip.design.io_fsm.final_data [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4575 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [6], Q=\mchip.design.io_fsm.final_data [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4576 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [7], Q=\mchip.design.io_fsm.final_data [7]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4577 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [8], Q=\mchip.design.io_fsm.final_data [8]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4578 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [9], Q=\mchip.design.io_fsm.final_data [9]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4579 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [10], Q=\mchip.design.io_fsm.final_data [10]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4580 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [11], Q=\mchip.design.io_fsm.final_data [11]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4581 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [12], Q=\mchip.design.io_fsm.final_data [12]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4582 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [13], Q=\mchip.design.io_fsm.final_data [13]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4583 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [14], Q=\mchip.design.io_fsm.final_data [14]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4584 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [15], Q=\mchip.design.io_fsm.final_data [15]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4585 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [16], Q=\mchip.design.io_fsm.final_data [16]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4586 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [17], Q=\mchip.design.io_fsm.final_data [17]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4587 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [18], Q=\mchip.design.io_fsm.final_data [18]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4588 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [19], Q=\mchip.design.io_fsm.final_data [19]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4589 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [20], Q=\mchip.design.io_fsm.final_data [20]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4590 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [21], Q=\mchip.design.io_fsm.final_data [21]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4591 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [22], Q=\mchip.design.io_fsm.final_data [22]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4592 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [23], Q=\mchip.design.io_fsm.final_data [23]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4593 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [24], Q=\mchip.design.io_fsm.final_data [24]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4594 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [25], Q=\mchip.design.io_fsm.final_data [25]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4595 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [26], Q=\mchip.design.io_fsm.final_data [26]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4596 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [27], Q=\mchip.design.io_fsm.final_data [27]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4597 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [28], Q=\mchip.design.io_fsm.final_data [28]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4598 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [29], Q=\mchip.design.io_fsm.final_data [29]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4599 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [30], Q=\mchip.design.io_fsm.final_data [30]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4600 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [31], Q=\mchip.design.io_fsm.final_data [31]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4601 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [32], Q=\mchip.design.io_fsm.final_data [32]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4602 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [33], Q=\mchip.design.io_fsm.final_data [33]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4603 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [34], Q=\mchip.design.io_fsm.final_data [34]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4604 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [35], Q=\mchip.design.io_fsm.final_data [35]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4605 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [36], Q=\mchip.design.io_fsm.final_data [36]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4606 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [37], Q=\mchip.design.io_fsm.final_data [37]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4607 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [38], Q=\mchip.design.io_fsm.final_data [38]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4608 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [39], Q=\mchip.design.io_fsm.final_data [39]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4609 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [40], Q=\mchip.design.io_fsm.final_data [40]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4610 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [41], Q=\mchip.design.io_fsm.final_data [41]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4611 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [42], Q=\mchip.design.io_fsm.final_data [42]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4612 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [43], Q=\mchip.design.io_fsm.final_data [43]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4613 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [44], Q=\mchip.design.io_fsm.final_data [44]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4614 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [45], Q=\mchip.design.io_fsm.final_data [45]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4615 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [46], Q=\mchip.design.io_fsm.final_data [46]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4616 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [47], Q=\mchip.design.io_fsm.final_data [47]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4617 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [48], Q=\mchip.design.io_fsm.final_data [48]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4618 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [49], Q=\mchip.design.io_fsm.final_data [49]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4619 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [50], Q=\mchip.design.io_fsm.final_data [50]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4620 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [51], Q=\mchip.design.io_fsm.final_data [51]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4621 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [52], Q=\mchip.design.io_fsm.final_data [52]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4622 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [53], Q=\mchip.design.io_fsm.final_data [53]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4623 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [54], Q=\mchip.design.io_fsm.final_data [54]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4624 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [55], Q=\mchip.design.io_fsm.final_data [55]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4625 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [56], Q=\mchip.design.io_fsm.final_data [56]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4626 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [57], Q=\mchip.design.io_fsm.final_data [57]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4627 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [58], Q=\mchip.design.io_fsm.final_data [58]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4628 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [59], Q=\mchip.design.io_fsm.final_data [59]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4629 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [60], Q=\mchip.design.io_fsm.final_data [60]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4630 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [61], Q=\mchip.design.io_fsm.final_data [61]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4631 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [62], Q=\mchip.design.io_fsm.final_data [62]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4632 ($_DFFE_PP0N_): ARST=\io_in [13], D=\mchip.design.receiver.packet_decode.PAYLOAD_accum [63], Q=\mchip.design.io_fsm.final_data [63]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4645 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.receiver.fsm.count_next [0], Q=\mchip.design.receiver.fsm.count [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4646 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.receiver.fsm.count_next [1], Q=\mchip.design.receiver.fsm.count [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4647 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.receiver.fsm.count_next [2], Q=\mchip.design.receiver.fsm.count [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4648 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.receiver.fsm.count_next [3], Q=\mchip.design.receiver.fsm.count [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4649 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.receiver.fsm.count_next [4], Q=\mchip.design.receiver.fsm.count [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4650 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.receiver.fsm.count_next [5], Q=\mchip.design.receiver.fsm.count [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4651 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.receiver.fsm.count_next [6], Q=\mchip.design.receiver.fsm.count [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4652 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.find_sync.bit_in, Q=\mchip.design.receiver.find_sync.log [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4653 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.find_sync.log [0], Q=\mchip.design.receiver.find_sync.log [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4654 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.find_sync.log [1], Q=\mchip.design.receiver.find_sync.log [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4655 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.find_sync.log [2], Q=\mchip.design.receiver.find_sync.log [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4656 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.find_sync.log [3], Q=\mchip.design.receiver.find_sync.log [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4657 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.find_sync.log [4], Q=\mchip.design.receiver.find_sync.log [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4658 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.find_sync.log [5], Q=\mchip.design.receiver.find_sync.log [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4683 ($_DFF_PP0_): ARST=\io_in [13], D=\io_in [0], Q=\mchip.design.receiver.wire_in.dm_log [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4684 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.wire_in.dm_log [0], Q=\mchip.design.receiver.wire_in.dm_log [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4685 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.wire_in.dm_log [1], Q=\mchip.design.receiver.wire_in.dm_log [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4686 ($_DFF_PP0_): ARST=\io_in [13], D=\io_in [1], Q=\mchip.design.receiver.wire_in.dp_log [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4687 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.wire_in.dp_log [0], Q=\mchip.design.receiver.wire_in.dp_log [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4688 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.receiver.wire_in.dp_log [1], Q=\mchip.design.receiver.wire_in.dp_log [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4758 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.ended_with_errors_log, Q=\mchip.design.io_fsm.ended_with_errors
Replacing toplevel_chip.$auto$ff.cc:266:slice$4759 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.completed_transaction_log, Q=\mchip.design.io_fsm.completed_transaction
Replacing toplevel_chip.$auto$ff.cc:266:slice$4760 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.timeout_counter_nxt [0], Q=\mchip.design.io_fsm.timeout_counter [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4761 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.timeout_counter_nxt [1], Q=\mchip.design.io_fsm.timeout_counter [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4762 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.timeout_counter_nxt [2], Q=\mchip.design.io_fsm.timeout_counter [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4763 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.timeout_counter_nxt [3], Q=\mchip.design.io_fsm.timeout_counter [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4764 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.timer_nxt [0], Q=\mchip.design.io_fsm.timer [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4765 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.timer_nxt [1], Q=\mchip.design.io_fsm.timer [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4766 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.timer_nxt [2], Q=\mchip.design.io_fsm.timer [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4767 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.timer_nxt [3], Q=\mchip.design.io_fsm.timer [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4768 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.timer_nxt [4], Q=\mchip.design.io_fsm.timer [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4769 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.timer_nxt [5], Q=\mchip.design.io_fsm.timer [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4770 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.timer_nxt [6], Q=\mchip.design.io_fsm.timer [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4771 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.timer_nxt [7], Q=\mchip.design.io_fsm.timer [7]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4772 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.io_fsm.timer_nxt [8], Q=\mchip.design.io_fsm.timer [8]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4773 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.error_counter_nxt [0], Q=\mchip.design.io_fsm.error_counter [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4774 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.error_counter_nxt [1], Q=\mchip.design.io_fsm.error_counter [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4775 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.error_counter_nxt [2], Q=\mchip.design.io_fsm.error_counter [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4776 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.io_fsm.error_counter_nxt [3], Q=\mchip.design.io_fsm.error_counter [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4777 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [2], Q=\mchip.design.inter.data_out_reg [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4778 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [3], Q=\mchip.design.inter.data_out_reg [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4779 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [4], Q=\mchip.design.inter.data_out_reg [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4780 ($_DFFE_PP0P_): ARST=\io_in [13], D=\io_in [5], Q=\mchip.design.inter.data_out_reg [3]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4781 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [0], Q=\mchip.design.inter.data_out_reg [4]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4782 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [1], Q=\mchip.design.inter.data_out_reg [5]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4783 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [2], Q=\mchip.design.inter.data_out_reg [6]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4784 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [3], Q=\mchip.design.inter.data_out_reg [7]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4785 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [4], Q=\mchip.design.inter.data_out_reg [8]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4786 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [5], Q=\mchip.design.inter.data_out_reg [9]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4787 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [6], Q=\mchip.design.inter.data_out_reg [10]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4788 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [7], Q=\mchip.design.inter.data_out_reg [11]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4789 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [8], Q=\mchip.design.inter.data_out_reg [12]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4790 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [9], Q=\mchip.design.inter.data_out_reg [13]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4791 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [10], Q=\mchip.design.inter.data_out_reg [14]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4792 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [11], Q=\mchip.design.inter.data_out_reg [15]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4793 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [12], Q=\mchip.design.inter.data_out_reg [16]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4794 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [13], Q=\mchip.design.inter.data_out_reg [17]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4795 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [14], Q=\mchip.design.inter.data_out_reg [18]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4796 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [15], Q=\mchip.design.inter.data_out_reg [19]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4797 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [16], Q=\mchip.design.inter.data_out_reg [20]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4798 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [17], Q=\mchip.design.inter.data_out_reg [21]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4799 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [18], Q=\mchip.design.inter.data_out_reg [22]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4800 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [19], Q=\mchip.design.inter.data_out_reg [23]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4801 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [20], Q=\mchip.design.inter.data_out_reg [24]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4802 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [21], Q=\mchip.design.inter.data_out_reg [25]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4803 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [22], Q=\mchip.design.inter.data_out_reg [26]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4804 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [23], Q=\mchip.design.inter.data_out_reg [27]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4805 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [24], Q=\mchip.design.inter.data_out_reg [28]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4806 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [25], Q=\mchip.design.inter.data_out_reg [29]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4807 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [26], Q=\mchip.design.inter.data_out_reg [30]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4808 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [27], Q=\mchip.design.inter.data_out_reg [31]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4809 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [28], Q=\mchip.design.inter.data_out_reg [32]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4810 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [29], Q=\mchip.design.inter.data_out_reg [33]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4811 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [30], Q=\mchip.design.inter.data_out_reg [34]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4812 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [31], Q=\mchip.design.inter.data_out_reg [35]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4813 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [32], Q=\mchip.design.inter.data_out_reg [36]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4814 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [33], Q=\mchip.design.inter.data_out_reg [37]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4815 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [34], Q=\mchip.design.inter.data_out_reg [38]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4816 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [35], Q=\mchip.design.inter.data_out_reg [39]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4817 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [36], Q=\mchip.design.inter.data_out_reg [40]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4818 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [37], Q=\mchip.design.inter.data_out_reg [41]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4819 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [38], Q=\mchip.design.inter.data_out_reg [42]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4820 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [39], Q=\mchip.design.inter.data_out_reg [43]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4821 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [40], Q=\mchip.design.inter.data_out_reg [44]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4822 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [41], Q=\mchip.design.inter.data_out_reg [45]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4823 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [42], Q=\mchip.design.inter.data_out_reg [46]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4824 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [43], Q=\mchip.design.inter.data_out_reg [47]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4825 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [44], Q=\mchip.design.inter.data_out_reg [48]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4826 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [45], Q=\mchip.design.inter.data_out_reg [49]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4827 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [46], Q=\mchip.design.inter.data_out_reg [50]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4828 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [47], Q=\mchip.design.inter.data_out_reg [51]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4829 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [48], Q=\mchip.design.inter.data_out_reg [52]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4830 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [49], Q=\mchip.design.inter.data_out_reg [53]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4831 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [50], Q=\mchip.design.inter.data_out_reg [54]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4832 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [51], Q=\mchip.design.inter.data_out_reg [55]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4833 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [52], Q=\mchip.design.inter.data_out_reg [56]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4834 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [53], Q=\mchip.design.inter.data_out_reg [57]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4835 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [54], Q=\mchip.design.inter.data_out_reg [58]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4836 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [55], Q=\mchip.design.inter.data_out_reg [59]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4837 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [56], Q=\mchip.design.inter.data_out_reg [60]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4838 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [57], Q=\mchip.design.inter.data_out_reg [61]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4839 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [58], Q=\mchip.design.inter.data_out_reg [62]
Replacing toplevel_chip.$auto$ff.cc:266:slice$4840 ($_DFFE_PP0P_): ARST=\io_in [13], D=\mchip.design.inter.data_out_reg [59], Q=\mchip.design.inter.data_out_reg [63]
Replacing toplevel_chip.$auto$ff.cc:266:slice$5241 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.rw_fsm.next_state [0], Q=\mchip.design.rw_fsm.cur_state [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$5242 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.rw_fsm.next_state [1], Q=\mchip.design.rw_fsm.cur_state [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$5243 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.rw_fsm.next_state [2], Q=\mchip.design.rw_fsm.cur_state [2]
Replacing toplevel_chip.$auto$ff.cc:266:slice$5427 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.inter.next_state [0], Q=\mchip.design.inter.cur_state [0]
Replacing toplevel_chip.$auto$ff.cc:266:slice$5428 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.inter.next_state [1], Q=\mchip.design.inter.cur_state [1]
Replacing toplevel_chip.$auto$ff.cc:266:slice$5429 ($_DFF_PP0_): ARST=\io_in [13], D=\mchip.design.inter.next_state [2], Q=\mchip.design.inter.cur_state [2]

8. Executing SYNTH pass.

8.1. Executing HIERARCHY pass (managing design hierarchy).

8.1.1. Analyzing design hierarchy..
Top module:  \toplevel_chip

8.1.2. Analyzing design hierarchy..
Top module:  \toplevel_chip
Removed 0 unused modules.

8.2. Executing PROC pass (convert processes to netlists).

8.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

8.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

8.2.4. Executing PROC_INIT pass (extract init attributes).

8.2.5. Executing PROC_ARST pass (detect async resets in processes).

8.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

8.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

8.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

8.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

8.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

8.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.5. Executing CHECK pass (checking for obvious problems).
Checking module toplevel_chip...
Found and reported 0 problems.

8.6. Executing OPT pass (performing simple optimizations).

8.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.6.6. Executing OPT_DFF pass (perform DFF optimizations).

8.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.6.9. Finished OPT passes. (There is nothing left to do.)

8.7. Executing FSM pass (extract and optimize FSM).

8.7.1. Executing FSM_DETECT pass (finding FSMs in design).

8.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).

8.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).

8.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).

8.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

8.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

8.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

8.8. Executing OPT pass (performing simple optimizations).

8.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.8.6. Executing OPT_DFF pass (perform DFF optimizations).

8.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.8.9. Finished OPT passes. (There is nothing left to do.)

8.9. Executing WREDUCE pass (reducing word size of cells).

8.10. Executing PEEPOPT pass (run peephole optimizers).

8.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module toplevel_chip:
  created 0 $alu and 0 $macc cells.

8.13. Executing SHARE pass (SAT-based resource sharing).

8.14. Executing OPT pass (performing simple optimizations).

8.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.14.6. Executing OPT_DFF pass (perform DFF optimizations).

8.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.14.9. Finished OPT passes. (There is nothing left to do.)

8.15. Executing MEMORY pass.

8.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

8.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

8.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

8.15.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

8.15.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

8.15.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.15.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

8.15.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

8.15.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.15.10. Executing MEMORY_COLLECT pass (generating $mem cells).

8.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.17. Executing OPT pass (performing simple optimizations).

8.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~45 debug messages>

8.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.17.3. Executing OPT_DFF pass (perform DFF optimizations).

8.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.17.5. Finished fast OPT passes.

8.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

8.19. Executing OPT pass (performing simple optimizations).

8.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.19.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11945 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11944
        $abc$11059$auto$blifparse.cc:386:parse_blif$11943

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11949 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11948
        $abc$11059$auto$blifparse.cc:386:parse_blif$11947

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11969 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11968
        $abc$11059$auto$blifparse.cc:386:parse_blif$11967

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11972 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11971
        $abc$11059$auto$blifparse.cc:386:parse_blif$11970

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11976 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11975
        $abc$11059$auto$blifparse.cc:386:parse_blif$11974

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11979 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11978
        $abc$11059$auto$blifparse.cc:386:parse_blif$11977

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11984 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11983
        $abc$11059$auto$blifparse.cc:386:parse_blif$11982

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11987 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11986
        $abc$11059$auto$blifparse.cc:386:parse_blif$11985

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11991 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11990
        $abc$11059$auto$blifparse.cc:386:parse_blif$11989

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11994 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11993
        $abc$11059$auto$blifparse.cc:386:parse_blif$11992

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12028 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12027
        $abc$11059$auto$blifparse.cc:386:parse_blif$12011

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12046 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12045
        $abc$11059$auto$blifparse.cc:386:parse_blif$12044

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12075 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12074
        $abc$11059$auto$blifparse.cc:386:parse_blif$12072

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12081 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12080
        $abc$11059$auto$blifparse.cc:386:parse_blif$12078

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12086 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12085
        $abc$11059$auto$blifparse.cc:386:parse_blif$12084

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12097 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12096
        $abc$11059$auto$blifparse.cc:386:parse_blif$12095

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12133 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12132
        $abc$11059$auto$blifparse.cc:386:parse_blif$12120

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12156 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12155
        $abc$11059$auto$blifparse.cc:386:parse_blif$12144

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12180 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12179
        $abc$11059$auto$blifparse.cc:386:parse_blif$12168

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12203 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12202
        $abc$11059$auto$blifparse.cc:386:parse_blif$12191

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12228 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12227
        $abc$11059$auto$blifparse.cc:386:parse_blif$12216

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12251 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12250
        $abc$11059$auto$blifparse.cc:386:parse_blif$12239

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12275 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12274
        $abc$11059$auto$blifparse.cc:386:parse_blif$12263

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12298 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12297
        $abc$11059$auto$blifparse.cc:386:parse_blif$12286

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12324 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12323
        $abc$11059$auto$blifparse.cc:386:parse_blif$12312

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12347 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12346
        $abc$11059$auto$blifparse.cc:386:parse_blif$12335

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12371 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12370
        $abc$11059$auto$blifparse.cc:386:parse_blif$12359

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12394 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12393
        $abc$11059$auto$blifparse.cc:386:parse_blif$12382

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12419 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12418
        $abc$11059$auto$blifparse.cc:386:parse_blif$12407

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12442 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12441
        $abc$11059$auto$blifparse.cc:386:parse_blif$12430

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12466 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12465
        $abc$11059$auto$blifparse.cc:386:parse_blif$12454

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12489 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12488
        $abc$11059$auto$blifparse.cc:386:parse_blif$12477

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12516 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12515
        $abc$11059$auto$blifparse.cc:386:parse_blif$12504

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12539 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12538
        $abc$11059$auto$blifparse.cc:386:parse_blif$12527

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12563 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12562
        $abc$11059$auto$blifparse.cc:386:parse_blif$12551

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12586 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12585
        $abc$11059$auto$blifparse.cc:386:parse_blif$12574

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12611 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12610
        $abc$11059$auto$blifparse.cc:386:parse_blif$12599

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12634 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12633
        $abc$11059$auto$blifparse.cc:386:parse_blif$12622

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12658 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12657
        $abc$11059$auto$blifparse.cc:386:parse_blif$12646

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12681 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12680
        $abc$11059$auto$blifparse.cc:386:parse_blif$12669

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12713 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12712
        $abc$11059$auto$blifparse.cc:386:parse_blif$12698

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12742 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12741
        $abc$11059$auto$blifparse.cc:386:parse_blif$12727

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12772 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12771
        $abc$11059$auto$blifparse.cc:386:parse_blif$12757

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12801 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12800
        $abc$11059$auto$blifparse.cc:386:parse_blif$12786

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12832 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12831
        $abc$11059$auto$blifparse.cc:386:parse_blif$12817

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12861 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12860
        $abc$11059$auto$blifparse.cc:386:parse_blif$12846

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12891 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12890
        $abc$11059$auto$blifparse.cc:386:parse_blif$12876

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12920 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12919
        $abc$11059$auto$blifparse.cc:386:parse_blif$12905

8.19.7. Executing OPT_DFF pass (perform DFF optimizations).

8.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 96 unused wires.
<suppressed ~1 debug messages>

8.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~48 debug messages>

8.19.10. Rerunning OPT passes. (Maybe there is more to do..)

8.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~48 debug messages>

8.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

8.19.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11950 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11944
        $abc$11059$auto$blifparse.cc:386:parse_blif$11948

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11973 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11971
        $abc$11059$auto$blifparse.cc:386:parse_blif$11968

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11980 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11978
        $abc$11059$auto$blifparse.cc:386:parse_blif$11975

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11988 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11986
        $abc$11059$auto$blifparse.cc:386:parse_blif$11983

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11995 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11993
        $abc$11059$auto$blifparse.cc:386:parse_blif$11990

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12082 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12074
        $abc$11059$auto$blifparse.cc:386:parse_blif$12080

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12157 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12155
        $abc$11059$auto$blifparse.cc:386:parse_blif$12132

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12204 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12202
        $abc$11059$auto$blifparse.cc:386:parse_blif$12179

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12252 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12250
        $abc$11059$auto$blifparse.cc:386:parse_blif$12227

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12299 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12297
        $abc$11059$auto$blifparse.cc:386:parse_blif$12274

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12348 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12346
        $abc$11059$auto$blifparse.cc:386:parse_blif$12323

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12395 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12393
        $abc$11059$auto$blifparse.cc:386:parse_blif$12370

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12443 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12441
        $abc$11059$auto$blifparse.cc:386:parse_blif$12418

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12490 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12488
        $abc$11059$auto$blifparse.cc:386:parse_blif$12465

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12540 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12538
        $abc$11059$auto$blifparse.cc:386:parse_blif$12515

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12587 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12585
        $abc$11059$auto$blifparse.cc:386:parse_blif$12562

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12635 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12633
        $abc$11059$auto$blifparse.cc:386:parse_blif$12610

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12682 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12680
        $abc$11059$auto$blifparse.cc:386:parse_blif$12657

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12743 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12741
        $abc$11059$auto$blifparse.cc:386:parse_blif$12712

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12802 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12800
        $abc$11059$auto$blifparse.cc:386:parse_blif$12771

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12862 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12860
        $abc$11059$auto$blifparse.cc:386:parse_blif$12831

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12921 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12919
        $abc$11059$auto$blifparse.cc:386:parse_blif$12890

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14400 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12131
        $abc$11059$auto$blifparse.cc:386:parse_blif$12119

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14403 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12154
        $abc$11059$auto$blifparse.cc:386:parse_blif$12143

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14406 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12178
        $abc$11059$auto$blifparse.cc:386:parse_blif$12167

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14409 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12201
        $abc$11059$auto$blifparse.cc:386:parse_blif$12190

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14412 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12226
        $abc$11059$auto$blifparse.cc:386:parse_blif$12215

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14415 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12249
        $abc$11059$auto$blifparse.cc:386:parse_blif$12238

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14418 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12273
        $abc$11059$auto$blifparse.cc:386:parse_blif$12262

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14421 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12296
        $abc$11059$auto$blifparse.cc:386:parse_blif$12285

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14424 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12322
        $abc$11059$auto$blifparse.cc:386:parse_blif$12311

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14427 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12345
        $abc$11059$auto$blifparse.cc:386:parse_blif$12334

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14430 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12369
        $abc$11059$auto$blifparse.cc:386:parse_blif$12358

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14433 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12392
        $abc$11059$auto$blifparse.cc:386:parse_blif$12381

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14436 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12417
        $abc$11059$auto$blifparse.cc:386:parse_blif$12406

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14439 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12440
        $abc$11059$auto$blifparse.cc:386:parse_blif$12429

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14442 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12464
        $abc$11059$auto$blifparse.cc:386:parse_blif$12453

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14445 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12487
        $abc$11059$auto$blifparse.cc:386:parse_blif$12476

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14448 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12514
        $abc$11059$auto$blifparse.cc:386:parse_blif$12503

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14451 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12537
        $abc$11059$auto$blifparse.cc:386:parse_blif$12526

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14454 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12561
        $abc$11059$auto$blifparse.cc:386:parse_blif$12550

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14457 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12584
        $abc$11059$auto$blifparse.cc:386:parse_blif$12573

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14460 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12609
        $abc$11059$auto$blifparse.cc:386:parse_blif$12598

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14463 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12632
        $abc$11059$auto$blifparse.cc:386:parse_blif$12621

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14466 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12656
        $abc$11059$auto$blifparse.cc:386:parse_blif$12645

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14469 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12679
        $abc$11059$auto$blifparse.cc:386:parse_blif$12668

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14472 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12711
        $abc$11059$auto$blifparse.cc:386:parse_blif$12697

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14475 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12740
        $abc$11059$auto$blifparse.cc:386:parse_blif$12726

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14478 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12770
        $abc$11059$auto$blifparse.cc:386:parse_blif$12756

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14481 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12799
        $abc$11059$auto$blifparse.cc:386:parse_blif$12785

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14484 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12830
        $abc$11059$auto$blifparse.cc:386:parse_blif$12816

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14487 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12859
        $abc$11059$auto$blifparse.cc:386:parse_blif$12845

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14490 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12889
        $abc$11059$auto$blifparse.cc:386:parse_blif$12875

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14493 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12918
        $abc$11059$auto$blifparse.cc:386:parse_blif$12904

8.19.15. Executing OPT_DFF pass (perform DFF optimizations).

8.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 157 unused wires.
<suppressed ~1 debug messages>

8.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~54 debug messages>

8.19.18. Rerunning OPT passes. (Maybe there is more to do..)

8.19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

8.19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.19.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11981 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11978
        $abc$11059$auto$blifparse.cc:386:parse_blif$11971

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11996 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11993
        $abc$11059$auto$blifparse.cc:386:parse_blif$11986

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12205 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12202
        $abc$11059$auto$blifparse.cc:386:parse_blif$12155

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12300 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12297
        $abc$11059$auto$blifparse.cc:386:parse_blif$12250

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12396 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12393
        $abc$11059$auto$blifparse.cc:386:parse_blif$12346

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12491 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12488
        $abc$11059$auto$blifparse.cc:386:parse_blif$12441

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12588 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12585
        $abc$11059$auto$blifparse.cc:386:parse_blif$12538

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12683 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12680
        $abc$11059$auto$blifparse.cc:386:parse_blif$12633

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12803 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12800
        $abc$11059$auto$blifparse.cc:386:parse_blif$12741

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12922 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12919
        $abc$11059$auto$blifparse.cc:386:parse_blif$12860

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14514 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12154
        $abc$11059$auto$blifparse.cc:386:parse_blif$12131

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14517 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12201
        $abc$11059$auto$blifparse.cc:386:parse_blif$12178

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14520 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12249
        $abc$11059$auto$blifparse.cc:386:parse_blif$12226

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14523 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12296
        $abc$11059$auto$blifparse.cc:386:parse_blif$12273

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14526 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12345
        $abc$11059$auto$blifparse.cc:386:parse_blif$12322

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14529 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12392
        $abc$11059$auto$blifparse.cc:386:parse_blif$12369

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14532 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12440
        $abc$11059$auto$blifparse.cc:386:parse_blif$12417

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14535 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12487
        $abc$11059$auto$blifparse.cc:386:parse_blif$12464

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14538 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12537
        $abc$11059$auto$blifparse.cc:386:parse_blif$12514

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14541 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12584
        $abc$11059$auto$blifparse.cc:386:parse_blif$12561

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14544 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12632
        $abc$11059$auto$blifparse.cc:386:parse_blif$12609

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14547 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12679
        $abc$11059$auto$blifparse.cc:386:parse_blif$12656

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14550 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12740
        $abc$11059$auto$blifparse.cc:386:parse_blif$12711

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14553 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12799
        $abc$11059$auto$blifparse.cc:386:parse_blif$12770

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14556 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12859
        $abc$11059$auto$blifparse.cc:386:parse_blif$12830

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14559 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12918
        $abc$11059$auto$blifparse.cc:386:parse_blif$12889

8.19.23. Executing OPT_DFF pass (perform DFF optimizations).

8.19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 106 unused wires.
<suppressed ~1 debug messages>

8.19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~26 debug messages>

8.19.26. Rerunning OPT passes. (Maybe there is more to do..)

8.19.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

8.19.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.19.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.19.30. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$11997 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$11993
        $abc$11059$auto$blifparse.cc:386:parse_blif$11978

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12301 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12297
        $abc$11059$auto$blifparse.cc:386:parse_blif$12202

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12492 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12488
        $abc$11059$auto$blifparse.cc:386:parse_blif$12393

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12684 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12680
        $abc$11059$auto$blifparse.cc:386:parse_blif$12585

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12923 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12919
        $abc$11059$auto$blifparse.cc:386:parse_blif$12800

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14664 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12201
        $abc$11059$auto$blifparse.cc:386:parse_blif$12154

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14667 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12296
        $abc$11059$auto$blifparse.cc:386:parse_blif$12249

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14670 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12392
        $abc$11059$auto$blifparse.cc:386:parse_blif$12345

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14673 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12487
        $abc$11059$auto$blifparse.cc:386:parse_blif$12440

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14676 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12584
        $abc$11059$auto$blifparse.cc:386:parse_blif$12537

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14679 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12679
        $abc$11059$auto$blifparse.cc:386:parse_blif$12632

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14682 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12799
        $abc$11059$auto$blifparse.cc:386:parse_blif$12740

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14685 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12918
        $abc$11059$auto$blifparse.cc:386:parse_blif$12859

8.19.31. Executing OPT_DFF pass (perform DFF optimizations).

8.19.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 52 unused wires.
<suppressed ~1 debug messages>

8.19.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~13 debug messages>

8.19.34. Rerunning OPT passes. (Maybe there is more to do..)

8.19.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

8.19.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.19.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.19.38. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12493 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12488
        $abc$11059$auto$blifparse.cc:386:parse_blif$12297

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12924 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12919
        $abc$11059$auto$blifparse.cc:386:parse_blif$12680

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14739 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12296
        $abc$11059$auto$blifparse.cc:386:parse_blif$12201

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14742 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12487
        $abc$11059$auto$blifparse.cc:386:parse_blif$12392

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14745 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12679
        $abc$11059$auto$blifparse.cc:386:parse_blif$12584

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14748 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12918
        $abc$11059$auto$blifparse.cc:386:parse_blif$12799

8.19.39. Executing OPT_DFF pass (perform DFF optimizations).

8.19.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 25 unused wires.
<suppressed ~1 debug messages>

8.19.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~6 debug messages>

8.19.42. Rerunning OPT passes. (Maybe there is more to do..)

8.19.43. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

8.19.44. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.19.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.19.46. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$11059$auto$blifparse.cc:386:parse_blif$12925 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12488
        $abc$11059$auto$blifparse.cc:386:parse_blif$12919

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14775 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12487
        $abc$11059$auto$blifparse.cc:386:parse_blif$12296

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14778 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12918
        $abc$11059$auto$blifparse.cc:386:parse_blif$12679

8.19.47. Executing OPT_DFF pass (perform DFF optimizations).

8.19.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

8.19.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~3 debug messages>

8.19.50. Rerunning OPT passes. (Maybe there is more to do..)

8.19.51. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

8.19.52. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.19.53. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.19.54. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:244:merge_operators$14793 in front of them:
        $abc$11059$auto$blifparse.cc:386:parse_blif$12487
        $abc$11059$auto$blifparse.cc:386:parse_blif$12918

8.19.55. Executing OPT_DFF pass (perform DFF optimizations).

8.19.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

8.19.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~1 debug messages>

8.19.58. Rerunning OPT passes. (Maybe there is more to do..)

8.19.59. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

8.19.60. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.19.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.19.62. Executing OPT_SHARE pass.

8.19.63. Executing OPT_DFF pass (perform DFF optimizations).

8.19.64. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

8.19.65. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.19.66. Rerunning OPT passes. (Maybe there is more to do..)

8.19.67. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \toplevel_chip..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

8.19.68. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \toplevel_chip.
Performed a total of 0 changes.

8.19.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.19.70. Executing OPT_SHARE pass.

8.19.71. Executing OPT_DFF pass (perform DFF optimizations).

8.19.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.19.73. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.19.74. Finished OPT passes. (There is nothing left to do.)

8.20. Executing TECHMAP pass (map to technology primitives).

8.20.1. Executing Verilog-2005 frontend: /Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~160 debug messages>

8.21. Executing OPT pass (performing simple optimizations).

8.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.

8.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
Removed a total of 0 cells.

8.21.3. Executing OPT_DFF pass (perform DFF optimizations).

8.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..

8.21.5. Finished fast OPT passes.

8.22. Executing ABC pass (technology mapping using ABC).

8.22.1. Extracting gate netlist of module `\toplevel_chip' to `<abc-temp-dir>/input.blif'..
Extracted 2715 gates and 3140 wires to a netlist network with 424 inputs and 362 outputs.

8.22.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.22.1.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:      107
ABC RESULTS:              NAND cells:       41
ABC RESULTS:             ORNOT cells:      179
ABC RESULTS:               AND cells:       50
ABC RESULTS:               NOR cells:       81
ABC RESULTS:               MUX cells:      155
ABC RESULTS:              XNOR cells:       19
ABC RESULTS:               XOR cells:       38
ABC RESULTS:                OR cells:      814
ABC RESULTS:            ANDNOT cells:     1240
ABC RESULTS:        internal signals:     2354
ABC RESULTS:           input signals:      424
ABC RESULTS:          output signals:      362
Removing temp directory.

8.23. Executing OPT pass (performing simple optimizations).

8.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module toplevel_chip.
<suppressed ~148 debug messages>

8.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\toplevel_chip'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

8.23.3. Executing OPT_DFF pass (perform DFF optimizations).

8.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \toplevel_chip..
Removed 4 unused cells and 2999 unused wires.
<suppressed ~41 debug messages>

8.23.5. Finished fast OPT passes.

8.24. Executing HIERARCHY pass (managing design hierarchy).

8.24.1. Analyzing design hierarchy..
Top module:  \toplevel_chip

8.24.2. Analyzing design hierarchy..
Top module:  \toplevel_chip
Removed 0 unused modules.

8.25. Printing statistics.

=== toplevel_chip ===

   Number of wires:               2978
   Number of wire bits:           4695
   Number of public wires:         145
   Number of public wire bits:    1862
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3125
     $_ANDNOT_                    1232
     $_AND_                         50
     $_MUX_                        155
     $_NAND_                        41
     $_NOR_                         81
     $_NOT_                        103
     $_ORNOT_                      177
     $_OR_                         814
     $_SDFFE_PP0N_                  72
     $_SDFFE_PP0P_                 252
     $_SDFFE_PP1P_                  43
     $_SDFF_PP0_                    46
     $_SDFF_PP1_                     2
     $_XNOR_                        19
     $_XOR_                         38

8.26. Executing CHECK pass (checking for obvious problems).
Checking module toplevel_chip...
Found and reported 0 problems.
Renaming module \toplevel_chip to \d21_pemmanou_usb.

9. Executing Verilog backend.

9.1. Executing BMUXMAP pass.

9.2. Executing DEMUXMAP pass.
Dumping module `\d21_pemmanou_usb'.

10. Executing CHECK pass (checking for obvious problems).
Checking module d21_pemmanou_usb...
Found and reported 0 problems.

11. Printing statistics.

=== d21_pemmanou_usb ===

   Number of wires:               2978
   Number of wire bits:           4695
   Number of public wires:         145
   Number of public wire bits:    1862
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3125
     $_ANDNOT_                    1232
     $_AND_                         50
     $_MUX_                        155
     $_NAND_                        41
     $_NOR_                         81
     $_NOT_                        103
     $_ORNOT_                      177
     $_OR_                         814
     $_SDFFE_PP0N_                  72
     $_SDFFE_PP0P_                 252
     $_SDFFE_PP1P_                  43
     $_SDFF_PP0_                    46
     $_SDFF_PP1_                     2
     $_XNOR_                        19
     $_XOR_                         38

End of script. Logfile hash: 71527d53ca, CPU: user 2.27s system 0.05s
Yosys 0.36+3 (git sha1 a53032104, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 30% 69x opt_expr (0 sec), 18% 51x opt_clean (0 sec), ...

