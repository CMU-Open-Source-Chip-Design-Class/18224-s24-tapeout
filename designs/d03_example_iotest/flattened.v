/* Generated by Yosys 0.36+3 (git sha1 a53032104, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os) */

/* top =  1  */
/* src = "d03_example_iotest/src/toplevel_chip.v:4.1-18.10" */
module d03_example_iotest(io_in, io_out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  /* force_downto = 32'd1 */
  /* src = "d03_example_iotest/src/toplevel_chip.v:9.13-14.6|d03_example_iotest/src/chip.sv:18.21-18.28|/Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v:270.23-270.24" */
  wire [3:0] _091_;
  /* force_downto = 32'd1 */
  /* src = "d03_example_iotest/src/toplevel_chip.v:9.13-14.6|d03_example_iotest/src/chip.sv:18.21-18.28|/Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v:270.26-270.27" */
  wire [3:0] _092_;
  /* src = "d03_example_iotest/src/toplevel_chip.v:5.18-5.23" */
  input [13:0] io_in;
  wire [13:0] io_in;
  /* src = "d03_example_iotest/src/toplevel_chip.v:6.19-6.25" */
  output [13:0] io_out;
  wire [13:0] io_out;
  /* hdlname = "mchip clock" */
  /* src = "d03_example_iotest/src/toplevel_chip.v:9.13-14.6|d03_example_iotest/src/chip.sv:6.17-6.22" */
  wire \mchip.clock ;
  /* hdlname = "mchip idx" */
  /* src = "d03_example_iotest/src/toplevel_chip.v:9.13-14.6|d03_example_iotest/src/chip.sv:10.17-10.20" */
  reg [3:0] \mchip.idx ;
  /* hdlname = "mchip io_in" */
  /* src = "d03_example_iotest/src/toplevel_chip.v:9.13-14.6|d03_example_iotest/src/chip.sv:5.24-5.29" */
  wire [11:0] \mchip.io_in ;
  /* hdlname = "mchip io_out" */
  /* src = "d03_example_iotest/src/toplevel_chip.v:9.13-14.6|d03_example_iotest/src/chip.sv:7.25-7.31" */
  wire [11:0] \mchip.io_out ;
  /* hdlname = "mchip reset" */
  /* src = "d03_example_iotest/src/toplevel_chip.v:9.13-14.6|d03_example_iotest/src/chip.sv:6.24-6.29" */
  wire \mchip.reset ;
  /* hdlname = "mchip shift_bit" */
  /* src = "d03_example_iotest/src/toplevel_chip.v:9.13-14.6|d03_example_iotest/src/chip.sv:11.18-11.27" */
  wire [11:0] \mchip.shift_bit ;
  assign _091_[0] = ~\mchip.idx [0];
  assign _035_ = \mchip.idx [1] & \mchip.idx [0];
  assign _036_ = \mchip.idx [2] | ~(\mchip.idx [3]);
  assign _037_ = _035_ & ~(_036_);
  assign _000_ = _037_ | io_in[13];
  assign _038_ = ~(\mchip.idx [3] | \mchip.idx [2]);
  assign _039_ = \mchip.idx [1] | \mchip.idx [0];
  assign _040_ = _038_ & ~(_039_);
  assign _041_ = ~\mchip.idx [2];
  assign _042_ = _041_ & ~(_039_);
  assign _043_ = _042_ ^ \mchip.idx [3];
  assign _044_ = _039_ ^ _041_;
  assign _045_ = \mchip.idx [1] | ~(\mchip.idx [0]);
  assign _046_ = _045_ | _044_;
  assign _047_ = ~(_046_ | _043_);
  assign _048_ = _047_ & ~(_040_);
  assign io_out[0] = _048_ & ~(_040_);
  assign _049_ = io_in[6] ^ io_in[7];
  assign _050_ = io_in[4] ^ io_in[5];
  assign _051_ = _050_ ^ _049_;
  assign _052_ = ~_040_;
  assign _053_ = ~_044_;
  assign _054_ = _039_ & ~(_035_);
  assign _055_ = _040_ | \mchip.idx [0];
  assign _056_ = _055_ | _054_;
  assign _057_ = _056_ | _053_;
  assign _058_ = _057_ | _043_;
  assign _059_ = _058_ | _040_;
  assign _060_ = _052_ & ~(_059_);
  assign io_out[7] = _060_ ^ _051_;
  assign _061_ = io_in[2] ^ io_in[3];
  assign _062_ = io_in[0] ^ io_in[1];
  assign _063_ = _062_ ^ _061_;
  assign _064_ = _063_ ^ _050_;
  assign _065_ = \mchip.idx [0] | ~(\mchip.idx [1]);
  assign _066_ = _065_ | _044_;
  assign _067_ = _066_ | ~(_043_);
  assign _068_ = _067_ | _040_;
  assign _069_ = _052_ & ~(_068_);
  assign io_out[9] = _069_ ^ _064_;
  assign _070_ = io_in[10] ^ io_in[11];
  assign _071_ = io_in[8] ^ io_in[9];
  assign _072_ = _071_ ^ _070_;
  assign _073_ = _072_ ^ _063_;
  assign _074_ = ~(\mchip.idx [1] & \mchip.idx [0]);
  assign _075_ = _074_ | ~(_044_);
  assign _076_ = _075_ | _043_;
  assign _077_ = _076_ | _040_;
  assign _078_ = _052_ & ~(_077_);
  assign io_out[6] = _078_ ^ _073_;
  assign _079_ = _072_ ^ _049_;
  assign _080_ = _046_ | ~(_043_);
  assign _081_ = _080_ | _040_;
  assign _082_ = _052_ & ~(_081_);
  assign io_out[8] = _082_ ^ _079_;
  assign _083_ = _062_ ^ _050_;
  assign _084_ = _083_ ^ _071_;
  assign _085_ = _065_ | ~(_044_);
  assign _086_ = _085_ | _043_;
  assign _087_ = _086_ | _040_;
  assign _088_ = _052_ & ~(_087_);
  assign io_out[5] = _088_ ^ _084_;
  assign _089_ = _061_ ^ _049_;
  assign _090_ = _089_ ^ _070_;
  assign _001_ = _045_ | ~(_044_);
  assign _002_ = _001_ | _043_;
  assign _003_ = _002_ | _040_;
  assign _004_ = _052_ & ~(_003_);
  assign io_out[4] = _004_ ^ _090_;
  assign _005_ = _074_ | _044_;
  assign _006_ = _005_ | ~(_043_);
  assign _007_ = _006_ | _040_;
  assign _008_ = _052_ & ~(_007_);
  assign io_out[10] = _008_ ^ _072_;
  assign _009_ = ~(io_in[10] ^ io_in[8]);
  assign _010_ = ~(io_in[6] ^ io_in[4]);
  assign _011_ = io_in[2] ^ io_in[0];
  assign _012_ = _011_ ^ _010_;
  assign _013_ = _012_ ^ _009_;
  assign _014_ = _056_ | _044_;
  assign _015_ = _014_ | _043_;
  assign _016_ = _015_ | _040_;
  assign _017_ = _052_ & ~(_016_);
  assign io_out[3] = _017_ ^ _013_;
  assign _018_ = ~(io_in[11] ^ io_in[9]);
  assign _019_ = ~(io_in[7] ^ io_in[5]);
  assign _020_ = io_in[3] ^ io_in[1];
  assign _021_ = _020_ ^ _019_;
  assign _022_ = _021_ ^ _018_;
  assign _023_ = _005_ | _043_;
  assign _024_ = _023_ | _040_;
  assign _025_ = _052_ & ~(_024_);
  assign io_out[2] = _025_ ^ _022_;
  assign _026_ = _063_ ^ _051_;
  assign _027_ = _026_ ^ _072_;
  assign _028_ = _066_ | _043_;
  assign _029_ = _028_ | _040_;
  assign _030_ = _052_ & ~(_029_);
  assign io_out[1] = _030_ ^ _027_;
  assign _031_ = _014_ | ~(_043_);
  assign _032_ = _031_ | _040_;
  assign _033_ = _052_ & ~(_032_);
  assign io_out[11] = _033_ ^ _051_;
  assign _092_[1] = \mchip.idx [1] ^ \mchip.idx [0];
  assign _092_[2] = _035_ ^ \mchip.idx [2];
  assign _034_ = _035_ & ~(_041_);
  assign _092_[3] = _034_ ^ \mchip.idx [3];
  /* \always_ff  = 32'd1 */
  /* src = "d03_example_iotest/src/toplevel_chip.v:9.13-14.6|d03_example_iotest/src/chip.sv:15.5-19.8" */
  always @(posedge io_in[12])
    if (_000_) \mchip.idx [0] <= 1'h0;
    else \mchip.idx [0] <= _091_[0];
  /* \always_ff  = 32'd1 */
  /* src = "d03_example_iotest/src/toplevel_chip.v:9.13-14.6|d03_example_iotest/src/chip.sv:15.5-19.8" */
  always @(posedge io_in[12])
    if (_000_) \mchip.idx [1] <= 1'h0;
    else \mchip.idx [1] <= _092_[1];
  /* \always_ff  = 32'd1 */
  /* src = "d03_example_iotest/src/toplevel_chip.v:9.13-14.6|d03_example_iotest/src/chip.sv:15.5-19.8" */
  always @(posedge io_in[12])
    if (_000_) \mchip.idx [2] <= 1'h0;
    else \mchip.idx [2] <= _092_[2];
  /* \always_ff  = 32'd1 */
  /* src = "d03_example_iotest/src/toplevel_chip.v:9.13-14.6|d03_example_iotest/src/chip.sv:15.5-19.8" */
  always @(posedge io_in[12])
    if (_000_) \mchip.idx [3] <= 1'h0;
    else \mchip.idx [3] <= _092_[3];
  assign _091_[3:1] = \mchip.idx [3:1];
  assign _092_[0] = _091_[0];
  assign io_out[13:12] = 2'h0;
  assign \mchip.clock  = io_in[12];
  assign \mchip.io_in  = io_in[11:0];
  assign \mchip.io_out  = io_out[11:0];
  assign \mchip.reset  = io_in[13];
  assign \mchip.shift_bit  = { 11'h000, io_out[0] };
endmodule
