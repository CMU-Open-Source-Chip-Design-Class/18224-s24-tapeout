/* Generated by Yosys 0.36+3 (git sha1 a53032104, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os) */

/* top =  1  */
/* src = "d13_thomaska_cordic/src/toplevel_chip.v:5.1-19.10" */
module d13_thomaska_cordic(io_in, io_out);
  wire _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:122.25-122.54|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire _0053_;
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:122.25-122.54|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire _0054_;
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:122.25-122.54|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire _0055_;
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:122.25-122.54|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire _0056_;
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:122.25-122.54|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire _0057_;
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:122.25-122.54|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire _0058_;
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:122.25-122.54|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire _0059_;
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:122.25-122.54|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire _0060_;
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:122.25-122.54|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire _0061_;
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:122.25-122.54|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire _0062_;
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:122.25-122.54|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire _0063_;
  reg _0064_;
  reg _0065_;
  reg _0066_;
  reg _0067_;
  reg _0068_;
  reg _0069_;
  reg _0070_;
  reg _0071_;
  reg _0072_;
  reg _0073_;
  reg _0074_;
  reg _0075_;
  reg _0076_;
  reg _0077_;
  reg _0078_;
  reg _0079_;
  reg _0080_;
  reg _0081_;
  reg _0082_;
  reg _0083_;
  reg _0084_;
  reg _0085_;
  reg _0086_;
  reg _0087_;
  reg _0088_;
  reg _0089_;
  reg _0090_;
  reg _0091_;
  reg _0092_;
  reg _0093_;
  reg _0094_;
  reg _0095_;
  reg _0096_;
  reg _0097_;
  reg _0098_;
  reg _0099_;
  reg _0100_;
  reg _0101_;
  reg _0102_;
  reg _0103_;
  reg _0104_;
  reg _0105_;
  reg _0106_;
  reg _0107_;
  reg _0108_;
  reg _0109_;
  reg _0110_;
  reg _0111_;
  reg _0112_;
  reg _0113_;
  reg _0114_;
  reg _0115_;
  reg _0116_;
  reg _0117_;
  reg _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire _0571_;
  wire _0572_;
  wire _0573_;
  wire _0574_;
  wire _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire _0579_;
  wire _0580_;
  wire _0581_;
  wire _0582_;
  wire _0583_;
  wire _0584_;
  wire _0585_;
  wire _0586_;
  wire _0587_;
  wire _0588_;
  wire _0589_;
  wire _0590_;
  wire _0591_;
  wire _0592_;
  wire _0593_;
  wire _0594_;
  wire _0595_;
  wire _0596_;
  wire _0597_;
  wire _0598_;
  wire _0599_;
  wire _0600_;
  wire _0601_;
  wire _0602_;
  wire _0603_;
  wire _0604_;
  wire _0605_;
  wire _0606_;
  wire _0607_;
  wire _0608_;
  wire _0609_;
  wire _0610_;
  wire _0611_;
  wire _0612_;
  wire _0613_;
  wire _0614_;
  wire _0615_;
  wire _0616_;
  wire _0617_;
  wire _0618_;
  wire _0619_;
  wire _0620_;
  wire _0621_;
  wire _0622_;
  wire _0623_;
  wire _0624_;
  wire _0625_;
  wire _0626_;
  wire _0627_;
  wire _0628_;
  wire _0629_;
  wire _0630_;
  wire _0631_;
  wire _0632_;
  wire _0633_;
  wire _0634_;
  wire _0635_;
  wire _0636_;
  wire _0637_;
  wire _0638_;
  wire _0639_;
  wire _0640_;
  wire _0641_;
  wire _0642_;
  wire _0643_;
  wire _0644_;
  wire _0645_;
  wire _0646_;
  wire _0647_;
  wire _0648_;
  wire _0649_;
  wire _0650_;
  wire _0651_;
  wire _0652_;
  wire _0653_;
  wire _0654_;
  wire _0655_;
  wire _0656_;
  wire _0657_;
  wire _0658_;
  wire _0659_;
  wire _0660_;
  wire _0661_;
  wire _0662_;
  wire _0663_;
  wire _0664_;
  wire _0665_;
  wire _0666_;
  wire _0667_;
  wire _0668_;
  wire _0669_;
  wire _0670_;
  wire _0671_;
  wire _0672_;
  wire _0673_;
  wire _0674_;
  wire _0675_;
  wire _0676_;
  wire _0677_;
  wire _0678_;
  wire _0679_;
  wire _0680_;
  wire _0681_;
  wire _0682_;
  wire _0683_;
  wire _0684_;
  wire _0685_;
  wire _0686_;
  wire _0687_;
  wire _0688_;
  wire _0689_;
  wire _0690_;
  wire _0691_;
  wire _0692_;
  wire _0693_;
  wire _0694_;
  wire _0695_;
  wire _0696_;
  wire _0697_;
  wire _0698_;
  wire _0699_;
  wire _0700_;
  wire _0701_;
  wire _0702_;
  wire _0703_;
  wire _0704_;
  wire _0705_;
  wire _0706_;
  wire _0707_;
  wire _0708_;
  wire _0709_;
  wire _0710_;
  wire _0711_;
  wire _0712_;
  wire _0713_;
  wire _0714_;
  wire _0715_;
  wire _0716_;
  wire _0717_;
  wire _0718_;
  wire _0719_;
  wire _0720_;
  wire _0721_;
  wire _0722_;
  wire _0723_;
  wire _0724_;
  wire _0725_;
  wire _0726_;
  wire _0727_;
  wire _0728_;
  wire _0729_;
  wire _0730_;
  wire _0731_;
  wire _0732_;
  wire _0733_;
  wire _0734_;
  wire _0735_;
  wire _0736_;
  wire _0737_;
  wire _0738_;
  wire _0739_;
  wire _0740_;
  wire _0741_;
  wire _0742_;
  wire _0743_;
  wire _0744_;
  wire _0745_;
  wire _0746_;
  wire _0747_;
  wire _0748_;
  wire _0749_;
  wire _0750_;
  wire _0751_;
  wire _0752_;
  wire _0753_;
  wire _0754_;
  wire _0755_;
  wire _0756_;
  wire _0757_;
  wire _0758_;
  wire _0759_;
  wire _0760_;
  wire _0761_;
  wire _0762_;
  wire _0763_;
  wire _0764_;
  wire _0765_;
  wire _0766_;
  wire _0767_;
  wire _0768_;
  wire _0769_;
  wire _0770_;
  wire _0771_;
  wire _0772_;
  wire _0773_;
  wire _0774_;
  wire _0775_;
  wire _0776_;
  wire _0777_;
  wire _0778_;
  wire _0779_;
  wire _0780_;
  wire _0781_;
  wire _0782_;
  wire _0783_;
  wire _0784_;
  wire _0785_;
  wire _0786_;
  wire _0787_;
  wire _0788_;
  wire _0789_;
  wire _0790_;
  wire _0791_;
  wire _0792_;
  wire _0793_;
  wire _0794_;
  wire _0795_;
  wire _0796_;
  wire _0797_;
  wire _0798_;
  wire _0799_;
  wire _0800_;
  wire _0801_;
  wire _0802_;
  wire _0803_;
  wire _0804_;
  wire _0805_;
  wire _0806_;
  wire _0807_;
  wire _0808_;
  wire _0809_;
  wire _0810_;
  wire _0811_;
  wire _0812_;
  wire _0813_;
  wire _0814_;
  wire _0815_;
  wire _0816_;
  wire _0817_;
  wire _0818_;
  wire _0819_;
  wire _0820_;
  wire _0821_;
  wire _0822_;
  wire _0823_;
  wire _0824_;
  wire _0825_;
  wire _0826_;
  wire _0827_;
  wire _0828_;
  wire _0829_;
  wire _0830_;
  wire _0831_;
  wire _0832_;
  wire _0833_;
  wire _0834_;
  wire _0835_;
  wire _0836_;
  wire _0837_;
  wire _0838_;
  wire _0839_;
  wire _0840_;
  wire _0841_;
  wire _0842_;
  wire _0843_;
  wire _0844_;
  wire _0845_;
  wire _0846_;
  wire _0847_;
  wire _0848_;
  wire _0849_;
  wire _0850_;
  wire _0851_;
  wire _0852_;
  wire _0853_;
  wire _0854_;
  wire _0855_;
  wire _0856_;
  wire _0857_;
  wire _0858_;
  wire _0859_;
  wire _0860_;
  wire _0861_;
  wire _0862_;
  wire _0863_;
  wire _0864_;
  wire _0865_;
  wire _0866_;
  wire _0867_;
  wire _0868_;
  wire _0869_;
  wire _0870_;
  wire _0871_;
  wire _0872_;
  wire _0873_;
  wire _0874_;
  wire _0875_;
  wire _0876_;
  wire _0877_;
  wire _0878_;
  wire _0879_;
  wire _0880_;
  wire _0881_;
  wire _0882_;
  wire _0883_;
  wire _0884_;
  wire _0885_;
  wire _0886_;
  wire _0887_;
  wire _0888_;
  wire _0889_;
  wire _0890_;
  wire _0891_;
  wire _0892_;
  wire _0893_;
  wire _0894_;
  wire _0895_;
  wire _0896_;
  wire _0897_;
  wire _0898_;
  wire _0899_;
  wire _0900_;
  wire _0901_;
  wire _0902_;
  wire _0903_;
  wire _0904_;
  wire _0905_;
  wire _0906_;
  wire _0907_;
  wire _0908_;
  wire _0909_;
  wire _0910_;
  wire _0911_;
  wire _0912_;
  wire _0913_;
  wire _0914_;
  wire _0915_;
  wire _0916_;
  wire _0917_;
  wire _0918_;
  wire _0919_;
  wire _0920_;
  wire _0921_;
  wire _0922_;
  wire _0923_;
  wire _0924_;
  wire _0925_;
  wire _0926_;
  wire _0927_;
  wire _0928_;
  wire _0929_;
  wire _0930_;
  wire _0931_;
  wire _0932_;
  wire _0933_;
  wire _0934_;
  wire _0935_;
  wire _0936_;
  wire _0937_;
  wire _0938_;
  wire _0939_;
  wire _0940_;
  wire _0941_;
  wire _0942_;
  wire _0943_;
  wire _0944_;
  wire _0945_;
  wire _0946_;
  wire _0947_;
  wire _0948_;
  wire _0949_;
  wire _0950_;
  wire _0951_;
  wire _0952_;
  wire _0953_;
  wire _0954_;
  wire _0955_;
  wire _0956_;
  wire _0957_;
  wire _0958_;
  wire _0959_;
  wire _0960_;
  wire _0961_;
  wire _0962_;
  wire _0963_;
  wire _0964_;
  wire _0965_;
  wire _0966_;
  wire _0967_;
  wire _0968_;
  wire _0969_;
  wire _0970_;
  wire _0971_;
  wire _0972_;
  wire _0973_;
  wire _0974_;
  wire _0975_;
  wire _0976_;
  wire _0977_;
  wire _0978_;
  wire _0979_;
  wire _0980_;
  wire _0981_;
  wire _0982_;
  wire _0983_;
  wire _0984_;
  wire _0985_;
  wire _0986_;
  wire _0987_;
  wire _0988_;
  wire _0989_;
  wire _0990_;
  wire _0991_;
  wire _0992_;
  wire _0993_;
  wire _0994_;
  wire _0995_;
  wire _0996_;
  wire _0997_;
  wire _0998_;
  wire _0999_;
  wire _1000_;
  wire _1001_;
  wire _1002_;
  wire _1003_;
  wire _1004_;
  wire _1005_;
  wire _1006_;
  wire _1007_;
  wire _1008_;
  wire _1009_;
  wire _1010_;
  wire _1011_;
  wire _1012_;
  wire _1013_;
  wire _1014_;
  wire _1015_;
  wire _1016_;
  wire _1017_;
  wire _1018_;
  wire _1019_;
  wire _1020_;
  wire _1021_;
  wire _1022_;
  wire _1023_;
  wire _1024_;
  wire _1025_;
  wire _1026_;
  wire _1027_;
  wire _1028_;
  wire _1029_;
  wire _1030_;
  wire _1031_;
  wire _1032_;
  wire _1033_;
  wire _1034_;
  wire _1035_;
  wire _1036_;
  wire _1037_;
  wire _1038_;
  wire _1039_;
  wire _1040_;
  wire _1041_;
  wire _1042_;
  wire _1043_;
  wire _1044_;
  wire _1045_;
  wire _1046_;
  wire _1047_;
  wire _1048_;
  wire _1049_;
  wire _1050_;
  wire _1051_;
  wire _1052_;
  wire _1053_;
  wire _1054_;
  wire _1055_;
  wire _1056_;
  wire _1057_;
  wire _1058_;
  wire _1059_;
  wire _1060_;
  wire _1061_;
  wire _1062_;
  wire _1063_;
  wire _1064_;
  wire _1065_;
  wire _1066_;
  wire _1067_;
  wire _1068_;
  wire _1069_;
  wire _1070_;
  wire _1071_;
  wire _1072_;
  wire _1073_;
  wire _1074_;
  wire _1075_;
  wire _1076_;
  wire _1077_;
  wire _1078_;
  wire _1079_;
  wire _1080_;
  wire _1081_;
  wire _1082_;
  wire _1083_;
  wire _1084_;
  wire _1085_;
  wire _1086_;
  wire _1087_;
  wire _1088_;
  wire _1089_;
  wire _1090_;
  wire _1091_;
  wire _1092_;
  wire _1093_;
  wire _1094_;
  wire _1095_;
  wire _1096_;
  wire _1097_;
  wire _1098_;
  wire _1099_;
  wire _1100_;
  wire _1101_;
  wire _1102_;
  wire _1103_;
  wire _1104_;
  wire _1105_;
  wire _1106_;
  wire _1107_;
  wire _1108_;
  wire _1109_;
  wire _1110_;
  wire _1111_;
  wire _1112_;
  wire _1113_;
  wire _1114_;
  wire _1115_;
  wire _1116_;
  wire _1117_;
  wire _1118_;
  wire _1119_;
  wire _1120_;
  wire _1121_;
  wire _1122_;
  wire _1123_;
  wire _1124_;
  wire _1125_;
  wire _1126_;
  wire _1127_;
  wire _1128_;
  wire _1129_;
  wire _1130_;
  wire _1131_;
  wire _1132_;
  wire _1133_;
  wire _1134_;
  wire _1135_;
  wire _1136_;
  wire _1137_;
  wire _1138_;
  wire _1139_;
  wire _1140_;
  wire _1141_;
  wire _1142_;
  wire _1143_;
  wire _1144_;
  wire _1145_;
  wire _1146_;
  wire _1147_;
  wire _1148_;
  wire _1149_;
  wire _1150_;
  wire _1151_;
  wire _1152_;
  wire _1153_;
  wire _1154_;
  wire _1155_;
  wire _1156_;
  wire _1157_;
  wire _1158_;
  wire _1159_;
  wire _1160_;
  wire _1161_;
  wire _1162_;
  wire _1163_;
  wire _1164_;
  wire _1165_;
  wire _1166_;
  wire _1167_;
  wire _1168_;
  wire _1169_;
  wire _1170_;
  wire _1171_;
  wire _1172_;
  wire _1173_;
  wire _1174_;
  wire _1175_;
  wire _1176_;
  wire _1177_;
  wire _1178_;
  wire _1179_;
  wire _1180_;
  wire _1181_;
  wire _1182_;
  wire _1183_;
  wire _1184_;
  wire _1185_;
  wire _1186_;
  wire _1187_;
  wire _1188_;
  wire _1189_;
  wire _1190_;
  wire _1191_;
  wire _1192_;
  wire _1193_;
  wire _1194_;
  wire _1195_;
  wire _1196_;
  wire _1197_;
  wire _1198_;
  wire _1199_;
  wire _1200_;
  wire _1201_;
  wire _1202_;
  wire _1203_;
  wire _1204_;
  wire _1205_;
  wire _1206_;
  wire _1207_;
  wire _1208_;
  wire _1209_;
  wire _1210_;
  wire _1211_;
  wire _1212_;
  wire _1213_;
  wire _1214_;
  wire _1215_;
  wire _1216_;
  wire _1217_;
  wire _1218_;
  wire _1219_;
  wire _1220_;
  wire _1221_;
  wire _1222_;
  wire _1223_;
  wire _1224_;
  wire _1225_;
  wire _1226_;
  wire _1227_;
  wire _1228_;
  wire _1229_;
  wire _1230_;
  wire _1231_;
  wire _1232_;
  wire _1233_;
  wire _1234_;
  wire _1235_;
  wire _1236_;
  wire _1237_;
  wire _1238_;
  wire _1239_;
  wire _1240_;
  wire _1241_;
  wire _1242_;
  wire _1243_;
  wire _1244_;
  wire _1245_;
  wire _1246_;
  wire _1247_;
  wire _1248_;
  wire _1249_;
  wire _1250_;
  wire _1251_;
  wire _1252_;
  wire _1253_;
  wire _1254_;
  wire _1255_;
  wire _1256_;
  wire _1257_;
  wire _1258_;
  wire _1259_;
  wire _1260_;
  wire _1261_;
  wire _1262_;
  wire _1263_;
  wire _1264_;
  wire _1265_;
  wire _1266_;
  wire _1267_;
  wire _1268_;
  wire _1269_;
  wire _1270_;
  wire _1271_;
  wire _1272_;
  wire _1273_;
  wire _1274_;
  wire _1275_;
  wire _1276_;
  wire _1277_;
  wire _1278_;
  wire _1279_;
  wire _1280_;
  wire _1281_;
  wire _1282_;
  wire _1283_;
  wire _1284_;
  wire _1285_;
  wire _1286_;
  wire _1287_;
  wire _1288_;
  wire _1289_;
  wire _1290_;
  wire _1291_;
  wire _1292_;
  wire _1293_;
  wire _1294_;
  wire _1295_;
  wire _1296_;
  wire _1297_;
  wire _1298_;
  wire _1299_;
  wire _1300_;
  wire _1301_;
  wire _1302_;
  wire _1303_;
  wire _1304_;
  wire _1305_;
  wire _1306_;
  wire _1307_;
  wire _1308_;
  wire _1309_;
  wire _1310_;
  wire _1311_;
  wire _1312_;
  wire _1313_;
  wire _1314_;
  wire _1315_;
  wire _1316_;
  wire _1317_;
  wire _1318_;
  wire _1319_;
  wire _1320_;
  wire _1321_;
  wire _1322_;
  wire _1323_;
  wire _1324_;
  wire _1325_;
  wire _1326_;
  wire _1327_;
  wire _1328_;
  wire _1329_;
  wire _1330_;
  wire _1331_;
  wire _1332_;
  wire _1333_;
  wire _1334_;
  wire _1335_;
  wire _1336_;
  wire _1337_;
  wire _1338_;
  wire _1339_;
  wire _1340_;
  wire _1341_;
  wire _1342_;
  wire _1343_;
  wire _1344_;
  wire _1345_;
  wire _1346_;
  wire _1347_;
  wire _1348_;
  wire _1349_;
  wire _1350_;
  wire _1351_;
  wire _1352_;
  wire _1353_;
  wire _1354_;
  wire _1355_;
  wire _1356_;
  wire _1357_;
  wire _1358_;
  wire _1359_;
  wire _1360_;
  wire _1361_;
  wire _1362_;
  wire _1363_;
  wire _1364_;
  wire _1365_;
  wire _1366_;
  wire _1367_;
  wire _1368_;
  wire _1369_;
  wire _1370_;
  wire _1371_;
  wire _1372_;
  wire _1373_;
  wire _1374_;
  wire _1375_;
  wire _1376_;
  wire _1377_;
  wire _1378_;
  wire _1379_;
  wire _1380_;
  wire _1381_;
  wire _1382_;
  wire _1383_;
  wire _1384_;
  wire _1385_;
  wire _1386_;
  wire _1387_;
  wire _1388_;
  wire _1389_;
  wire _1390_;
  wire _1391_;
  wire _1392_;
  wire _1393_;
  wire _1394_;
  wire _1395_;
  wire _1396_;
  wire _1397_;
  wire _1398_;
  wire _1399_;
  wire _1400_;
  wire _1401_;
  wire _1402_;
  wire _1403_;
  wire _1404_;
  wire _1405_;
  wire _1406_;
  wire _1407_;
  wire _1408_;
  wire _1409_;
  wire _1410_;
  wire _1411_;
  wire _1412_;
  wire _1413_;
  wire _1414_;
  wire _1415_;
  wire _1416_;
  wire _1417_;
  wire _1418_;
  wire _1419_;
  wire _1420_;
  wire _1421_;
  wire _1422_;
  wire _1423_;
  wire _1424_;
  wire _1425_;
  wire _1426_;
  wire _1427_;
  wire _1428_;
  wire _1429_;
  wire _1430_;
  wire _1431_;
  wire _1432_;
  wire _1433_;
  wire _1434_;
  wire _1435_;
  wire _1436_;
  wire _1437_;
  wire _1438_;
  wire _1439_;
  wire _1440_;
  wire _1441_;
  wire _1442_;
  wire _1443_;
  wire _1444_;
  wire _1445_;
  wire _1446_;
  wire _1447_;
  wire _1448_;
  wire _1449_;
  wire _1450_;
  wire _1451_;
  wire _1452_;
  wire _1453_;
  wire _1454_;
  wire _1455_;
  wire _1456_;
  wire _1457_;
  wire _1458_;
  wire _1459_;
  wire _1460_;
  wire _1461_;
  wire _1462_;
  wire _1463_;
  wire _1464_;
  wire _1465_;
  wire _1466_;
  wire _1467_;
  wire _1468_;
  wire _1469_;
  wire _1470_;
  wire _1471_;
  wire _1472_;
  wire _1473_;
  wire _1474_;
  wire _1475_;
  wire _1476_;
  wire _1477_;
  wire _1478_;
  wire _1479_;
  wire _1480_;
  wire _1481_;
  wire _1482_;
  wire _1483_;
  wire _1484_;
  wire _1485_;
  wire _1486_;
  wire _1487_;
  wire _1488_;
  wire _1489_;
  wire _1490_;
  wire _1491_;
  wire _1492_;
  wire _1493_;
  wire _1494_;
  wire _1495_;
  wire _1496_;
  wire _1497_;
  wire _1498_;
  wire _1499_;
  wire _1500_;
  wire _1501_;
  wire _1502_;
  wire _1503_;
  wire _1504_;
  wire _1505_;
  wire _1506_;
  wire _1507_;
  wire _1508_;
  wire _1509_;
  wire _1510_;
  wire _1511_;
  wire _1512_;
  wire _1513_;
  wire _1514_;
  wire _1515_;
  wire _1516_;
  wire _1517_;
  wire _1518_;
  wire _1519_;
  wire _1520_;
  wire _1521_;
  wire _1522_;
  wire _1523_;
  wire _1524_;
  wire _1525_;
  wire _1526_;
  wire _1527_;
  wire _1528_;
  wire _1529_;
  wire _1530_;
  wire _1531_;
  wire _1532_;
  wire _1533_;
  wire _1534_;
  wire _1535_;
  wire _1536_;
  wire _1537_;
  wire _1538_;
  wire _1539_;
  wire _1540_;
  wire _1541_;
  wire _1542_;
  wire _1543_;
  wire _1544_;
  wire _1545_;
  wire _1546_;
  wire _1547_;
  wire _1548_;
  wire _1549_;
  wire _1550_;
  wire _1551_;
  wire _1552_;
  wire _1553_;
  wire _1554_;
  wire _1555_;
  wire _1556_;
  wire _1557_;
  wire _1558_;
  wire _1559_;
  wire _1560_;
  wire _1561_;
  wire _1562_;
  wire _1563_;
  wire _1564_;
  wire _1565_;
  wire _1566_;
  wire _1567_;
  wire _1568_;
  wire _1569_;
  wire _1570_;
  wire _1571_;
  wire _1572_;
  wire _1573_;
  wire _1574_;
  wire _1575_;
  wire _1576_;
  wire _1577_;
  wire _1578_;
  wire _1579_;
  wire _1580_;
  wire _1581_;
  wire _1582_;
  wire _1583_;
  wire _1584_;
  wire _1585_;
  wire _1586_;
  wire _1587_;
  wire _1588_;
  wire _1589_;
  wire _1590_;
  wire _1591_;
  wire _1592_;
  wire _1593_;
  wire _1594_;
  wire _1595_;
  wire _1596_;
  wire _1597_;
  wire _1598_;
  wire _1599_;
  wire _1600_;
  wire _1601_;
  wire _1602_;
  wire _1603_;
  wire _1604_;
  wire _1605_;
  wire _1606_;
  wire _1607_;
  wire _1608_;
  wire _1609_;
  wire _1610_;
  wire _1611_;
  wire _1612_;
  wire _1613_;
  wire _1614_;
  wire _1615_;
  wire _1616_;
  wire _1617_;
  wire _1618_;
  wire _1619_;
  wire _1620_;
  wire _1621_;
  wire _1622_;
  wire _1623_;
  wire _1624_;
  wire _1625_;
  wire _1626_;
  wire _1627_;
  wire _1628_;
  wire _1629_;
  wire _1630_;
  wire _1631_;
  wire _1632_;
  wire _1633_;
  wire _1634_;
  wire _1635_;
  wire _1636_;
  wire _1637_;
  wire _1638_;
  wire _1639_;
  wire _1640_;
  wire _1641_;
  wire _1642_;
  wire _1643_;
  wire _1644_;
  wire _1645_;
  wire _1646_;
  wire _1647_;
  wire _1648_;
  wire _1649_;
  wire _1650_;
  wire _1651_;
  wire _1652_;
  wire _1653_;
  wire _1654_;
  wire _1655_;
  wire _1656_;
  wire _1657_;
  wire _1658_;
  wire _1659_;
  wire _1660_;
  wire _1661_;
  wire _1662_;
  wire _1663_;
  wire _1664_;
  wire _1665_;
  wire _1666_;
  wire _1667_;
  wire _1668_;
  wire _1669_;
  wire _1670_;
  wire _1671_;
  wire _1672_;
  wire _1673_;
  wire _1674_;
  wire _1675_;
  wire _1676_;
  wire _1677_;
  wire _1678_;
  wire _1679_;
  wire _1680_;
  wire _1681_;
  wire _1682_;
  wire _1683_;
  wire _1684_;
  wire _1685_;
  wire _1686_;
  wire _1687_;
  wire _1688_;
  wire _1689_;
  wire _1690_;
  wire _1691_;
  wire _1692_;
  wire _1693_;
  wire _1694_;
  wire _1695_;
  wire _1696_;
  wire _1697_;
  wire _1698_;
  wire _1699_;
  wire _1700_;
  wire _1701_;
  wire _1702_;
  wire _1703_;
  wire _1704_;
  wire _1705_;
  wire _1706_;
  wire _1707_;
  wire _1708_;
  wire _1709_;
  wire _1710_;
  wire _1711_;
  wire _1712_;
  wire _1713_;
  wire _1714_;
  wire _1715_;
  wire _1716_;
  wire _1717_;
  wire _1718_;
  wire _1719_;
  wire _1720_;
  wire _1721_;
  wire _1722_;
  wire _1723_;
  wire _1724_;
  wire _1725_;
  wire _1726_;
  wire _1727_;
  wire _1728_;
  wire _1729_;
  wire _1730_;
  wire _1731_;
  wire _1732_;
  wire _1733_;
  wire _1734_;
  wire _1735_;
  wire _1736_;
  wire _1737_;
  wire _1738_;
  wire _1739_;
  wire _1740_;
  wire _1741_;
  wire _1742_;
  wire _1743_;
  wire _1744_;
  wire _1745_;
  wire _1746_;
  wire _1747_;
  wire _1748_;
  wire _1749_;
  wire _1750_;
  wire _1751_;
  wire _1752_;
  wire _1753_;
  wire _1754_;
  wire _1755_;
  wire _1756_;
  wire _1757_;
  wire _1758_;
  wire _1759_;
  wire _1760_;
  wire _1761_;
  wire _1762_;
  wire _1763_;
  wire _1764_;
  wire _1765_;
  wire _1766_;
  wire _1767_;
  wire _1768_;
  wire _1769_;
  wire _1770_;
  wire _1771_;
  wire _1772_;
  wire _1773_;
  wire _1774_;
  wire _1775_;
  wire _1776_;
  wire _1777_;
  wire _1778_;
  wire _1779_;
  wire _1780_;
  wire _1781_;
  wire _1782_;
  wire _1783_;
  wire _1784_;
  wire _1785_;
  wire _1786_;
  wire _1787_;
  wire _1788_;
  wire _1789_;
  wire _1790_;
  wire _1791_;
  wire _1792_;
  wire _1793_;
  wire _1794_;
  wire _1795_;
  wire _1796_;
  wire _1797_;
  wire _1798_;
  wire _1799_;
  wire _1800_;
  wire _1801_;
  wire _1802_;
  wire _1803_;
  wire _1804_;
  wire _1805_;
  wire _1806_;
  wire _1807_;
  wire _1808_;
  wire _1809_;
  wire _1810_;
  wire _1811_;
  wire _1812_;
  wire _1813_;
  wire _1814_;
  wire _1815_;
  wire _1816_;
  wire _1817_;
  wire _1818_;
  wire _1819_;
  wire _1820_;
  wire _1821_;
  wire _1822_;
  wire _1823_;
  wire _1824_;
  wire _1825_;
  wire _1826_;
  wire _1827_;
  wire _1828_;
  wire _1829_;
  wire _1830_;
  wire _1831_;
  wire _1832_;
  wire _1833_;
  wire _1834_;
  wire _1835_;
  wire _1836_;
  wire _1837_;
  wire _1838_;
  wire _1839_;
  wire _1840_;
  wire _1841_;
  wire _1842_;
  wire _1843_;
  wire _1844_;
  wire _1845_;
  wire _1846_;
  wire _1847_;
  wire _1848_;
  wire _1849_;
  wire _1850_;
  wire _1851_;
  wire _1852_;
  wire _1853_;
  wire _1854_;
  wire _1855_;
  wire _1856_;
  wire _1857_;
  wire _1858_;
  wire _1859_;
  wire _1860_;
  wire _1861_;
  wire _1862_;
  wire _1863_;
  wire _1864_;
  wire _1865_;
  wire _1866_;
  wire _1867_;
  wire _1868_;
  wire _1869_;
  wire _1870_;
  wire _1871_;
  wire _1872_;
  wire _1873_;
  wire _1874_;
  wire _1875_;
  wire _1876_;
  wire _1877_;
  wire _1878_;
  wire _1879_;
  wire _1880_;
  wire _1881_;
  wire _1882_;
  wire _1883_;
  wire _1884_;
  wire _1885_;
  wire _1886_;
  wire _1887_;
  wire _1888_;
  wire _1889_;
  wire _1890_;
  wire _1891_;
  wire _1892_;
  wire _1893_;
  wire _1894_;
  wire _1895_;
  wire _1896_;
  wire _1897_;
  wire _1898_;
  wire _1899_;
  wire _1900_;
  wire _1901_;
  wire _1902_;
  wire _1903_;
  wire _1904_;
  wire _1905_;
  wire _1906_;
  wire _1907_;
  wire _1908_;
  wire _1909_;
  wire _1910_;
  wire _1911_;
  wire _1912_;
  wire _1913_;
  wire _1914_;
  wire _1915_;
  wire _1916_;
  wire _1917_;
  wire _1918_;
  wire _1919_;
  wire _1920_;
  wire _1921_;
  wire _1922_;
  wire _1923_;
  wire _1924_;
  wire _1925_;
  wire _1926_;
  wire _1927_;
  wire _1928_;
  wire _1929_;
  wire _1930_;
  wire _1931_;
  wire _1932_;
  wire _1933_;
  wire _1934_;
  wire _1935_;
  wire _1936_;
  wire _1937_;
  wire _1938_;
  wire _1939_;
  wire _1940_;
  wire _1941_;
  wire _1942_;
  wire _1943_;
  wire _1944_;
  wire _1945_;
  wire _1946_;
  wire _1947_;
  wire _1948_;
  wire _1949_;
  wire _1950_;
  wire _1951_;
  wire _1952_;
  wire _1953_;
  wire _1954_;
  wire _1955_;
  wire _1956_;
  wire _1957_;
  wire _1958_;
  wire _1959_;
  wire _1960_;
  wire _1961_;
  wire _1962_;
  wire _1963_;
  wire _1964_;
  wire _1965_;
  wire _1966_;
  wire _1967_;
  wire _1968_;
  wire _1969_;
  wire _1970_;
  wire _1971_;
  wire _1972_;
  wire _1973_;
  wire _1974_;
  wire _1975_;
  wire _1976_;
  wire _1977_;
  wire _1978_;
  wire _1979_;
  wire _1980_;
  wire _1981_;
  wire _1982_;
  wire _1983_;
  wire _1984_;
  wire _1985_;
  wire _1986_;
  wire _1987_;
  wire _1988_;
  wire _1989_;
  wire _1990_;
  wire _1991_;
  wire _1992_;
  wire _1993_;
  wire _1994_;
  wire _1995_;
  wire _1996_;
  wire _1997_;
  wire _1998_;
  wire _1999_;
  wire _2000_;
  wire _2001_;
  wire _2002_;
  wire _2003_;
  wire _2004_;
  wire _2005_;
  wire _2006_;
  wire _2007_;
  wire _2008_;
  wire _2009_;
  wire _2010_;
  wire _2011_;
  wire _2012_;
  wire _2013_;
  wire _2014_;
  wire _2015_;
  wire _2016_;
  wire _2017_;
  wire _2018_;
  wire _2019_;
  wire _2020_;
  wire _2021_;
  wire _2022_;
  wire _2023_;
  wire _2024_;
  wire _2025_;
  wire _2026_;
  wire _2027_;
  wire _2028_;
  wire _2029_;
  wire _2030_;
  wire _2031_;
  wire _2032_;
  wire _2033_;
  wire _2034_;
  wire _2035_;
  wire _2036_;
  wire _2037_;
  wire _2038_;
  wire _2039_;
  wire _2040_;
  wire _2041_;
  wire _2042_;
  wire _2043_;
  wire _2044_;
  wire _2045_;
  wire _2046_;
  wire _2047_;
  wire _2048_;
  wire _2049_;
  wire _2050_;
  wire _2051_;
  wire _2052_;
  wire _2053_;
  wire _2054_;
  wire _2055_;
  wire _2056_;
  wire _2057_;
  wire _2058_;
  wire _2059_;
  wire _2060_;
  wire _2061_;
  wire _2062_;
  wire _2063_;
  wire _2064_;
  wire _2065_;
  wire _2066_;
  wire _2067_;
  wire _2068_;
  wire _2069_;
  wire _2070_;
  wire _2071_;
  wire _2072_;
  wire _2073_;
  wire _2074_;
  wire _2075_;
  wire _2076_;
  wire _2077_;
  wire _2078_;
  wire _2079_;
  wire _2080_;
  wire _2081_;
  wire _2082_;
  wire _2083_;
  wire _2084_;
  wire _2085_;
  wire _2086_;
  wire _2087_;
  wire _2088_;
  wire _2089_;
  wire _2090_;
  wire _2091_;
  wire _2092_;
  wire _2093_;
  wire _2094_;
  wire _2095_;
  wire _2096_;
  wire _2097_;
  wire _2098_;
  wire _2099_;
  wire _2100_;
  wire _2101_;
  wire _2102_;
  wire _2103_;
  wire _2104_;
  wire _2105_;
  wire _2106_;
  wire _2107_;
  wire _2108_;
  wire _2109_;
  wire _2110_;
  wire _2111_;
  wire _2112_;
  wire _2113_;
  wire _2114_;
  wire _2115_;
  wire _2116_;
  wire _2117_;
  wire _2118_;
  wire _2119_;
  wire _2120_;
  wire _2121_;
  wire _2122_;
  wire _2123_;
  wire _2124_;
  wire _2125_;
  wire _2126_;
  wire _2127_;
  wire _2128_;
  wire _2129_;
  wire _2130_;
  wire _2131_;
  wire _2132_;
  wire _2133_;
  /* force_downto = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:120.29-120.44|d13_thomaska_cordic/src/chip.sv:10.18-11.99|/Users/anish/workspace/oss-cad-suite/libexec/../share/yosys/techmap.v:270.26-270.27" */
  wire [2:0] _2134_;
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:6.18-6.23" */
  input [13:0] io_in;
  wire [13:0] io_in;
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:7.19-7.25" */
  output [13:0] io_out;
  wire [13:0] io_out;
  /* hdlname = "mchip clock" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/chip.sv:6.17-6.22" */
  wire \mchip.clock ;
  /* hdlname = "mchip cordic_module clk" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:17.17-17.20|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.clk ;
  /* hdlname = "mchip cordic_module done" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:20.18-20.22|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.done ;
  /* hdlname = "mchip cordic_module fstage_0 clk" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:150.17-150.20|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.clk ;
  /* hdlname = "mchip cordic_module fstage_0 mode" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:150.29-150.33|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.mode ;
  /* hdlname = "mchip cordic_module fstage_0 out_x" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:152.34-152.39|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.out_x ;
  /* hdlname = "mchip cordic_module fstage_0 reset" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:150.22-150.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.reset ;
  /* hdlname = "mchip cordic_module fstage_0 stage_0 clk" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:180.17-180.20|d13_thomaska_cordic/src/tt_um_cordic.sv:156.12-159.58|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.stage_0.clk ;
  /* hdlname = "mchip cordic_module fstage_0 stage_0 mode" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:180.29-180.33|d13_thomaska_cordic/src/tt_um_cordic.sv:156.12-159.58|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.stage_0.mode ;
  /* hdlname = "mchip cordic_module fstage_0 stage_0 reset" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:180.22-180.27|d13_thomaska_cordic/src/tt_um_cordic.sv:156.12-159.58|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.stage_0.reset ;
  /* hdlname = "mchip cordic_module fstage_0 stage_0 step_ctr" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:181.23-181.31|d13_thomaska_cordic/src/tt_um_cordic.sv:156.12-159.58|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [4:0] \mchip.cordic_module.fstage_0.stage_0.step_ctr ;
  /* hdlname = "mchip cordic_module fstage_0 stage_0 subx in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:196.29-197.47|d13_thomaska_cordic/src/tt_um_cordic.sv:209.36-209.40|d13_thomaska_cordic/src/tt_um_cordic.sv:156.12-159.58|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  /* unused_bits = "16" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_0.subx.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_0 suby in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:200.29-201.47|d13_thomaska_cordic/src/tt_um_cordic.sv:209.36-209.40|d13_thomaska_cordic/src/tt_um_cordic.sv:156.12-159.58|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  /* unused_bits = "16" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_0.suby.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_0 subz in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:191.29-192.47|d13_thomaska_cordic/src/tt_um_cordic.sv:209.36-209.40|d13_thomaska_cordic/src/tt_um_cordic.sv:156.12-159.58|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_0.subz.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_0 subz inside_add in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:191.29-192.47|d13_thomaska_cordic/src/tt_um_cordic.sv:226.36-226.40|d13_thomaska_cordic/src/tt_um_cordic.sv:218.27-219.49|d13_thomaska_cordic/src/tt_um_cordic.sv:156.12-159.58|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_0.subz.inside_add.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_0 subz modified_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:191.29-192.47|d13_thomaska_cordic/src/tt_um_cordic.sv:213.23-213.33|d13_thomaska_cordic/src/tt_um_cordic.sv:156.12-159.58|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_0.subz.modified_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_0 x_coeff" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:186.20-186.27|d13_thomaska_cordic/src/tt_um_cordic.sv:156.12-159.58|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  /* unused_bits = "16" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_0.x_coeff ;
  /* hdlname = "mchip cordic_module fstage_0 stage_0 y_coeff" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:187.20-187.27|d13_thomaska_cordic/src/tt_um_cordic.sv:156.12-159.58|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  /* unused_bits = "16" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_0.y_coeff ;
  /* hdlname = "mchip cordic_module fstage_0 stage_0 z_coeff" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:179.51-179.58|d13_thomaska_cordic/src/tt_um_cordic.sv:156.12-159.58|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_0.z_coeff ;
  /* hdlname = "mchip cordic_module fstage_0 stage_1 clk" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:180.17-180.20|d13_thomaska_cordic/src/tt_um_cordic.sv:160.11-163.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.stage_1.clk ;
  /* hdlname = "mchip cordic_module fstage_0 stage_1 mode" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:180.29-180.33|d13_thomaska_cordic/src/tt_um_cordic.sv:160.11-163.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.stage_1.mode ;
  /* hdlname = "mchip cordic_module fstage_0 stage_1 reset" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:180.22-180.27|d13_thomaska_cordic/src/tt_um_cordic.sv:160.11-163.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.stage_1.reset ;
  /* hdlname = "mchip cordic_module fstage_0 stage_1 step_ctr" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:181.23-181.31|d13_thomaska_cordic/src/tt_um_cordic.sv:160.11-163.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [4:0] \mchip.cordic_module.fstage_0.stage_1.step_ctr ;
  /* hdlname = "mchip cordic_module fstage_0 stage_1 subx inside_add in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:196.29-197.47|d13_thomaska_cordic/src/tt_um_cordic.sv:226.36-226.40|d13_thomaska_cordic/src/tt_um_cordic.sv:218.27-219.49|d13_thomaska_cordic/src/tt_um_cordic.sv:160.11-163.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_1.subx.inside_add.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_1 subx modified_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:196.29-197.47|d13_thomaska_cordic/src/tt_um_cordic.sv:213.23-213.33|d13_thomaska_cordic/src/tt_um_cordic.sv:160.11-163.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_1.subx.modified_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_1 suby inside_add in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:200.29-201.47|d13_thomaska_cordic/src/tt_um_cordic.sv:226.36-226.40|d13_thomaska_cordic/src/tt_um_cordic.sv:218.27-219.49|d13_thomaska_cordic/src/tt_um_cordic.sv:160.11-163.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_1.suby.inside_add.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_1 suby modified_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:200.29-201.47|d13_thomaska_cordic/src/tt_um_cordic.sv:213.23-213.33|d13_thomaska_cordic/src/tt_um_cordic.sv:160.11-163.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_1.suby.modified_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_1 subz in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:191.29-192.47|d13_thomaska_cordic/src/tt_um_cordic.sv:209.36-209.40|d13_thomaska_cordic/src/tt_um_cordic.sv:160.11-163.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_1.subz.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_1 subz inside_add in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:191.29-192.47|d13_thomaska_cordic/src/tt_um_cordic.sv:226.36-226.40|d13_thomaska_cordic/src/tt_um_cordic.sv:218.27-219.49|d13_thomaska_cordic/src/tt_um_cordic.sv:160.11-163.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_1.subz.inside_add.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_1 subz modified_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:191.29-192.47|d13_thomaska_cordic/src/tt_um_cordic.sv:213.23-213.33|d13_thomaska_cordic/src/tt_um_cordic.sv:160.11-163.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_1.subz.modified_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_1 z_coeff" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:179.51-179.58|d13_thomaska_cordic/src/tt_um_cordic.sv:160.11-163.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_1.z_coeff ;
  /* hdlname = "mchip cordic_module fstage_0 stage_2 clk" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:180.17-180.20|d13_thomaska_cordic/src/tt_um_cordic.sv:164.11-167.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.stage_2.clk ;
  /* hdlname = "mchip cordic_module fstage_0 stage_2 mode" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:180.29-180.33|d13_thomaska_cordic/src/tt_um_cordic.sv:164.11-167.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.stage_2.mode ;
  /* hdlname = "mchip cordic_module fstage_0 stage_2 reset" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:180.22-180.27|d13_thomaska_cordic/src/tt_um_cordic.sv:164.11-167.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.stage_2.reset ;
  /* hdlname = "mchip cordic_module fstage_0 stage_2 step_ctr" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:181.23-181.31|d13_thomaska_cordic/src/tt_um_cordic.sv:164.11-167.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [4:0] \mchip.cordic_module.fstage_0.stage_2.step_ctr ;
  /* hdlname = "mchip cordic_module fstage_0 stage_2 subx inside_add in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:196.29-197.47|d13_thomaska_cordic/src/tt_um_cordic.sv:226.36-226.40|d13_thomaska_cordic/src/tt_um_cordic.sv:218.27-219.49|d13_thomaska_cordic/src/tt_um_cordic.sv:164.11-167.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_2.subx.inside_add.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_2 subx modified_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:196.29-197.47|d13_thomaska_cordic/src/tt_um_cordic.sv:213.23-213.33|d13_thomaska_cordic/src/tt_um_cordic.sv:164.11-167.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_2.subx.modified_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_2 suby inside_add in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:200.29-201.47|d13_thomaska_cordic/src/tt_um_cordic.sv:226.36-226.40|d13_thomaska_cordic/src/tt_um_cordic.sv:218.27-219.49|d13_thomaska_cordic/src/tt_um_cordic.sv:164.11-167.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_2.suby.inside_add.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_2 suby modified_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:200.29-201.47|d13_thomaska_cordic/src/tt_um_cordic.sv:213.23-213.33|d13_thomaska_cordic/src/tt_um_cordic.sv:164.11-167.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_2.suby.modified_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_2 subz in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:191.29-192.47|d13_thomaska_cordic/src/tt_um_cordic.sv:209.36-209.40|d13_thomaska_cordic/src/tt_um_cordic.sv:164.11-167.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_2.subz.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_2 subz inside_add in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:191.29-192.47|d13_thomaska_cordic/src/tt_um_cordic.sv:226.36-226.40|d13_thomaska_cordic/src/tt_um_cordic.sv:218.27-219.49|d13_thomaska_cordic/src/tt_um_cordic.sv:164.11-167.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_2.subz.inside_add.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_2 subz modified_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:191.29-192.47|d13_thomaska_cordic/src/tt_um_cordic.sv:213.23-213.33|d13_thomaska_cordic/src/tt_um_cordic.sv:164.11-167.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_2.subz.modified_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_2 z_coeff" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:179.51-179.58|d13_thomaska_cordic/src/tt_um_cordic.sv:164.11-167.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_2.z_coeff ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 clk" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:180.17-180.20|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.stage_3.clk ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 mode" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:180.29-180.33|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.stage_3.mode ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 out_x" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:182.34-182.39|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_3.out_x ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 reset" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:180.22-180.27|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.fstage_0.stage_3.reset ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 step_ctr" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:181.23-181.31|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [4:0] \mchip.cordic_module.fstage_0.stage_3.step_ctr ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 subx inside_add in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:196.29-197.47|d13_thomaska_cordic/src/tt_um_cordic.sv:226.36-226.40|d13_thomaska_cordic/src/tt_um_cordic.sv:218.27-219.49|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_3.subx.inside_add.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 subx inside_add out" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:196.29-197.47|d13_thomaska_cordic/src/tt_um_cordic.sv:228.31-228.34|d13_thomaska_cordic/src/tt_um_cordic.sv:218.27-219.49|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_3.subx.inside_add.out ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 subx modified_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:196.29-197.47|d13_thomaska_cordic/src/tt_um_cordic.sv:213.23-213.33|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_3.subx.modified_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 subx out" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:196.29-197.47|d13_thomaska_cordic/src/tt_um_cordic.sv:211.31-211.34|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_3.subx.out ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 suby inside_add in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:200.29-201.47|d13_thomaska_cordic/src/tt_um_cordic.sv:226.36-226.40|d13_thomaska_cordic/src/tt_um_cordic.sv:218.27-219.49|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_3.suby.inside_add.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 suby modified_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:200.29-201.47|d13_thomaska_cordic/src/tt_um_cordic.sv:213.23-213.33|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_3.suby.modified_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 subz in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:191.29-192.47|d13_thomaska_cordic/src/tt_um_cordic.sv:209.36-209.40|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_3.subz.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 subz inside_add in_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:191.29-192.47|d13_thomaska_cordic/src/tt_um_cordic.sv:226.36-226.40|d13_thomaska_cordic/src/tt_um_cordic.sv:218.27-219.49|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_3.subz.inside_add.in_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 subz modified_b" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:191.29-192.47|d13_thomaska_cordic/src/tt_um_cordic.sv:213.23-213.33|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_3.subz.modified_b ;
  /* hdlname = "mchip cordic_module fstage_0 stage_3 z_coeff" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:179.51-179.58|d13_thomaska_cordic/src/tt_um_cordic.sv:168.12-171.65|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.stage_3.z_coeff ;
  /* hdlname = "mchip cordic_module fstage_0 step_ctr" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:149.23-149.31|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [4:0] \mchip.cordic_module.fstage_0.step_ctr ;
  /* hdlname = "mchip cordic_module fstage_0 z_coeff_0" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:148.59-148.68|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.z_coeff_0 ;
  /* hdlname = "mchip cordic_module fstage_0 z_coeff_1" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:148.26-148.35|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.z_coeff_1 ;
  /* hdlname = "mchip cordic_module fstage_0 z_coeff_2" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:148.37-148.46|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.z_coeff_2 ;
  /* hdlname = "mchip cordic_module fstage_0 z_coeff_3" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:71.17-75.114|d13_thomaska_cordic/src/tt_um_cordic.sv:148.48-148.57|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.fstage_0.z_coeff_3 ;
  /* hdlname = "mchip cordic_module in_val" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:18.23-18.29|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [9:0] \mchip.cordic_module.in_val ;
  /* hdlname = "mchip cordic_module in_val_32768" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:23.20-23.32|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.in_val_32768 ;
  /* hdlname = "mchip cordic_module in_x_32768" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:24.20-24.30|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.in_x_32768 ;
  /* hdlname = "mchip cordic_module in_y_32768" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:24.32-24.42|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.in_y_32768 ;
  /* hdlname = "mchip cordic_module init_x" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:63.36-63.42|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.init_x ;
  /* hdlname = "mchip cordic_module init_y" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:63.28-63.34|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.init_y ;
  /* hdlname = "mchip cordic_module init_z" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:63.20-63.26|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.init_z ;
  /* hdlname = "mchip cordic_module mode_toggle" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:17.27-17.38|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.mode_toggle ;
  /* hdlname = "mchip cordic_module next_x" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:63.68-63.74|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.next_x ;
  /* hdlname = "mchip cordic_module out1" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:30.20-30.24|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.out1 ;
  /* hdlname = "mchip cordic_module out2" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:30.26-30.30|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.out2 ;
  /* hdlname = "mchip cordic_module out_toggle" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:17.40-17.50|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.out_toggle ;
  /* hdlname = "mchip cordic_module rst" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:17.22-17.25|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire \mchip.cordic_module.rst ;
  /* hdlname = "mchip cordic_module step_ctr_4" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:28.17-28.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [4:0] \mchip.cordic_module.step_ctr_4 ;
  /* hdlname = "mchip cordic_module val" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:19.32-19.35|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [10:0] \mchip.cordic_module.val ;
  /* hdlname = "mchip cordic_module z_coeff[0]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[0] ;
  /* hdlname = "mchip cordic_module z_coeff[10]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[10] ;
  /* hdlname = "mchip cordic_module z_coeff[11]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[11] ;
  /* hdlname = "mchip cordic_module z_coeff[12]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[12] ;
  /* hdlname = "mchip cordic_module z_coeff[13]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[13] ;
  /* hdlname = "mchip cordic_module z_coeff[14]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[14] ;
  /* hdlname = "mchip cordic_module z_coeff[15]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[15] ;
  /* hdlname = "mchip cordic_module z_coeff[1]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[1] ;
  /* hdlname = "mchip cordic_module z_coeff[2]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[2] ;
  /* hdlname = "mchip cordic_module z_coeff[3]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[3] ;
  /* hdlname = "mchip cordic_module z_coeff[4]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[4] ;
  /* hdlname = "mchip cordic_module z_coeff[5]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[5] ;
  /* hdlname = "mchip cordic_module z_coeff[6]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[6] ;
  /* hdlname = "mchip cordic_module z_coeff[7]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[7] ;
  /* hdlname = "mchip cordic_module z_coeff[8]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[8] ;
  /* hdlname = "mchip cordic_module z_coeff[9]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:25.20-25.27|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff[9] ;
  /* hdlname = "mchip cordic_module z_coeff_group[0]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:26.20-26.33|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff_group[0] ;
  /* hdlname = "mchip cordic_module z_coeff_group[1]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:26.20-26.33|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff_group[1] ;
  /* hdlname = "mchip cordic_module z_coeff_group[2]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:26.20-26.33|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff_group[2] ;
  /* hdlname = "mchip cordic_module z_coeff_group[3]" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:26.20-26.33|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  wire [16:0] \mchip.cordic_module.z_coeff_group[3] ;
  /* hdlname = "mchip io_in" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/chip.sv:4.24-4.29" */
  wire [11:0] \mchip.io_in ;
  /* hdlname = "mchip io_out" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/chip.sv:5.25-5.31" */
  wire [11:0] \mchip.io_out ;
  /* hdlname = "mchip reset" */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/chip.sv:7.17-7.22" */
  wire \mchip.reset ;
  assign \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] = io_in[13] | ~(_0099_);
  assign _0936_ = _0100_ & ~(io_in[13]);
  assign _0946_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] & ~(_0936_);
  assign _0957_ = _0101_ & ~(io_in[13]);
  assign _0001_ = ~(_0957_ & _0946_);
  assign _0000_ = ~(_0001_ | io_in[13]);
  assign io_out[0] = io_in[11] ? \mchip.cordic_module.out1 [6] : \mchip.cordic_module.out2 [6];
  assign io_out[1] = io_in[11] ? \mchip.cordic_module.out1 [7] : \mchip.cordic_module.out2 [7];
  assign io_out[2] = io_in[11] ? \mchip.cordic_module.out1 [8] : \mchip.cordic_module.out2 [8];
  assign io_out[3] = io_in[11] ? \mchip.cordic_module.out1 [9] : \mchip.cordic_module.out2 [9];
  assign io_out[4] = io_in[11] ? \mchip.cordic_module.out1 [10] : \mchip.cordic_module.out2 [10];
  assign io_out[5] = io_in[11] ? \mchip.cordic_module.out1 [11] : \mchip.cordic_module.out2 [11];
  assign io_out[6] = io_in[11] ? \mchip.cordic_module.out1 [12] : \mchip.cordic_module.out2 [12];
  assign io_out[7] = io_in[11] ? \mchip.cordic_module.out1 [13] : \mchip.cordic_module.out2 [13];
  assign io_out[8] = io_in[11] ? \mchip.cordic_module.out1 [14] : \mchip.cordic_module.out2 [14];
  assign io_out[9] = io_in[11] ? \mchip.cordic_module.out1 [15] : \mchip.cordic_module.out2 [15];
  assign io_out[10] = io_in[11] ? \mchip.cordic_module.out1 [16] : \mchip.cordic_module.out2 [16];
  assign _1091_ = ~io_in[10];
  assign _1102_ = _0957_ ^ _0946_;
  assign _1113_ = io_in[13] | ~(_0096_);
  assign _1123_ = io_in[13] | ~(_0097_);
  assign _1131_ = _0080_ & ~(io_in[13]);
  assign _1137_ = io_in[10] ? _1123_ : _1131_;
  assign _1143_ = io_in[13] | ~(_0118_);
  assign _1150_ = _0936_ ^ \mchip.cordic_module.fstage_0.stage_0.step_ctr [2];
  assign _1158_ = io_in[13] | ~(_0117_);
  assign _1163_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1143_ : _1158_;
  assign _1169_ = _1150_ ? _1143_ : _1163_;
  assign _1177_ = _1102_ ? _1143_ : _1169_;
  assign _1187_ = ~(_1177_ ^ _1137_);
  assign _1197_ = _1187_ ^ _1113_;
  assign _1208_ = io_in[13] | ~(_0095_);
  assign _1218_ = io_in[13] | ~(_0116_);
  assign _1228_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1143_ : _1218_;
  assign _1238_ = _1150_ ? _1143_ : _1228_;
  assign _1248_ = _1102_ ? _1143_ : _1238_;
  assign _1257_ = ~(_1248_ ^ _1137_);
  assign _1266_ = _1208_ | ~(_1257_);
  assign _1277_ = ~(_1257_ ^ _1208_);
  assign _1286_ = io_in[13] | ~(_0094_);
  assign _1295_ = io_in[13] | ~(_0115_);
  assign _1304_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1143_ : _1295_;
  assign _1313_ = _1150_ ? _1143_ : _1304_;
  assign _1324_ = _1102_ ? _1143_ : _1313_;
  assign _1332_ = ~(_1324_ ^ _1137_);
  assign _1341_ = _1286_ | ~(_1332_);
  assign _1349_ = io_in[13] | ~(_0093_);
  assign _1360_ = io_in[13] | ~(_0114_);
  assign _1363_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1143_ : _1360_;
  assign _1364_ = _1150_ ? _1143_ : _1363_;
  assign _1365_ = _1102_ ? _1143_ : _1364_;
  assign _1366_ = ~(_1365_ ^ _1137_);
  assign _1367_ = _1366_ & ~(_1349_);
  assign _1368_ = ~(_1332_ ^ _1286_);
  assign _1369_ = _1368_ & _1367_;
  assign _1370_ = _1341_ & ~(_1369_);
  assign _1371_ = _1366_ ^ _1349_;
  assign _1372_ = _1368_ & ~(_1371_);
  assign _1373_ = io_in[13] | ~(_0092_);
  assign _1374_ = ~_1373_;
  assign _1375_ = io_in[13] | ~(_0113_);
  assign _1376_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1158_ : _1375_;
  assign _1377_ = _1150_ ? _1143_ : _1376_;
  assign _1378_ = _1102_ ? _1143_ : _1377_;
  assign _1379_ = ~(_1378_ ^ _1137_);
  assign _1380_ = ~(_1379_ & _1374_);
  assign _1381_ = _1379_ ^ _1374_;
  assign _1382_ = io_in[13] | ~(_0091_);
  assign _1383_ = io_in[13] | ~(_0112_);
  assign _1384_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1218_ : _1383_;
  assign _1385_ = _1150_ ? _1143_ : _1384_;
  assign _1386_ = _1102_ ? _1143_ : _1385_;
  assign _1387_ = ~(_1386_ ^ _1137_);
  assign _1388_ = _1382_ | ~(_1387_);
  assign _1389_ = _1381_ & ~(_1388_);
  assign _1390_ = _1380_ & ~(_1389_);
  assign _1391_ = _1387_ ^ _1382_;
  assign _1392_ = _1381_ & ~(_1391_);
  assign _1393_ = io_in[13] | ~(_0090_);
  assign _1394_ = io_in[13] | ~(_0111_);
  assign _1395_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1295_ : _1394_;
  assign _1396_ = _1150_ ? _1143_ : _1395_;
  assign _1397_ = _1102_ ? _1143_ : _1396_;
  assign _1398_ = ~(_1397_ ^ _1137_);
  assign _1399_ = _1398_ & ~(_1393_);
  assign _1400_ = _1398_ ^ _1393_;
  assign _1401_ = io_in[13] | ~(_0089_);
  assign _1402_ = ~_1143_;
  assign _1403_ = _0114_ & ~(io_in[13]);
  assign _1404_ = _0110_ & ~(io_in[13]);
  assign _1405_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1403_ : _1404_;
  assign _1406_ = _1150_ ? _1402_ : _1405_;
  assign _1407_ = _1102_ ? _1402_ : _1406_;
  assign _1408_ = _1407_ ^ _1137_;
  assign _1409_ = _1401_ | ~(_1408_);
  assign _1410_ = _1409_ | _1400_;
  assign _1411_ = _1410_ & ~(_1399_);
  assign _1412_ = _1392_ & ~(_1411_);
  assign _1413_ = _1390_ & ~(_1412_);
  assign _1414_ = _1408_ ^ _1401_;
  assign _1415_ = _1414_ | _1400_;
  assign _1416_ = _1392_ & ~(_1415_);
  assign _1417_ = io_in[13] | ~(_0088_);
  assign _1418_ = ~_1417_;
  assign _1419_ = io_in[13] | ~(_0109_);
  assign _1420_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1375_ : _1419_;
  assign _1421_ = _1150_ ? _1163_ : _1420_;
  assign _1422_ = _1102_ ? _1143_ : _1421_;
  assign _1423_ = ~(_1422_ ^ _1137_);
  assign _1424_ = ~(_1423_ & _1418_);
  assign _1425_ = _1423_ ^ _1418_;
  assign _1426_ = io_in[13] | ~(_0087_);
  assign _1427_ = io_in[13] | ~(_0108_);
  assign _1428_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1383_ : _1427_;
  assign _1429_ = _1150_ ? _1228_ : _1428_;
  assign _1430_ = _1102_ ? _1143_ : _1429_;
  assign _1431_ = ~(_1430_ ^ _1137_);
  assign _1432_ = _1426_ | ~(_1431_);
  assign _1433_ = _1425_ & ~(_1432_);
  assign _1434_ = _1424_ & ~(_1433_);
  assign _1435_ = _1431_ ^ _1426_;
  assign _1436_ = _1425_ & ~(_1435_);
  assign _1437_ = io_in[13] | ~(_0086_);
  assign _1438_ = ~_1437_;
  assign _1439_ = io_in[13] | ~(_0107_);
  assign _1440_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1394_ : _1439_;
  assign _1441_ = _1150_ ? _1304_ : _1440_;
  assign _1442_ = _1102_ ? _1143_ : _1441_;
  assign _1443_ = ~(_1442_ ^ _1137_);
  assign _1444_ = ~(_1443_ & _1438_);
  assign _1445_ = _1443_ ^ _1438_;
  assign _1446_ = io_in[13] | ~(_0085_);
  assign _1447_ = io_in[13] | ~(_0110_);
  assign _1448_ = io_in[13] | ~(_0106_);
  assign _1449_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1447_ : _1448_;
  assign _1450_ = _1150_ ? _1363_ : _1449_;
  assign _1451_ = _1102_ ? _1143_ : _1450_;
  assign _1452_ = ~(_1451_ ^ _1137_);
  assign _1453_ = _1446_ | ~(_1452_);
  assign _1454_ = _1445_ & ~(_1453_);
  assign _1455_ = _1444_ & ~(_1454_);
  assign _1456_ = _1436_ & ~(_1455_);
  assign _1457_ = _1434_ & ~(_1456_);
  assign _1458_ = _1452_ ^ _1446_;
  assign _1459_ = _1458_ | ~(_1445_);
  assign _1460_ = _1436_ & ~(_1459_);
  assign _1461_ = io_in[13] | ~(_0084_);
  assign _1462_ = ~_1461_;
  assign _1463_ = io_in[13] | ~(_0105_);
  assign _1464_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1419_ : _1463_;
  assign _1465_ = _1150_ ? _1376_ : _1464_;
  assign _1466_ = _1102_ ? _1143_ : _1465_;
  assign _1467_ = ~(_1466_ ^ _1137_);
  assign _1468_ = ~(_1467_ & _1462_);
  assign _1469_ = _1467_ ^ _1462_;
  assign _1470_ = io_in[13] | ~(_0083_);
  assign _1471_ = io_in[13] | ~(_0104_);
  assign _1472_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1427_ : _1471_;
  assign _1473_ = _1150_ ? _1384_ : _1472_;
  assign _1474_ = _1102_ ? _1143_ : _1473_;
  assign _1475_ = ~(_1474_ ^ _1137_);
  assign _1476_ = _1470_ | ~(_1475_);
  assign _1477_ = _1469_ & ~(_1476_);
  assign _1478_ = _1468_ & ~(_1477_);
  assign _1479_ = _1475_ ^ _1470_;
  assign _1480_ = _1469_ & ~(_1479_);
  assign _1481_ = io_in[13] | ~(_0082_);
  assign _1482_ = ~_1481_;
  assign _1483_ = io_in[13] | ~(_0103_);
  assign _1484_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1439_ : _1483_;
  assign _1485_ = _1150_ ? _1395_ : _1484_;
  assign _1486_ = _1102_ ? _1143_ : _1485_;
  assign _1487_ = ~(_1486_ ^ _1137_);
  assign _1488_ = ~(_1487_ & _1482_);
  assign _1489_ = _1487_ ^ _1482_;
  assign _1490_ = io_in[13] | ~(_0081_);
  assign _1491_ = ~_1137_;
  assign _1492_ = _0106_ & ~(io_in[13]);
  assign _1493_ = _0102_ & ~(io_in[13]);
  assign _1494_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1492_ : _1493_;
  assign _1495_ = _1150_ ? _1405_ : _1494_;
  assign _1496_ = _1102_ ? _1402_ : _1495_;
  assign _1497_ = _1496_ ? _1490_ : _1491_;
  assign _1498_ = _1489_ & ~(_1497_);
  assign _1499_ = _1488_ & ~(_1498_);
  assign _1500_ = _1480_ & ~(_1499_);
  assign _1501_ = _1478_ & ~(_1500_);
  assign _1502_ = _1460_ & ~(_1501_);
  assign _1503_ = _1457_ & ~(_1502_);
  assign _1504_ = _1416_ & ~(_1503_);
  assign _1505_ = _1413_ & ~(_1504_);
  assign _1506_ = _1372_ & ~(_1505_);
  assign _1507_ = _1370_ & ~(_1506_);
  assign _1508_ = _1277_ & ~(_1507_);
  assign _1509_ = _1266_ & ~(_1508_);
  assign _1510_ = _1509_ ^ _1197_;
  assign _1511_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1123_ : _1113_;
  assign _1512_ = _1150_ ? _1123_ : _1511_;
  assign _1513_ = _1102_ ? _1123_ : _1512_;
  assign _1514_ = ~_1123_;
  assign _1515_ = ~_1131_;
  assign _1516_ = io_in[10] ? _1514_ : _1515_;
  assign _1517_ = ~_1516_;
  assign _1518_ = _1517_ ^ _1513_;
  assign _1519_ = _1518_ & ~(_1158_);
  assign _1520_ = _1158_ ^ _1518_;
  assign _1521_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1123_ : _1208_;
  assign _1522_ = _1150_ ? _1123_ : _1521_;
  assign _1523_ = _1102_ ? _1123_ : _1522_;
  assign _1524_ = _1523_ ^ _1516_;
  assign _1525_ = _1218_ | _1524_;
  assign _1526_ = ~(_1525_ | _1520_);
  assign _1527_ = ~(_1526_ | _1519_);
  assign _1528_ = _1218_ ^ _1524_;
  assign _1529_ = _1528_ & ~(_1520_);
  assign _1530_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1123_ : _1286_;
  assign _1531_ = _1150_ ? _1123_ : _1530_;
  assign _1532_ = _1102_ ? _1123_ : _1531_;
  assign _1533_ = _1532_ ^ _1516_;
  assign _1534_ = _1295_ | _1533_;
  assign _1535_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1123_ : _1349_;
  assign _1536_ = _1150_ ? _1123_ : _1535_;
  assign _1537_ = _1102_ ? _1123_ : _1536_;
  assign _1538_ = _1537_ ^ _1517_;
  assign _1539_ = _1538_ & ~(_1360_);
  assign _1540_ = _1295_ ^ _1533_;
  assign _1541_ = _1540_ & _1539_;
  assign _1542_ = _1534_ & ~(_1541_);
  assign _1543_ = _1529_ & ~(_1542_);
  assign _1544_ = _1527_ & ~(_1543_);
  assign _1545_ = _1360_ ^ _1538_;
  assign _1546_ = _1540_ & ~(_1545_);
  assign _1547_ = _1546_ & _1529_;
  assign _1548_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1113_ : _1373_;
  assign _1549_ = _1150_ ? _1123_ : _1548_;
  assign _1550_ = _1102_ ? _1123_ : _1549_;
  assign _1551_ = _1550_ ^ _1517_;
  assign _1552_ = ~_1375_;
  assign _1553_ = ~(_1552_ & _1551_);
  assign _1554_ = _1552_ ^ _1551_;
  assign _1555_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1208_ : _1382_;
  assign _1556_ = _1150_ ? _1123_ : _1555_;
  assign _1557_ = _1102_ ? _1123_ : _1556_;
  assign _1558_ = _1557_ ^ _1516_;
  assign _1559_ = _1383_ | _1558_;
  assign _1560_ = _1554_ & ~(_1559_);
  assign _1561_ = _1553_ & ~(_1560_);
  assign _1562_ = ~(_1383_ ^ _1558_);
  assign _1563_ = _1554_ & ~(_1562_);
  assign _1564_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1286_ : _1393_;
  assign _1565_ = _1150_ ? _1123_ : _1564_;
  assign _1566_ = _1102_ ? _1123_ : _1565_;
  assign _1567_ = _1566_ ^ _1516_;
  assign _1568_ = _1394_ | _1567_;
  assign _1569_ = ~(_1394_ ^ _1567_);
  assign _1570_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1349_ : _1401_;
  assign _1571_ = _1150_ ? _1123_ : _1570_;
  assign _1572_ = _1102_ ? _1123_ : _1571_;
  assign _1573_ = _1572_ ^ _1516_;
  assign _1574_ = _1447_ | _1573_;
  assign _1575_ = ~(_1574_ | _1569_);
  assign _1576_ = _1568_ & ~(_1575_);
  assign _1577_ = _1563_ & ~(_1576_);
  assign _1578_ = _1561_ & ~(_1577_);
  assign _1579_ = _1547_ & ~(_1578_);
  assign _1580_ = _1544_ & ~(_1579_);
  assign _1581_ = _1404_ ^ _1573_;
  assign _1582_ = _1581_ | _1569_;
  assign _1583_ = _1563_ & ~(_1582_);
  assign _1584_ = _1583_ & _1547_;
  assign _1585_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1373_ : _1417_;
  assign _1586_ = _1150_ ? _1511_ : _1585_;
  assign _1587_ = _1102_ ? _1123_ : _1586_;
  assign _1588_ = _1587_ ^ _1516_;
  assign _1589_ = _1419_ | _1588_;
  assign _1590_ = _1419_ ^ _1588_;
  assign _1591_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1382_ : _1426_;
  assign _1592_ = _1150_ ? _1521_ : _1591_;
  assign _1593_ = _1102_ ? _1123_ : _1592_;
  assign _1594_ = _1593_ ^ _1516_;
  assign _1595_ = _1427_ | _1594_;
  assign _1596_ = _1590_ & ~(_1595_);
  assign _1597_ = _1589_ & ~(_1596_);
  assign _1598_ = ~(_1427_ ^ _1594_);
  assign _1599_ = _1590_ & ~(_1598_);
  assign _1600_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1393_ : _1437_;
  assign _1601_ = _1150_ ? _1530_ : _1600_;
  assign _1602_ = _1102_ ? _1123_ : _1601_;
  assign _1603_ = _1602_ ^ _1516_;
  assign _1604_ = _1439_ | _1603_;
  assign _1605_ = _1439_ ^ _1603_;
  assign _1606_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1401_ : _1446_;
  assign _1607_ = _1150_ ? _1535_ : _1606_;
  assign _1608_ = _1102_ ? _1123_ : _1607_;
  assign _1609_ = _1608_ ^ _1516_;
  assign _1610_ = _1448_ | _1609_;
  assign _1611_ = _1605_ & ~(_1610_);
  assign _1612_ = _1604_ & ~(_1611_);
  assign _1613_ = _1599_ & ~(_1612_);
  assign _1614_ = _1597_ & ~(_1613_);
  assign _1615_ = _1492_ ^ _1609_;
  assign _1616_ = _1615_ | ~(_1605_);
  assign _1617_ = _1599_ & ~(_1616_);
  assign _1618_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1417_ : _1461_;
  assign _1619_ = _1150_ ? _1548_ : _1618_;
  assign _1620_ = _1102_ ? _1123_ : _1619_;
  assign _1621_ = _1620_ ^ _1516_;
  assign _1622_ = _1463_ | _1621_;
  assign _1623_ = _1463_ ^ _1621_;
  assign _1624_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1426_ : _1470_;
  assign _1625_ = _1150_ ? _1555_ : _1624_;
  assign _1626_ = _1102_ ? _1123_ : _1625_;
  assign _1627_ = _1626_ ^ _1516_;
  assign _1628_ = _1471_ | _1627_;
  assign _1629_ = _1623_ & ~(_1628_);
  assign _1630_ = _1622_ & ~(_1629_);
  assign _1631_ = ~_1471_;
  assign _1632_ = _1631_ ^ _1627_;
  assign _1633_ = _1623_ & ~(_1632_);
  assign _1634_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1437_ : _1481_;
  assign _1635_ = _1150_ ? _1564_ : _1634_;
  assign _1636_ = _1102_ ? _1123_ : _1635_;
  assign _1637_ = _1636_ ^ _1516_;
  assign _1638_ = _1483_ | _1637_;
  assign _1639_ = _1483_ ^ _1637_;
  assign _1640_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1446_ : _1490_;
  assign _1641_ = _1150_ ? _1570_ : _1640_;
  assign _1642_ = _1102_ ? _1123_ : _1641_;
  assign _1643_ = ~_1493_;
  assign _1644_ = _1642_ ? _1517_ : _1643_;
  assign _1645_ = _1639_ & ~(_1644_);
  assign _1646_ = _1638_ & ~(_1645_);
  assign _1647_ = _1633_ & ~(_1646_);
  assign _1648_ = _1630_ & ~(_1647_);
  assign _1649_ = _1617_ & ~(_1648_);
  assign _1650_ = _1614_ & ~(_1649_);
  assign _1651_ = _1584_ & ~(_1650_);
  assign _1652_ = _1580_ & ~(_1651_);
  assign _1653_ = ~(_1137_ ^ _1123_);
  assign _1654_ = _1402_ ^ _1653_;
  assign _1655_ = _1654_ ^ _1652_;
  assign _1656_ = _0079_ & ~(io_in[13]);
  assign _1657_ = _1656_ & ~(_1137_);
  assign _1658_ = _1656_ ^ _1137_;
  assign _1659_ = _0936_ | \mchip.cordic_module.fstage_0.stage_0.step_ctr [2];
  assign _1660_ = _1659_ | _0957_;
  assign _1661_ = _1660_ ^ _1137_;
  assign _1662_ = _0078_ & ~(io_in[13]);
  assign _1663_ = ~(_1662_ & _1661_);
  assign _1664_ = ~(_1663_ | _1658_);
  assign _1665_ = ~(_1664_ | _1657_);
  assign _1666_ = _1662_ ^ _1661_;
  assign _1667_ = _1666_ & ~(_1658_);
  assign _1668_ = _0077_ & ~(io_in[13]);
  assign _1669_ = ~(_1668_ & _1661_);
  assign _1670_ = _0076_ & ~(io_in[13]);
  assign _1671_ = _1670_ & _1516_;
  assign _1672_ = ~_1671_;
  assign _1673_ = _1668_ ^ _1661_;
  assign _1674_ = _1673_ & ~(_1672_);
  assign _1675_ = _1669_ & ~(_1674_);
  assign _1676_ = _1667_ & ~(_1675_);
  assign _1677_ = _1665_ & ~(_1676_);
  assign _1678_ = _1670_ ^ _1137_;
  assign _1679_ = _1673_ & ~(_1678_);
  assign _1680_ = _1679_ & _1667_;
  assign _1681_ = _0075_ & ~(io_in[13]);
  assign _1682_ = ~(_1681_ & _1516_);
  assign _1683_ = ~(_1681_ ^ _1137_);
  assign _1684_ = ~(_0936_ & \mchip.cordic_module.fstage_0.stage_0.step_ctr [2]);
  assign _1685_ = ~(_1684_ | _0957_);
  assign _1686_ = _0936_ & ~(\mchip.cordic_module.fstage_0.stage_0.step_ctr [2]);
  assign _1687_ = _0957_ ? _0946_ : _1686_;
  assign _1688_ = _1685_ | ~(_1660_);
  assign _1689_ = _1688_ ^ _1517_;
  assign _1690_ = _0074_ & ~(io_in[13]);
  assign _1691_ = _1689_ | ~(_1690_);
  assign _1692_ = _1683_ & ~(_1691_);
  assign _1693_ = _1682_ & ~(_1692_);
  assign _1694_ = _1690_ ^ _1689_;
  assign _1695_ = _1683_ & ~(_1694_);
  assign _1696_ = _1660_ & ~(_1685_);
  assign _1697_ = _1687_ | ~(_1696_);
  assign _1698_ = _1697_ & _1685_;
  assign _1699_ = _1698_ ^ _1516_;
  assign _1700_ = _0073_ & ~(io_in[13]);
  assign _1701_ = ~(_1700_ & _1699_);
  assign _1702_ = _1700_ ^ _1699_;
  assign _1703_ = _0072_ & ~(io_in[13]);
  assign _1704_ = ~(_1703_ & _1699_);
  assign _1705_ = _1702_ & ~(_1704_);
  assign _1706_ = _1701_ & ~(_1705_);
  assign _1707_ = _1695_ & ~(_1706_);
  assign _1708_ = _1693_ & ~(_1707_);
  assign _1709_ = _1680_ & ~(_1708_);
  assign _1710_ = _1677_ & ~(_1709_);
  assign _1711_ = ~(_1703_ ^ _1699_);
  assign _1712_ = _1711_ | ~(_1702_);
  assign _1713_ = _1695_ & ~(_1712_);
  assign _1714_ = _1713_ & _1680_;
  assign _1715_ = _1686_ & ~(_0957_);
  assign _1716_ = _1696_ & ~(_1715_);
  assign _1717_ = _1697_ & ~(_1716_);
  assign _1718_ = _1717_ ^ _1516_;
  assign _1719_ = _0071_ & ~(io_in[13]);
  assign _1720_ = ~(_1719_ & _1718_);
  assign _1721_ = ~(_1719_ ^ _1718_);
  assign _1722_ = _0070_ & ~(io_in[13]);
  assign _1723_ = ~(_1722_ & _1699_);
  assign _1724_ = ~(_1723_ | _1721_);
  assign _1725_ = _1720_ & ~(_1724_);
  assign _1726_ = _1722_ ^ _1699_;
  assign _1727_ = _1726_ & ~(_1721_);
  assign _1728_ = _0069_ & ~(io_in[13]);
  assign _1729_ = ~(_1728_ & _1699_);
  assign _1730_ = _1728_ ^ _1699_;
  assign _1731_ = _0068_ & ~(io_in[13]);
  assign _1732_ = ~(_1731_ & _1699_);
  assign _1733_ = _1730_ & ~(_1732_);
  assign _1734_ = _1729_ & ~(_1733_);
  assign _1735_ = _1727_ & ~(_1734_);
  assign _1736_ = _1725_ & ~(_1735_);
  assign _1737_ = ~(_1731_ ^ _1699_);
  assign _1738_ = _1730_ & ~(_1737_);
  assign _1739_ = _1738_ & _1727_;
  assign _1740_ = _1696_ & _0001_;
  assign _1741_ = _1697_ & ~(_1740_);
  assign _1742_ = _1741_ ^ _1516_;
  assign _1743_ = _0067_ & ~(io_in[13]);
  assign _1744_ = ~(_1743_ & _1742_);
  assign _1745_ = _1743_ ^ _1742_;
  assign _1746_ = _0066_ & ~(io_in[13]);
  assign _1747_ = ~(_1746_ & _1699_);
  assign _1748_ = _1745_ & ~(_1747_);
  assign _1749_ = _1744_ & ~(_1748_);
  assign _1750_ = ~(_1746_ ^ _1699_);
  assign _1751_ = _1745_ & ~(_1750_);
  assign _1752_ = _0065_ & ~(io_in[13]);
  assign _1753_ = _1137_ | ~(_1752_);
  assign _1754_ = _1752_ ^ _1137_;
  assign _1755_ = _0064_ & ~(io_in[13]);
  assign _1756_ = ~_1755_;
  assign _1757_ = _1698_ ? _1756_ : _1517_;
  assign _1758_ = ~(_1757_ | _1754_);
  assign _1759_ = _1753_ & ~(_1758_);
  assign _1760_ = _1751_ & ~(_1759_);
  assign _1761_ = _1749_ & ~(_1760_);
  assign _1762_ = _1739_ & ~(_1761_);
  assign _1763_ = _1736_ & ~(_1762_);
  assign _1764_ = _1714_ & ~(_1763_);
  assign _1765_ = _1710_ & ~(_1764_);
  assign _1766_ = _1137_ ^ _1515_;
  assign _1767_ = _1766_ ^ _1765_;
  assign _1768_ = _1187_ & ~(_1113_);
  assign _1769_ = ~(_1266_ | _1197_);
  assign _1770_ = ~(_1769_ | _1768_);
  assign _1771_ = _1277_ & ~(_1197_);
  assign _1772_ = _1771_ & ~(_1370_);
  assign _1773_ = _1770_ & ~(_1772_);
  assign _1774_ = _1372_ & _1771_;
  assign _1775_ = _1774_ & ~(_1413_);
  assign _1776_ = _1773_ & ~(_1775_);
  assign _1777_ = _1416_ & _1774_;
  assign _1778_ = _1777_ & ~(_1503_);
  assign _1779_ = _1778_ | ~(_1776_);
  assign _1780_ = ~(_1143_ ^ _1137_);
  assign _1781_ = _1780_ ^ _1514_;
  assign _1782_ = _1781_ ^ _1779_;
  assign _1783_ = io_in[10] ? _1782_ : _1767_;
  assign _1784_ = ~(_1783_ ^ _1655_);
  assign _1785_ = ~_1784_;
  assign _1786_ = _1510_ & ~(_1785_);
  assign _1787_ = _1583_ & ~(_1650_);
  assign _1788_ = _1578_ & ~(_1787_);
  assign _1789_ = _1546_ & ~(_1788_);
  assign _1790_ = _1542_ & ~(_1789_);
  assign _1791_ = _1528_ & ~(_1790_);
  assign _1792_ = _1525_ & ~(_1791_);
  assign _1793_ = _1792_ ^ _1520_;
  assign _1794_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1655_ : _1793_;
  assign _1795_ = _1150_ ? _1655_ : _1794_;
  assign _1796_ = _1102_ ? _1655_ : _1795_;
  assign _1797_ = ~(_1783_ ^ _1796_);
  assign _1798_ = ~(_1507_ ^ _1277_);
  assign _1799_ = _1798_ & _1797_;
  assign _1800_ = _1785_ ^ _1510_;
  assign _1801_ = _1799_ & ~(_1800_);
  assign _1802_ = ~(_1801_ | _1786_);
  assign _1803_ = ~(_1790_ ^ _1528_);
  assign _1804_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1655_ : _1803_;
  assign _1805_ = _1150_ ? _1655_ : _1804_;
  assign _1806_ = _1102_ ? _1655_ : _1805_;
  assign _1807_ = ~(_1806_ ^ _1783_);
  assign _1808_ = _1505_ | _1371_;
  assign _1809_ = _1808_ & ~(_1367_);
  assign _1810_ = ~(_1809_ ^ _1368_);
  assign _1811_ = ~_1810_;
  assign _1812_ = _1807_ & ~(_1811_);
  assign _1813_ = _1788_ | _1545_;
  assign _1814_ = _1813_ & ~(_1539_);
  assign _1815_ = ~(_1814_ ^ _1540_);
  assign _1816_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1655_ : _1815_;
  assign _1817_ = _1150_ ? _1655_ : _1816_;
  assign _1818_ = _1102_ ? _1655_ : _1817_;
  assign _1819_ = ~(_1818_ ^ _1783_);
  assign _1820_ = _1505_ ^ _1371_;
  assign _1821_ = _1820_ & _1819_;
  assign _1822_ = _1811_ ^ _1807_;
  assign _1823_ = _1821_ & ~(_1822_);
  assign _1824_ = ~(_1823_ | _1812_);
  assign _1825_ = _1798_ ^ _1797_;
  assign _1826_ = _1800_ | ~(_1825_);
  assign _1827_ = ~(_1826_ | _1824_);
  assign _1828_ = _1802_ & ~(_1827_);
  assign _1829_ = _1788_ ^ _1545_;
  assign _1830_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1655_ : _1829_;
  assign _1831_ = _1150_ ? _1655_ : _1830_;
  assign _1832_ = _1102_ ? _1655_ : _1831_;
  assign _1833_ = ~(_1832_ ^ _1783_);
  assign _1834_ = ~(_1503_ | _1415_);
  assign _1835_ = _1411_ & ~(_1834_);
  assign _1836_ = ~(_1835_ | _1391_);
  assign _1837_ = _1836_ | ~(_1388_);
  assign _1838_ = _1837_ ^ _1381_;
  assign _1839_ = _1838_ & _1833_;
  assign _1840_ = _1838_ ^ _1833_;
  assign _1841_ = ~(_1650_ | _1582_);
  assign _1842_ = _1576_ & ~(_1841_);
  assign _1843_ = ~(_1842_ | _1562_);
  assign _1844_ = _1843_ | ~(_1559_);
  assign _1845_ = _1844_ ^ _1554_;
  assign _1846_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1793_ : _1845_;
  assign _1847_ = _1150_ ? _1655_ : _1846_;
  assign _1848_ = _1102_ ? _1655_ : _1847_;
  assign _1849_ = _1848_ ^ _1783_;
  assign _1850_ = _1835_ ^ _1391_;
  assign _1851_ = _1849_ | ~(_1850_);
  assign _1852_ = _1840_ & ~(_1851_);
  assign _1853_ = ~(_1852_ | _1839_);
  assign _1854_ = _1850_ ^ _1849_;
  assign _1855_ = _1840_ & ~(_1854_);
  assign _1856_ = _1842_ ^ _1562_;
  assign _1857_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1803_ : _1856_;
  assign _1858_ = _1150_ ? _1655_ : _1857_;
  assign _1859_ = _1102_ ? _1655_ : _1858_;
  assign _1860_ = _1859_ ^ _1783_;
  assign _1861_ = ~(_1503_ | _1414_);
  assign _1862_ = _1409_ & ~(_1861_);
  assign _1863_ = _1862_ ^ _1400_;
  assign _1864_ = _1860_ | ~(_1863_);
  assign _1865_ = ~(_1863_ ^ _1860_);
  assign _1866_ = ~(_1650_ | _1581_);
  assign _1867_ = _1574_ & ~(_1866_);
  assign _1868_ = _1867_ ^ _1569_;
  assign _1869_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1815_ : _1868_;
  assign _1870_ = _1150_ ? _1655_ : _1869_;
  assign _1871_ = _1102_ ? _1655_ : _1870_;
  assign _1872_ = _1871_ ^ _1783_;
  assign _1873_ = _1503_ ^ _1414_;
  assign _1874_ = _1872_ | ~(_1873_);
  assign _1875_ = _1865_ & ~(_1874_);
  assign _1876_ = _1864_ & ~(_1875_);
  assign _1877_ = _1855_ & ~(_1876_);
  assign _1878_ = _1853_ & ~(_1877_);
  assign _1879_ = ~(_1820_ ^ _1819_);
  assign _1880_ = ~(_1879_ | _1822_);
  assign _1881_ = _1826_ | ~(_1880_);
  assign _1882_ = ~(_1881_ | _1878_);
  assign _1883_ = _1828_ & ~(_1882_);
  assign _1884_ = _1650_ ^ _1581_;
  assign _1885_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1829_ : _1884_;
  assign _1886_ = _1150_ ? _1655_ : _1885_;
  assign _1887_ = _1102_ ? _1655_ : _1886_;
  assign _1888_ = ~(_1887_ ^ _1783_);
  assign _1889_ = ~(_1501_ | _1459_);
  assign _1890_ = _1455_ & ~(_1889_);
  assign _1891_ = ~(_1890_ | _1435_);
  assign _1892_ = _1891_ | ~(_1432_);
  assign _1893_ = _1892_ ^ _1425_;
  assign _1894_ = ~(_1893_ & _1888_);
  assign _1895_ = ~(_1893_ ^ _1888_);
  assign _1896_ = ~_1895_;
  assign _1897_ = ~(_1648_ | _1616_);
  assign _1898_ = _1612_ & ~(_1897_);
  assign _1899_ = ~(_1898_ | _1598_);
  assign _1900_ = _1899_ | ~(_1595_);
  assign _1901_ = _1900_ ^ _1590_;
  assign _1902_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1845_ : _1901_;
  assign _1903_ = _1150_ ? _1794_ : _1902_;
  assign _1904_ = _1102_ ? _1655_ : _1903_;
  assign _1905_ = _1904_ ^ _1783_;
  assign _1906_ = _1890_ ^ _1435_;
  assign _1907_ = _1905_ | ~(_1906_);
  assign _1908_ = _1896_ & ~(_1907_);
  assign _1909_ = _1894_ & ~(_1908_);
  assign _1910_ = _1906_ ^ _1905_;
  assign _1911_ = _1896_ & ~(_1910_);
  assign _1912_ = _1898_ ^ _1598_;
  assign _1913_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1856_ : _1912_;
  assign _1914_ = _1150_ ? _1804_ : _1913_;
  assign _1915_ = _1102_ ? _1655_ : _1914_;
  assign _1916_ = _1915_ ^ _1783_;
  assign _1917_ = ~(_1501_ | _1458_);
  assign _1918_ = _1917_ | ~(_1453_);
  assign _1919_ = _1918_ ^ _1445_;
  assign _1920_ = _1916_ | ~(_1919_);
  assign _1921_ = ~(_1919_ ^ _1916_);
  assign _1922_ = ~(_1648_ | _1615_);
  assign _1923_ = _1922_ | ~(_1610_);
  assign _1924_ = _1923_ ^ _1605_;
  assign _1925_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1868_ : _1924_;
  assign _1926_ = _1150_ ? _1816_ : _1925_;
  assign _1927_ = _1102_ ? _1655_ : _1926_;
  assign _1928_ = _1927_ ^ _1783_;
  assign _1929_ = _1501_ ^ _1458_;
  assign _1930_ = _1928_ | ~(_1929_);
  assign _1931_ = _1921_ & ~(_1930_);
  assign _1932_ = _1920_ & ~(_1931_);
  assign _1933_ = _1911_ & ~(_1932_);
  assign _1934_ = _1909_ & ~(_1933_);
  assign _1935_ = _1929_ ^ _1928_;
  assign _1936_ = _1935_ | ~(_1921_);
  assign _1937_ = _1911_ & ~(_1936_);
  assign _1938_ = _1648_ ^ _1615_;
  assign _1939_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1884_ : _1938_;
  assign _1940_ = _1150_ ? _1830_ : _1939_;
  assign _1941_ = _1102_ ? _1655_ : _1940_;
  assign _1942_ = _1941_ ^ _1783_;
  assign _1943_ = ~(_1499_ | _1479_);
  assign _1944_ = _1943_ | ~(_1476_);
  assign _1945_ = _1944_ ^ _1469_;
  assign _1946_ = _1942_ | ~(_1945_);
  assign _1947_ = ~(_1945_ ^ _1942_);
  assign _1948_ = ~(_1646_ | _1632_);
  assign _1949_ = _1628_ & ~(_1948_);
  assign _1950_ = ~(_1949_ ^ _1623_);
  assign _1951_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1901_ : _1950_;
  assign _1952_ = _1150_ ? _1846_ : _1951_;
  assign _1953_ = _1102_ ? _1655_ : _1952_;
  assign _1954_ = _1953_ ^ _1783_;
  assign _1955_ = _1499_ ^ _1479_;
  assign _1956_ = _1954_ | ~(_1955_);
  assign _1957_ = _1947_ & ~(_1956_);
  assign _1958_ = _1946_ & ~(_1957_);
  assign _1959_ = _1955_ ^ _1954_;
  assign _1960_ = _1947_ & ~(_1959_);
  assign _1961_ = _1646_ ^ _1632_;
  assign _1962_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1912_ : _1961_;
  assign _1963_ = _1150_ ? _1857_ : _1962_;
  assign _1964_ = _1102_ ? _1655_ : _1963_;
  assign _1965_ = _1964_ ^ _1783_;
  assign _1966_ = ~(_1497_ ^ _1489_);
  assign _1967_ = ~_1966_;
  assign _1968_ = _1967_ | _1965_;
  assign _1969_ = _1967_ ^ _1965_;
  assign _1970_ = _1496_ ^ _1491_;
  assign _1971_ = _1970_ ^ _1490_;
  assign _1972_ = _1971_ ^ _1517_;
  assign _1973_ = ~_1972_;
  assign _1974_ = ~_1655_;
  assign _1975_ = ~_1150_;
  assign _1976_ = ~(_1644_ ^ _1639_);
  assign _1977_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1924_ : _1976_;
  assign _1978_ = _1975_ & ~(_1977_);
  assign _1979_ = _1150_ & ~(_1869_);
  assign _1980_ = _1979_ | _1978_;
  assign _1981_ = _1102_ ? _1974_ : _1980_;
  assign _1982_ = _1981_ ? _1783_ : _1973_;
  assign _1983_ = _1969_ & ~(_1982_);
  assign _1984_ = _1968_ & ~(_1983_);
  assign _1985_ = _1960_ & ~(_1984_);
  assign _1986_ = _1958_ & ~(_1985_);
  assign _1987_ = _1937_ & ~(_1986_);
  assign _1988_ = _1934_ & ~(_1987_);
  assign _1989_ = _1873_ ^ _1872_;
  assign _1990_ = _1989_ | ~(_1865_);
  assign _1991_ = _1855_ & ~(_1990_);
  assign _1992_ = _1881_ | ~(_1991_);
  assign _1993_ = ~(_1992_ | _1988_);
  assign _1994_ = _1883_ & ~(_1993_);
  assign _1995_ = _1784_ ^ _1782_;
  assign _1996_ = ~(_1995_ ^ _1994_);
  assign _1997_ = ~_1996_;
  assign _1998_ = ~_1783_;
  assign _1999_ = _1713_ & ~(_1763_);
  assign _2000_ = _1708_ & ~(_1999_);
  assign _2001_ = _1679_ & ~(_2000_);
  assign _2002_ = _1675_ & ~(_2001_);
  assign _2003_ = _1666_ & ~(_2002_);
  assign _2004_ = _1663_ & ~(_2003_);
  assign _2005_ = _2004_ ^ _1658_;
  assign _2006_ = _2005_ & ~(_1998_);
  assign _2007_ = _2005_ ^ _1998_;
  assign _2008_ = ~(_2002_ ^ _1666_);
  assign _2009_ = ~(_2008_ & _1783_);
  assign _2010_ = ~(_2009_ | _2007_);
  assign _2011_ = ~(_2010_ | _2006_);
  assign _2012_ = _2008_ ^ _1783_;
  assign _2013_ = _2012_ & ~(_2007_);
  assign _2014_ = ~(_2000_ | _1678_);
  assign _2015_ = _1672_ & ~(_2014_);
  assign _2016_ = ~(_2015_ ^ _1673_);
  assign _2017_ = ~_1660_;
  assign _2018_ = _1783_ ^ _2017_;
  assign _2019_ = ~(_2018_ & _2016_);
  assign _2020_ = _2000_ ^ _1678_;
  assign _2021_ = _2020_ & _2018_;
  assign _2022_ = _2018_ ^ _2016_;
  assign _2023_ = _2022_ & _2021_;
  assign _2024_ = _2019_ & ~(_2023_);
  assign _2025_ = _2013_ & ~(_2024_);
  assign _2026_ = _2011_ & ~(_2025_);
  assign _2027_ = ~(_2020_ ^ _2018_);
  assign _2028_ = _2022_ & ~(_2027_);
  assign _2029_ = _2028_ & _2013_;
  assign _2030_ = ~(_1763_ | _1712_);
  assign _2031_ = _1706_ & ~(_2030_);
  assign _2032_ = ~(_2031_ | _1694_);
  assign _2033_ = _1691_ & ~(_2032_);
  assign _2034_ = ~(_2033_ ^ _1683_);
  assign _2035_ = ~(_2034_ & _2018_);
  assign _2036_ = _2031_ ^ _1694_;
  assign _2037_ = ~_2036_;
  assign _2038_ = _1783_ ^ _1698_;
  assign _2039_ = _2038_ & ~(_2037_);
  assign _2040_ = _2034_ ^ _2018_;
  assign _2041_ = _2040_ & _2039_;
  assign _2042_ = _2035_ & ~(_2041_);
  assign _2043_ = _2038_ ^ _2037_;
  assign _2044_ = _2040_ & ~(_2043_);
  assign _2045_ = ~(_1763_ | _1711_);
  assign _2046_ = _1704_ & ~(_2045_);
  assign _2047_ = ~(_2046_ ^ _1702_);
  assign _2048_ = ~(_2047_ & _2018_);
  assign _2049_ = _1763_ ^ _1711_;
  assign _2050_ = _2049_ & _2018_;
  assign _2051_ = _2047_ ^ _2018_;
  assign _2052_ = _2051_ & _2050_;
  assign _2053_ = _2048_ & ~(_2052_);
  assign _2054_ = _2044_ & ~(_2053_);
  assign _2055_ = _2042_ & ~(_2054_);
  assign _2056_ = _2029_ & ~(_2055_);
  assign _2057_ = _2026_ & ~(_2056_);
  assign _2058_ = ~(_2049_ ^ _2018_);
  assign _2059_ = _2058_ | ~(_2051_);
  assign _2060_ = _2044_ & ~(_2059_);
  assign _2061_ = _2060_ & _2029_;
  assign _2062_ = _1738_ & ~(_1761_);
  assign _2063_ = _1734_ & ~(_2062_);
  assign _2064_ = _1726_ & ~(_2063_);
  assign _2065_ = _1723_ & ~(_2064_);
  assign _2066_ = _2065_ ^ _1721_;
  assign _2067_ = ~(_2066_ & _1783_);
  assign _2068_ = ~(_2066_ ^ _1783_);
  assign _2069_ = _2063_ ^ _1726_;
  assign _2070_ = _1660_ & ~(_1715_);
  assign _2071_ = _1697_ & ~(_2070_);
  assign _2072_ = _2071_ ^ _1783_;
  assign _2073_ = _2069_ | ~(_2072_);
  assign _2074_ = ~(_2073_ | _2068_);
  assign _2075_ = _2067_ & ~(_2074_);
  assign _2076_ = ~(_2072_ ^ _2069_);
  assign _2077_ = _2076_ & ~(_2068_);
  assign _2078_ = ~(_1761_ | _1737_);
  assign _2079_ = _1732_ & ~(_2078_);
  assign _2080_ = ~(_2079_ ^ _1730_);
  assign _2081_ = ~(_2080_ & _1783_);
  assign _2082_ = _2080_ ^ _1783_;
  assign _2083_ = _1761_ ^ _1737_;
  assign _2084_ = ~(_2083_ & _2018_);
  assign _2085_ = _2082_ & ~(_2084_);
  assign _2086_ = _2081_ & ~(_2085_);
  assign _2087_ = _2077_ & ~(_2086_);
  assign _2088_ = _2075_ & ~(_2087_);
  assign _2089_ = ~(_2083_ ^ _2018_);
  assign _2090_ = _2082_ & ~(_2089_);
  assign _2091_ = _2090_ & _2077_;
  assign _2092_ = ~_1750_;
  assign _2093_ = _2092_ & ~(_1759_);
  assign _2094_ = _1747_ & ~(_2093_);
  assign _2095_ = ~(_2094_ ^ _1745_);
  assign _2096_ = ~(_2095_ & _2018_);
  assign _2097_ = ~(_2095_ ^ _2018_);
  assign _2098_ = _1759_ ^ _2092_;
  assign _2099_ = _0957_ & _0946_;
  assign _2100_ = _2099_ ^ _1783_;
  assign _2101_ = _2098_ | ~(_2100_);
  assign _2102_ = ~(_2101_ | _2097_);
  assign _2103_ = _2096_ & ~(_2102_);
  assign _2104_ = ~(_2100_ ^ _2098_);
  assign _2105_ = _2104_ & ~(_2097_);
  assign _2106_ = _1757_ ^ _1754_;
  assign _2107_ = ~(_2106_ & _1783_);
  assign _2108_ = ~(_2106_ ^ _1783_);
  assign _2109_ = _1755_ ^ _1699_;
  assign _2110_ = _2109_ ^ _1491_;
  assign _2111_ = _1660_ ? _1783_ : _2110_;
  assign _2112_ = _2111_ & ~(_2108_);
  assign _2113_ = _2107_ & ~(_2112_);
  assign _2114_ = _2105_ & ~(_2113_);
  assign _2115_ = _2103_ & ~(_2114_);
  assign _2116_ = _2091_ & ~(_2115_);
  assign _2117_ = _2088_ & ~(_2116_);
  assign _2118_ = _2061_ & ~(_2117_);
  assign _2119_ = _2057_ & ~(_2118_);
  assign _2120_ = ~(_1783_ ^ _1767_);
  assign _2121_ = ~(_2120_ ^ _2119_);
  assign _2122_ = io_in[10] ? _1997_ : _2121_;
  assign _2123_ = _2122_ ^ _1996_;
  assign _2124_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1782_ : _1510_;
  assign _2125_ = _1150_ ? _1782_ : _2124_;
  assign _2126_ = _1102_ ? _1782_ : _2125_;
  assign _2127_ = _2126_ ^ _1783_;
  assign _2128_ = _2127_ & _1803_;
  assign _2129_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1782_ : _1798_;
  assign _2130_ = _1150_ ? _1782_ : _2129_;
  assign _2131_ = _1102_ ? _1782_ : _2130_;
  assign _2132_ = ~(_2131_ ^ _1783_);
  assign _2133_ = _1815_ & ~(_2132_);
  assign _0119_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1782_ : _1810_;
  assign _0120_ = _1150_ ? _1782_ : _0119_;
  assign _0121_ = _1102_ ? _1782_ : _0120_;
  assign _0122_ = _0121_ ^ _1783_;
  assign _0123_ = _0122_ & _1829_;
  assign _0124_ = _2132_ ^ _1815_;
  assign _0125_ = _0123_ & ~(_0124_);
  assign _0126_ = _0125_ | _2133_;
  assign _0127_ = ~(_0122_ ^ _1829_);
  assign _0128_ = ~(_0127_ | _0124_);
  assign _0129_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1820_ : _1873_;
  assign _0130_ = _1150_ ? _1782_ : _0129_;
  assign _0131_ = _1102_ ? _1782_ : _0130_;
  assign _0132_ = _0131_ ^ _1783_;
  assign _0133_ = _0132_ & _1901_;
  assign _0134_ = ~(_0132_ ^ _1901_);
  assign _0135_ = ~_0134_;
  assign _0136_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1838_ : _1893_;
  assign _0137_ = _1150_ ? _2124_ : _0136_;
  assign _0138_ = _1102_ ? _1782_ : _0137_;
  assign _0139_ = _0138_ ^ _1783_;
  assign _0140_ = ~(_0139_ & _1912_);
  assign _0141_ = _0135_ & ~(_0140_);
  assign _0142_ = _0141_ | _0133_;
  assign _0143_ = ~(_0139_ ^ _1912_);
  assign _0144_ = _0135_ & ~(_0143_);
  assign _0145_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1850_ : _1906_;
  assign _0146_ = _1150_ ? _2129_ : _0145_;
  assign _0147_ = _1102_ ? _1782_ : _0146_;
  assign _0148_ = _0147_ ^ _1783_;
  assign _0149_ = ~(_0148_ & _1924_);
  assign _0150_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1863_ : _1919_;
  assign _0151_ = _1150_ ? _0119_ : _0150_;
  assign _0152_ = _1102_ ? _1782_ : _0151_;
  assign _0153_ = ~(_0152_ ^ _1783_);
  assign _0154_ = _1938_ & ~(_0153_);
  assign _0155_ = ~(_0148_ ^ _1924_);
  assign _0156_ = _0154_ & ~(_0155_);
  assign _0157_ = _0149_ & ~(_0156_);
  assign _0158_ = _0144_ & ~(_0157_);
  assign _0159_ = _0158_ | _0142_;
  assign _0160_ = _0153_ ^ _1938_;
  assign _0161_ = _0160_ | _0155_;
  assign _0162_ = _0144_ & ~(_0161_);
  assign _0163_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1873_ : _1929_;
  assign _0164_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1782_ : _1820_;
  assign _0165_ = _1150_ ? _0164_ : _0163_;
  assign _0166_ = _1102_ ? _1782_ : _0165_;
  assign _0167_ = _0166_ ^ _1783_;
  assign _0168_ = ~(_0167_ & _1950_);
  assign _0169_ = _0167_ ^ _1950_;
  assign _0170_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1893_ : _1945_;
  assign _0171_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1510_ : _1838_;
  assign _0172_ = _1150_ ? _0171_ : _0170_;
  assign _0173_ = _1102_ ? _1782_ : _0172_;
  assign _0174_ = _0173_ ^ _1783_;
  assign _0175_ = ~(_0174_ & _1961_);
  assign _0176_ = _0169_ & ~(_0175_);
  assign _0177_ = _0168_ & ~(_0176_);
  assign _0178_ = ~(_0174_ ^ _1961_);
  assign _0179_ = _0169_ & ~(_0178_);
  assign _0180_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1906_ : _1955_;
  assign _0181_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1798_ : _1850_;
  assign _0182_ = _1150_ ? _0181_ : _0180_;
  assign _0183_ = _1102_ ? _1782_ : _0182_;
  assign _0184_ = _0183_ ^ _1783_;
  assign _0185_ = ~(_0184_ & _1976_);
  assign _0186_ = _0184_ ^ _1976_;
  assign _0187_ = _1642_ ^ _1517_;
  assign _0188_ = _0187_ ^ _1493_;
  assign _0189_ = _0188_ ^ _1491_;
  assign _0190_ = ~_0189_;
  assign _0191_ = ~_1782_;
  assign _0192_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1919_ : _1966_;
  assign _0193_ = _1975_ & ~(_0192_);
  assign _0194_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1810_ : _1863_;
  assign _0195_ = _1150_ & ~(_0194_);
  assign _0196_ = _0195_ | _0193_;
  assign _0197_ = _1102_ ? _0191_ : _0196_;
  assign _0198_ = _0197_ ? _1998_ : _0190_;
  assign _0199_ = _0186_ & ~(_0198_);
  assign _0200_ = _0185_ & ~(_0199_);
  assign _0201_ = _0179_ & ~(_0200_);
  assign _0202_ = _0177_ & ~(_0201_);
  assign _0203_ = _0162_ & ~(_0202_);
  assign _0204_ = _0203_ | _0159_;
  assign _0205_ = _1150_ ? _1782_ : _0194_;
  assign _0206_ = _1102_ ? _1782_ : _0205_;
  assign _0207_ = ~(_0206_ ^ _1783_);
  assign _0208_ = ~(_0207_ ^ _1884_);
  assign _0209_ = _1150_ ? _1782_ : _0181_;
  assign _0210_ = _1102_ ? _1782_ : _0209_;
  assign _0211_ = ~(_0210_ ^ _1783_);
  assign _0212_ = _0211_ ^ _1868_;
  assign _0213_ = _0212_ | ~(_0208_);
  assign _0214_ = _1150_ ? _1782_ : _0171_;
  assign _0215_ = _1102_ ? _1782_ : _0214_;
  assign _0216_ = ~(_0215_ ^ _1783_);
  assign _0217_ = _0216_ ^ _1856_;
  assign _0218_ = _1150_ ? _1782_ : _0164_;
  assign _0219_ = _1102_ ? _1782_ : _0218_;
  assign _0220_ = _0219_ ^ _1783_;
  assign _0221_ = ~(_0220_ ^ _1845_);
  assign _0222_ = _0221_ | _0217_;
  assign _0223_ = _0222_ | _0213_;
  assign _0224_ = _0223_ | ~(_0204_);
  assign _0225_ = _1868_ & ~(_0211_);
  assign _0226_ = _1884_ & ~(_0207_);
  assign _0227_ = _0226_ & ~(_0212_);
  assign _0228_ = _0227_ | _0225_;
  assign _0229_ = _0228_ & ~(_0222_);
  assign _0230_ = _0220_ & _1845_;
  assign _0231_ = _1856_ & ~(_0216_);
  assign _0232_ = _0231_ & ~(_0221_);
  assign _0233_ = _0232_ | _0230_;
  assign _0234_ = _0233_ | _0229_;
  assign _0235_ = _0224_ & ~(_0234_);
  assign _0236_ = _0128_ & ~(_0235_);
  assign _0237_ = _0236_ | _0126_;
  assign _0238_ = _2127_ ^ _1803_;
  assign _0239_ = ~_0238_;
  assign _0240_ = _0237_ & ~(_0239_);
  assign _0241_ = _0240_ | _2128_;
  assign _0242_ = _1783_ ^ _1782_;
  assign _0243_ = _0242_ ^ _1793_;
  assign _0244_ = _0243_ ^ _0241_;
  assign _0245_ = _0244_ & ~(_2123_);
  assign _0246_ = _0238_ ^ _0237_;
  assign _0247_ = _0246_ & ~(_2123_);
  assign _0248_ = _0244_ ^ _2123_;
  assign _0249_ = _0247_ & ~(_0248_);
  assign _0250_ = ~(_0249_ | _0245_);
  assign _0251_ = _0246_ ^ _2123_;
  assign _0252_ = ~(_0251_ | _0248_);
  assign _0253_ = ~_2122_;
  assign _0254_ = _1991_ & ~(_1988_);
  assign _0255_ = _1878_ & ~(_0254_);
  assign _0256_ = _1880_ & ~(_0255_);
  assign _0257_ = _1824_ & ~(_0256_);
  assign _0258_ = _1825_ & ~(_0257_);
  assign _0259_ = ~(_0258_ | _1799_);
  assign _0260_ = _1800_ ^ _0259_;
  assign _0261_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1996_ : _0260_;
  assign _0262_ = _1150_ ? _1996_ : _0261_;
  assign _0263_ = _1102_ ? _1996_ : _0262_;
  assign _0264_ = ~(_0263_ ^ _0253_);
  assign _0265_ = _0235_ | _0127_;
  assign _0266_ = _0265_ & ~(_0123_);
  assign _0267_ = _0266_ ^ _0124_;
  assign _0268_ = _0264_ | ~(_0267_);
  assign _0269_ = ~(_0257_ ^ _1825_);
  assign _0270_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1996_ : _0269_;
  assign _0271_ = _1150_ ? _1996_ : _0270_;
  assign _0272_ = _1102_ ? _1996_ : _0271_;
  assign _0273_ = _0272_ ^ _0253_;
  assign _0274_ = _0235_ ^ _0127_;
  assign _0275_ = _0274_ & _0273_;
  assign _0276_ = _0267_ ^ _0264_;
  assign _0277_ = _0275_ & ~(_0276_);
  assign _0278_ = _0268_ & ~(_0277_);
  assign _0279_ = _0252_ & ~(_0278_);
  assign _0280_ = _0250_ & ~(_0279_);
  assign _0281_ = ~(_1988_ | _1990_);
  assign _0282_ = _1876_ & ~(_0281_);
  assign _0283_ = ~(_0282_ | _1854_);
  assign _0284_ = _1851_ & ~(_0283_);
  assign _0285_ = ~(_0284_ ^ _1840_);
  assign _0286_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0260_ : _0285_;
  assign _0287_ = _1150_ ? _1996_ : _0286_;
  assign _0288_ = _1102_ ? _1996_ : _0287_;
  assign _0289_ = _0253_ ^ _0288_;
  assign _0290_ = _0208_ & _0204_;
  assign _0291_ = ~(_0290_ | _0226_);
  assign _0292_ = _0212_ ^ _0291_;
  assign _0293_ = ~(_0292_ & _0289_);
  assign _0294_ = ~(_0292_ ^ _0289_);
  assign _0295_ = ~_0269_;
  assign _0296_ = _0282_ ^ _1854_;
  assign _0297_ = ~_0296_;
  assign _0298_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0295_ : _0297_;
  assign _0299_ = _1150_ ? _1997_ : _0298_;
  assign _0300_ = _1102_ ? _1997_ : _0299_;
  assign _0301_ = _0300_ ^ _0253_;
  assign _0302_ = _0208_ ^ _0204_;
  assign _0303_ = _0301_ | ~(_0302_);
  assign _0304_ = ~(_0303_ | _0294_);
  assign _0305_ = _0304_ | ~(_0293_);
  assign _0306_ = _0255_ ^ _1879_;
  assign _0307_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1996_ : _0306_;
  assign _0308_ = _1150_ ? _1996_ : _0307_;
  assign _0309_ = _1102_ ? _1996_ : _0308_;
  assign _0310_ = _0309_ ^ _0253_;
  assign _0311_ = _0204_ & ~(_0213_);
  assign _0312_ = _0311_ | _0228_;
  assign _0313_ = ~(_0217_ ^ _0312_);
  assign _0314_ = _0313_ ^ _0310_;
  assign _0315_ = _0255_ | _1879_;
  assign _0316_ = _0315_ & ~(_1821_);
  assign _0317_ = _0316_ ^ _1822_;
  assign _0318_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1996_ : _0317_;
  assign _0319_ = _1150_ ? _1996_ : _0318_;
  assign _0320_ = _1102_ ? _1996_ : _0319_;
  assign _0321_ = _0320_ ^ _0253_;
  assign _0322_ = _0312_ & ~(_0217_);
  assign _0323_ = ~(_0322_ | _0231_);
  assign _0324_ = _0323_ ^ _0221_;
  assign _0325_ = ~(_0324_ ^ _0321_);
  assign _0326_ = _0325_ | ~(_0314_);
  assign _0327_ = _0326_ | ~(_0305_);
  assign _0328_ = ~_0313_;
  assign _0329_ = _0310_ & ~(_0328_);
  assign _0330_ = _0329_ & ~(_0325_);
  assign _0331_ = _0324_ & _0321_;
  assign _0332_ = _0331_ | _0330_;
  assign _0333_ = _0327_ & ~(_0332_);
  assign _0334_ = ~(_0274_ ^ _0273_);
  assign _0335_ = ~(_0334_ | _0276_);
  assign _0336_ = ~(_0335_ & _0252_);
  assign _0337_ = ~(_0336_ | _0333_);
  assign _0338_ = _0280_ & ~(_0337_);
  assign _0339_ = ~(_1988_ | _1989_);
  assign _0340_ = _1874_ & ~(_0339_);
  assign _0341_ = ~(_0340_ ^ _1865_);
  assign _0342_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0317_ : _0341_;
  assign _0343_ = _1150_ ? _1996_ : _0342_;
  assign _0344_ = _1102_ ? _1996_ : _0343_;
  assign _0345_ = _0344_ ^ _0253_;
  assign _0346_ = ~(_0202_ | _0161_);
  assign _0347_ = _0157_ & ~(_0346_);
  assign _0348_ = ~(_0347_ | _0143_);
  assign _0349_ = _0140_ & ~(_0348_);
  assign _0350_ = _0349_ ^ _0134_;
  assign _0351_ = _0350_ & _0345_;
  assign _0352_ = _0350_ ^ _0345_;
  assign _0353_ = _1988_ ^ _1989_;
  assign _0354_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0306_ : _0353_;
  assign _0355_ = _1150_ ? _1996_ : _0354_;
  assign _0356_ = _1102_ ? _1996_ : _0355_;
  assign _0357_ = ~(_0356_ ^ _0253_);
  assign _0358_ = _0347_ ^ _0143_;
  assign _0359_ = _0357_ | ~(_0358_);
  assign _0360_ = _0352_ & ~(_0359_);
  assign _0361_ = _0360_ | _0351_;
  assign _0362_ = ~(_0358_ ^ _0357_);
  assign _0363_ = ~_0362_;
  assign _0364_ = _0352_ & ~(_0363_);
  assign _0365_ = ~(_1986_ | _1936_);
  assign _0366_ = _1932_ & ~(_0365_);
  assign _0367_ = ~(_0366_ | _1910_);
  assign _0368_ = _1907_ & ~(_0367_);
  assign _0369_ = _0368_ ^ _1895_;
  assign _0370_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0285_ : _0369_;
  assign _0371_ = _1150_ ? _0261_ : _0370_;
  assign _0372_ = _1102_ ? _1996_ : _0371_;
  assign _0373_ = ~(_0372_ ^ _0253_);
  assign _0374_ = _0202_ | _0160_;
  assign _0375_ = _0374_ & ~(_0154_);
  assign _0376_ = _0375_ ^ _0155_;
  assign _0377_ = _0373_ | ~(_0376_);
  assign _0378_ = ~(_0376_ ^ _0373_);
  assign _0379_ = _0366_ ^ _1910_;
  assign _0380_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0296_ : _0379_;
  assign _0381_ = _1150_ ? _0270_ : _0380_;
  assign _0382_ = _1102_ ? _1996_ : _0381_;
  assign _0383_ = ~(_0382_ ^ _0253_);
  assign _0384_ = _0202_ ^ _0160_;
  assign _0385_ = _0383_ | ~(_0384_);
  assign _0386_ = _0378_ & ~(_0385_);
  assign _0387_ = _0377_ & ~(_0386_);
  assign _0388_ = _0364_ & ~(_0387_);
  assign _0389_ = _0388_ | _0361_;
  assign _0390_ = _0384_ ^ _0383_;
  assign _0391_ = _0390_ | ~(_0378_);
  assign _0392_ = _0364_ & ~(_0391_);
  assign _0393_ = ~(_1986_ | _1935_);
  assign _0394_ = _0393_ | ~(_1930_);
  assign _0395_ = _0394_ ^ _1921_;
  assign _0396_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0341_ : _0395_;
  assign _0397_ = _1150_ ? _0318_ : _0396_;
  assign _0398_ = _1102_ ? _1996_ : _0397_;
  assign _0399_ = ~(_0398_ ^ _0253_);
  assign _0400_ = ~(_0200_ | _0178_);
  assign _0401_ = _0400_ | ~(_0175_);
  assign _0402_ = _0401_ ^ _0169_;
  assign _0403_ = _0399_ | ~(_0402_);
  assign _0404_ = ~(_0402_ ^ _0399_);
  assign _0405_ = _1986_ ^ _1935_;
  assign _0406_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0353_ : _0405_;
  assign _0407_ = _1150_ ? _0307_ : _0406_;
  assign _0408_ = _1102_ ? _1996_ : _0407_;
  assign _0409_ = ~(_0408_ ^ _0253_);
  assign _0410_ = _0200_ ^ _0178_;
  assign _0411_ = _0409_ | ~(_0410_);
  assign _0412_ = _0404_ & ~(_0411_);
  assign _0413_ = _0403_ & ~(_0412_);
  assign _0414_ = ~(_0410_ ^ _0409_);
  assign _0415_ = ~_0414_;
  assign _0416_ = _0404_ & ~(_0415_);
  assign _0417_ = ~(_0198_ ^ _0186_);
  assign _0418_ = ~(_1984_ | _1959_);
  assign _0419_ = _1956_ & ~(_0418_);
  assign _0420_ = ~(_0419_ ^ _1947_);
  assign _0421_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0369_ : _0420_;
  assign _0422_ = _1150_ ? _0286_ : _0421_;
  assign _0423_ = _1102_ ? _1996_ : _0422_;
  assign _0424_ = _0423_ ^ _0253_;
  assign _0425_ = ~(_0424_ & _0417_);
  assign _0426_ = _0424_ ^ _0417_;
  assign _0427_ = _0197_ ^ _1783_;
  assign _0428_ = _0427_ ^ _0190_;
  assign _0429_ = _0428_ ^ _1783_;
  assign _0430_ = ~_0429_;
  assign _0431_ = _1984_ ^ _1959_;
  assign _0432_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0379_ : _0431_;
  assign _0433_ = ~_0432_;
  assign _0434_ = _1150_ ? _0298_ : _0433_;
  assign _0435_ = _1102_ ? _1997_ : _0434_;
  assign _0436_ = _0435_ ? _2122_ : _0430_;
  assign _0437_ = _0426_ & ~(_0436_);
  assign _0438_ = _0425_ & ~(_0437_);
  assign _0439_ = _0416_ & ~(_0438_);
  assign _0440_ = _0413_ & ~(_0439_);
  assign _0441_ = _0392_ & ~(_0440_);
  assign _0442_ = _0441_ | _0389_;
  assign _0443_ = ~(_0302_ ^ _0301_);
  assign _0444_ = ~_0443_;
  assign _0445_ = _0444_ | _0294_;
  assign _0446_ = _0326_ | _0445_;
  assign _0447_ = _0446_ | _0336_;
  assign _0448_ = _0442_ & ~(_0447_);
  assign _0449_ = _0338_ & ~(_0448_);
  assign _0450_ = _0242_ & _1793_;
  assign _0451_ = _0243_ & _2128_;
  assign _0452_ = ~(_0451_ | _0450_);
  assign _0453_ = ~(_0243_ & _0238_);
  assign _0454_ = _0126_ & ~(_0453_);
  assign _0455_ = _0452_ & ~(_0454_);
  assign _0456_ = _0453_ | ~(_0128_);
  assign _0457_ = _0234_ & ~(_0456_);
  assign _0458_ = _0455_ & ~(_0457_);
  assign _0459_ = _0456_ | _0223_;
  assign _0460_ = _0204_ & ~(_0459_);
  assign _0461_ = _0458_ & ~(_0460_);
  assign _0462_ = ~(_0242_ ^ _1655_);
  assign _0463_ = _0462_ ^ _0461_;
  assign _0464_ = _0463_ ^ _2123_;
  assign _0465_ = _0464_ ^ _0449_;
  assign _0466_ = _0442_ & ~(_0445_);
  assign _0467_ = _0466_ | _0305_;
  assign _0468_ = _0314_ ^ _0467_;
  assign _0469_ = ~(_0440_ | _0391_);
  assign _0470_ = _0387_ & ~(_0469_);
  assign _0471_ = _0470_ ^ _0363_;
  assign _0472_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0468_ : _0471_;
  assign _0473_ = _0442_ & ~(_0446_);
  assign _0474_ = _0333_ & ~(_0473_);
  assign _0475_ = _0335_ & ~(_0474_);
  assign _0476_ = _0278_ & ~(_0475_);
  assign _0477_ = _0476_ ^ _0251_;
  assign _0478_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0465_ : _0477_;
  assign _0479_ = _1150_ ? _0478_ : _0472_;
  assign _0480_ = _1102_ ? _0465_ : _0479_;
  assign _0481_ = _2060_ & ~(_2117_);
  assign _0482_ = _2055_ & ~(_0481_);
  assign _0483_ = _2028_ & ~(_0482_);
  assign _0484_ = _2024_ & ~(_0483_);
  assign _0485_ = _2012_ & ~(_0484_);
  assign _0486_ = _2009_ & ~(_0485_);
  assign _0487_ = _0486_ ^ _2007_;
  assign _0488_ = _0487_ & ~(_2122_);
  assign _0489_ = _0487_ ^ _2122_;
  assign _0490_ = ~(_0484_ ^ _2012_);
  assign _0491_ = _2122_ | ~(_0490_);
  assign _0492_ = ~(_0491_ | _0489_);
  assign _0493_ = ~(_0492_ | _0488_);
  assign _0494_ = ~(_0490_ ^ _2122_);
  assign _0495_ = _0494_ & ~(_0489_);
  assign _0496_ = _0482_ | _2027_;
  assign _0497_ = _0496_ & ~(_2021_);
  assign _0498_ = ~(_0497_ ^ _2022_);
  assign _0499_ = _2122_ | ~(_0498_);
  assign _0500_ = ~(_0498_ ^ _2122_);
  assign _0501_ = ~(_0482_ ^ _2027_);
  assign _0502_ = _2122_ ^ _1660_;
  assign _0503_ = _0501_ | ~(_0502_);
  assign _0504_ = _0500_ & ~(_0503_);
  assign _0505_ = _0499_ & ~(_0504_);
  assign _0506_ = _0495_ & ~(_0505_);
  assign _0507_ = _0493_ & ~(_0506_);
  assign _0508_ = _0502_ ^ _0501_;
  assign _0509_ = _0500_ & ~(_0508_);
  assign _0510_ = _0509_ & _0495_;
  assign _0511_ = ~(_2117_ | _2059_);
  assign _0512_ = _2053_ & ~(_0511_);
  assign _0513_ = _0512_ | _2043_;
  assign _0514_ = _0513_ & ~(_2039_);
  assign _0515_ = ~(_0514_ ^ _2040_);
  assign _0516_ = ~(_0515_ & _0502_);
  assign _0517_ = _0512_ ^ _2043_;
  assign _0518_ = _0517_ & _0502_;
  assign _0519_ = _0515_ ^ _0502_;
  assign _0520_ = _0519_ & _0518_;
  assign _0521_ = _0516_ & ~(_0520_);
  assign _0522_ = ~(_0517_ ^ _0502_);
  assign _0523_ = _0519_ & ~(_0522_);
  assign _0524_ = _2117_ | _2058_;
  assign _0525_ = _0524_ & ~(_2050_);
  assign _0526_ = _0525_ ^ _2051_;
  assign _0527_ = ~(_2122_ ^ _1688_);
  assign _0528_ = _0526_ | ~(_0527_);
  assign _0529_ = _2117_ ^ _2058_;
  assign _0530_ = _0529_ & _0502_;
  assign _0531_ = ~(_0527_ ^ _0526_);
  assign _0532_ = _0531_ & _0530_;
  assign _0533_ = _0528_ & ~(_0532_);
  assign _0534_ = _0523_ & ~(_0533_);
  assign _0535_ = _0521_ & ~(_0534_);
  assign _0536_ = _0510_ & ~(_0535_);
  assign _0537_ = _0507_ & ~(_0536_);
  assign _0538_ = ~(_0529_ ^ _0502_);
  assign _0539_ = _0538_ | ~(_0531_);
  assign _0540_ = _0523_ & ~(_0539_);
  assign _0541_ = _0540_ & _0510_;
  assign _0542_ = _2090_ & ~(_2115_);
  assign _0543_ = _2086_ & ~(_0542_);
  assign _0544_ = _2076_ & ~(_0543_);
  assign _0545_ = _2073_ & ~(_0544_);
  assign _0546_ = _0545_ ^ _2068_;
  assign _0547_ = _2122_ | ~(_0546_);
  assign _0548_ = _0546_ ^ _2122_;
  assign _0549_ = ~(_0543_ ^ _2076_);
  assign _0550_ = ~(_0549_ & _0502_);
  assign _0551_ = ~(_0550_ | _0548_);
  assign _0552_ = _0547_ & ~(_0551_);
  assign _0553_ = _0549_ ^ _0502_;
  assign _0554_ = _0553_ & ~(_0548_);
  assign _0555_ = ~(_2115_ | _2089_);
  assign _0556_ = _2084_ & ~(_0555_);
  assign _0557_ = ~(_0556_ ^ _2082_);
  assign _0558_ = _1715_ & _1697_;
  assign _0559_ = ~(_0558_ ^ _2122_);
  assign _0560_ = ~(_0559_ & _0557_);
  assign _0561_ = _2115_ ^ _2089_;
  assign _0562_ = _0561_ & _0502_;
  assign _0563_ = _0559_ ^ _0557_;
  assign _0564_ = _0563_ & _0562_;
  assign _0565_ = _0560_ & ~(_0564_);
  assign _0566_ = _0554_ & ~(_0565_);
  assign _0567_ = _0552_ & ~(_0566_);
  assign _0568_ = ~(_0561_ ^ _0502_);
  assign _0569_ = _0563_ & ~(_0568_);
  assign _0570_ = _0569_ & _0554_;
  assign _0571_ = _2104_ & ~(_2113_);
  assign _0572_ = _2101_ & ~(_0571_);
  assign _0573_ = _0572_ ^ _2097_;
  assign _0574_ = ~(_0573_ & _0502_);
  assign _0575_ = ~(_0573_ ^ _0502_);
  assign _0576_ = ~(_2113_ ^ _2104_);
  assign _0577_ = _2122_ | ~(_0576_);
  assign _0578_ = ~(_0577_ | _0575_);
  assign _0579_ = _0574_ & ~(_0578_);
  assign _0580_ = ~(_0576_ ^ _2122_);
  assign _0581_ = _0580_ & ~(_0575_);
  assign _0582_ = ~(_2111_ ^ _2108_);
  assign _0583_ = _1660_ & _0001_;
  assign _0584_ = _0583_ ^ _2122_;
  assign _0585_ = ~(_0584_ & _0582_);
  assign _0586_ = ~(_0584_ ^ _0582_);
  assign _0587_ = _2110_ ^ _2018_;
  assign _0588_ = _0587_ ^ _1783_;
  assign _0589_ = _1660_ ? _0253_ : _0588_;
  assign _0590_ = _0589_ & ~(_0586_);
  assign _0591_ = _0585_ & ~(_0590_);
  assign _0592_ = _0581_ & ~(_0591_);
  assign _0593_ = _0579_ & ~(_0592_);
  assign _0594_ = _0570_ & ~(_0593_);
  assign _0595_ = _0567_ & ~(_0594_);
  assign _0596_ = _0541_ & ~(_0595_);
  assign _0597_ = _0537_ & ~(_0596_);
  assign _0598_ = ~(_2122_ ^ _2121_);
  assign _0599_ = ~(_0598_ ^ _0597_);
  assign _0600_ = ~_0599_;
  assign _0601_ = _0463_ ^ _2122_;
  assign _0602_ = _0601_ & _0260_;
  assign _0603_ = ~(_0601_ ^ _0260_);
  assign _0604_ = ~(_0601_ & _0269_);
  assign _0605_ = ~(_0604_ | _0603_);
  assign _0606_ = ~(_0605_ | _0602_);
  assign _0607_ = _0601_ ^ _0269_;
  assign _0608_ = _0607_ & ~(_0603_);
  assign _0609_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0463_ : _0244_;
  assign _0610_ = _1150_ ? _0463_ : _0609_;
  assign _0611_ = _1102_ ? _0463_ : _0610_;
  assign _0612_ = ~(_0611_ ^ _0253_);
  assign _0613_ = ~(_0612_ & _0317_);
  assign _0614_ = _0612_ ^ _0317_;
  assign _0615_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0463_ : _0246_;
  assign _0616_ = _1150_ ? _0463_ : _0615_;
  assign _0617_ = _1102_ ? _0463_ : _0616_;
  assign _0618_ = ~(_0617_ ^ _0253_);
  assign _0619_ = ~(_0618_ & _0306_);
  assign _0620_ = _0614_ & ~(_0619_);
  assign _0621_ = _0613_ & ~(_0620_);
  assign _0622_ = _0608_ & ~(_0621_);
  assign _0623_ = _0606_ & ~(_0622_);
  assign _0624_ = ~(_0618_ ^ _0306_);
  assign _0625_ = _0614_ & ~(_0624_);
  assign _0626_ = _0625_ & _0608_;
  assign _0627_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0463_ : _0267_;
  assign _0628_ = _1150_ ? _0463_ : _0627_;
  assign _0629_ = _1102_ ? _0463_ : _0628_;
  assign _0630_ = ~(_0629_ ^ _0253_);
  assign _0631_ = ~(_0630_ & _0285_);
  assign _0632_ = _0630_ ^ _0285_;
  assign _0633_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0463_ : _0274_;
  assign _0634_ = _1150_ ? _0463_ : _0633_;
  assign _0635_ = _1102_ ? _0463_ : _0634_;
  assign _0636_ = ~(_0635_ ^ _0253_);
  assign _0637_ = ~(_0636_ & _0296_);
  assign _0638_ = _0632_ & ~(_0637_);
  assign _0639_ = _0631_ & ~(_0638_);
  assign _0640_ = _0636_ ^ _0297_;
  assign _0641_ = _0632_ & ~(_0640_);
  assign _0642_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0244_ : _0324_;
  assign _0643_ = _1150_ ? _0463_ : _0642_;
  assign _0644_ = _1102_ ? _0463_ : _0643_;
  assign _0645_ = ~(_0644_ ^ _0253_);
  assign _0646_ = ~(_0645_ & _0341_);
  assign _0647_ = _0645_ ^ _0341_;
  assign _0648_ = ~_0463_;
  assign _0649_ = ~_0246_;
  assign _0650_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0649_ : _0328_;
  assign _0651_ = _1150_ ? _0648_ : _0650_;
  assign _0652_ = _1102_ ? _0648_ : _0651_;
  assign _0653_ = _0652_ ^ _0253_;
  assign _0654_ = ~(_0653_ & _0353_);
  assign _0655_ = _0647_ & ~(_0654_);
  assign _0656_ = _0646_ & ~(_0655_);
  assign _0657_ = _0641_ & ~(_0656_);
  assign _0658_ = _0639_ & ~(_0657_);
  assign _0659_ = _0626_ & ~(_0658_);
  assign _0660_ = _0659_ | ~(_0623_);
  assign _0661_ = ~(_0653_ ^ _0353_);
  assign _0662_ = _0661_ | ~(_0647_);
  assign _0663_ = _0641_ & ~(_0662_);
  assign _0664_ = _0663_ & _0626_;
  assign _0665_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0267_ : _0292_;
  assign _0666_ = _1150_ ? _0463_ : _0665_;
  assign _0667_ = _1102_ ? _0463_ : _0666_;
  assign _0668_ = ~(_0667_ ^ _0253_);
  assign _0669_ = ~(_0668_ & _0369_);
  assign _0670_ = _0668_ ^ _0369_;
  assign _0671_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0274_ : _0302_;
  assign _0672_ = _1150_ ? _0463_ : _0671_;
  assign _0673_ = _1102_ ? _0463_ : _0672_;
  assign _0674_ = ~(_0673_ ^ _0253_);
  assign _0675_ = ~(_0674_ & _0379_);
  assign _0676_ = _0670_ & ~(_0675_);
  assign _0677_ = _0669_ & ~(_0676_);
  assign _0678_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0324_ : _0350_;
  assign _0679_ = _1150_ ? _0609_ : _0678_;
  assign _0680_ = _1102_ ? _0463_ : _0679_;
  assign _0681_ = _0680_ ^ _0253_;
  assign _0682_ = ~(_0681_ ^ _0395_);
  assign _0683_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0313_ : _0358_;
  assign _0684_ = _1150_ ? _0615_ : _0683_;
  assign _0685_ = _1102_ ? _0463_ : _0684_;
  assign _0686_ = ~(_0685_ ^ _0253_);
  assign _0687_ = ~(_0686_ & _0405_);
  assign _0688_ = _0682_ & ~(_0687_);
  assign _0689_ = _0395_ & ~(_0681_);
  assign _0690_ = _0689_ | _0688_;
  assign _0691_ = ~(_0674_ ^ _0379_);
  assign _0692_ = _0670_ & ~(_0691_);
  assign _0693_ = _0692_ & _0690_;
  assign _0694_ = _0677_ & ~(_0693_);
  assign _0695_ = ~(_0686_ ^ _0405_);
  assign _0696_ = _0695_ | ~(_0682_);
  assign _0697_ = _0692_ & ~(_0696_);
  assign _0698_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0292_ : _0376_;
  assign _0699_ = _1150_ ? _0627_ : _0698_;
  assign _0700_ = _1102_ ? _0463_ : _0699_;
  assign _0701_ = ~(_0700_ ^ _0253_);
  assign _0702_ = ~(_0701_ & _0420_);
  assign _0703_ = _0701_ ^ _0420_;
  assign _0704_ = ~_0431_;
  assign _0705_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0302_ : _0384_;
  assign _0706_ = _1150_ ? _0633_ : _0705_;
  assign _0707_ = _1102_ ? _0463_ : _0706_;
  assign _0708_ = ~(_0707_ ^ _0253_);
  assign _0709_ = _0704_ | ~(_0708_);
  assign _0710_ = _0703_ & ~(_0709_);
  assign _0711_ = _0702_ & ~(_0710_);
  assign _0712_ = ~(_0708_ ^ _0704_);
  assign _0713_ = ~_0712_;
  assign _0714_ = _0703_ & ~(_0713_);
  assign _0715_ = ~(_1982_ ^ _1969_);
  assign _0716_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0350_ : _0402_;
  assign _0717_ = _1150_ ? _0642_ : _0716_;
  assign _0718_ = _1102_ ? _0463_ : _0717_;
  assign _0719_ = ~(_0718_ ^ _0253_);
  assign _0720_ = ~(_0719_ & _0715_);
  assign _0721_ = _0719_ ^ _0715_;
  assign _0722_ = _1981_ ^ _1998_;
  assign _0723_ = _0722_ ^ _1973_;
  assign _0724_ = _0723_ ^ _1998_;
  assign _0725_ = ~_0724_;
  assign _0726_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0358_ : _0410_;
  assign _0727_ = ~_0726_;
  assign _0728_ = _1150_ ? _0650_ : _0727_;
  assign _0729_ = _1102_ ? _0648_ : _0728_;
  assign _0730_ = _0729_ ? _0253_ : _0725_;
  assign _0731_ = _0721_ & ~(_0730_);
  assign _0732_ = _0720_ & ~(_0731_);
  assign _0733_ = _0714_ & ~(_0732_);
  assign _0734_ = _0711_ & ~(_0733_);
  assign _0735_ = _0697_ & ~(_0734_);
  assign _0736_ = _0694_ & ~(_0735_);
  assign _0737_ = _0664_ & ~(_0736_);
  assign _0738_ = _0737_ | _0660_;
  assign _0739_ = _0601_ ^ _1996_;
  assign _0740_ = _0739_ ^ _0738_;
  assign _0741_ = io_in[10] ? _0740_ : _0600_;
  assign _0742_ = ~(_0741_ ^ _0480_);
  assign _0743_ = _0712_ & ~(_0732_);
  assign _0744_ = _0709_ & ~(_0743_);
  assign _0745_ = ~(_0744_ ^ _0703_);
  assign _0746_ = ~_0745_;
  assign _0747_ = _0742_ & ~(_0746_);
  assign _0748_ = _0745_ ^ _0742_;
  assign _0749_ = _0442_ & ~(_0444_);
  assign _0750_ = _0303_ & ~(_0749_);
  assign _0751_ = _0750_ ^ _0294_;
  assign _0752_ = ~(_0440_ | _0390_);
  assign _0753_ = _0385_ & ~(_0752_);
  assign _0754_ = ~(_0753_ ^ _0378_);
  assign _0755_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0751_ : _0754_;
  assign _0756_ = _0474_ | _0334_;
  assign _0757_ = _0756_ & ~(_0275_);
  assign _0758_ = _0757_ ^ _0276_;
  assign _0759_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0465_ : _0758_;
  assign _0760_ = _1150_ ? _0759_ : _0755_;
  assign _0761_ = _1102_ ? _0465_ : _0760_;
  assign _0762_ = _0761_ ^ _0741_;
  assign _0763_ = _0732_ ^ _0713_;
  assign _0764_ = _0762_ | ~(_0763_);
  assign _0765_ = _0748_ & ~(_0764_);
  assign _0766_ = _0765_ | _0747_;
  assign _0767_ = _0763_ ^ _0762_;
  assign _0768_ = _0748_ & ~(_0767_);
  assign _0769_ = _0443_ ^ _0442_;
  assign _0770_ = _0440_ ^ _0390_;
  assign _0771_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0769_ : _0770_;
  assign _0772_ = _0474_ ^ _0334_;
  assign _0773_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0465_ : _0772_;
  assign _0774_ = _1150_ ? _0773_ : _0771_;
  assign _0775_ = _1102_ ? _0465_ : _0774_;
  assign _0776_ = _0775_ ^ _0741_;
  assign _0777_ = ~(_0730_ ^ _0721_);
  assign _0778_ = _0776_ | ~(_0777_);
  assign _0779_ = ~(_0777_ ^ _0776_);
  assign _0780_ = _0729_ ^ _2122_;
  assign _0781_ = _0780_ ^ _0725_;
  assign _0782_ = _0781_ ^ _2122_;
  assign _0783_ = ~_0782_;
  assign _0784_ = ~_0465_;
  assign _0785_ = _0362_ & ~(_0470_);
  assign _0786_ = _0359_ & ~(_0785_);
  assign _0787_ = ~(_0786_ ^ _0352_);
  assign _0788_ = ~_0787_;
  assign _0789_ = _0414_ & ~(_0438_);
  assign _0790_ = _0411_ & ~(_0789_);
  assign _0791_ = ~(_0790_ ^ _0404_);
  assign _0792_ = ~_0791_;
  assign _0793_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0788_ : _0792_;
  assign _0794_ = _0476_ | _0251_;
  assign _0795_ = _0794_ & ~(_0247_);
  assign _0796_ = ~(_0795_ ^ _0248_);
  assign _0797_ = ~(_0314_ & _0467_);
  assign _0798_ = _0797_ & ~(_0329_);
  assign _0799_ = _0798_ ^ _0325_;
  assign _0800_ = ~_0799_;
  assign _0801_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0796_ : _0800_;
  assign _0802_ = _1150_ ? _0801_ : _0793_;
  assign _0803_ = _1102_ ? _0784_ : _0802_;
  assign _0804_ = _0803_ ? _0741_ : _0783_;
  assign _0805_ = _0779_ & ~(_0804_);
  assign _0806_ = _0778_ & ~(_0805_);
  assign _0807_ = _0768_ & ~(_0806_);
  assign _0808_ = _0807_ | _0766_;
  assign _0809_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0799_ : _0787_;
  assign _0810_ = _0795_ ^ _0248_;
  assign _0811_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0465_ : _0810_;
  assign _0812_ = _1150_ ? _0811_ : _0809_;
  assign _0813_ = _1102_ ? _0465_ : _0812_;
  assign _0814_ = _0813_ ^ _0741_;
  assign _0815_ = _0734_ ^ _0695_;
  assign _0816_ = _0815_ ^ _0814_;
  assign _0817_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0772_ : _0769_;
  assign _0818_ = _1150_ ? _0465_ : _0817_;
  assign _0819_ = _1102_ ? _0465_ : _0818_;
  assign _0820_ = ~(_0819_ ^ _0741_);
  assign _0821_ = ~(_0734_ | _0695_);
  assign _0822_ = _0821_ | ~(_0687_);
  assign _0823_ = _0822_ ^ _0682_;
  assign _0824_ = ~(_0823_ ^ _0820_);
  assign _0825_ = _0824_ | _0816_;
  assign _0826_ = _0808_ & ~(_0825_);
  assign _0827_ = _0815_ & ~(_0814_);
  assign _0828_ = _0827_ & ~(_0824_);
  assign _0829_ = _0823_ & _0820_;
  assign _0830_ = _0829_ | _0828_;
  assign _0831_ = _0830_ | _0826_;
  assign _0832_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0758_ : _0751_;
  assign _0833_ = _1150_ ? _0465_ : _0832_;
  assign _0834_ = _1102_ ? _0465_ : _0833_;
  assign _0835_ = _0834_ ^ _0741_;
  assign _0836_ = _0734_ | _0696_;
  assign _0837_ = _0836_ & ~(_0690_);
  assign _0838_ = _0837_ ^ _0691_;
  assign _0839_ = _0838_ ^ _0835_;
  assign _0840_ = _0839_ ^ _0831_;
  assign _0841_ = ~_0840_;
  assign _0842_ = _0593_ | _0568_;
  assign _0843_ = _0842_ & ~(_0562_);
  assign _0844_ = ~(_0843_ ^ _0563_);
  assign _0845_ = _0741_ ^ _2017_;
  assign _0846_ = ~(_0845_ & _0844_);
  assign _0847_ = _0593_ ^ _0568_;
  assign _0848_ = _0741_ ^ _0558_;
  assign _0849_ = _0848_ & _0847_;
  assign _0850_ = _0845_ ^ _0844_;
  assign _0851_ = ~(_0850_ & _0849_);
  assign _0852_ = ~(_0851_ & _0846_);
  assign _0853_ = _0848_ ^ _0847_;
  assign _0854_ = _0853_ & _0850_;
  assign _0855_ = _0580_ & ~(_0591_);
  assign _0856_ = _0577_ & ~(_0855_);
  assign _0857_ = _0856_ ^ _0575_;
  assign _0858_ = ~(_0857_ & _0845_);
  assign _0859_ = _0857_ ^ _0845_;
  assign _0860_ = ~(_0591_ ^ _0580_);
  assign _0861_ = ~(_0860_ & _0741_);
  assign _0862_ = _0859_ & ~(_0861_);
  assign _0863_ = _0858_ & ~(_0862_);
  assign _0864_ = _0860_ ^ _0741_;
  assign _0865_ = _0864_ & _0859_;
  assign _0866_ = ~(_0589_ ^ _0586_);
  assign _0867_ = ~(_0866_ & _0845_);
  assign _0868_ = ~(_0866_ ^ _0845_);
  assign _0869_ = _0588_ ^ _0502_;
  assign _0870_ = _0869_ ^ _0253_;
  assign _0871_ = _0583_ ? _0741_ : _0870_;
  assign _0872_ = _0871_ & ~(_0868_);
  assign _0873_ = _0867_ & ~(_0872_);
  assign _0874_ = _0865_ & ~(_0873_);
  assign _0875_ = _0863_ & ~(_0874_);
  assign _0876_ = _0854_ & ~(_0875_);
  assign _0877_ = _0876_ | _0852_;
  assign _0878_ = _0569_ & ~(_0593_);
  assign _0879_ = _0565_ & ~(_0878_);
  assign _0880_ = ~(_0879_ ^ _0553_);
  assign _0881_ = _0880_ ^ _0845_;
  assign _0882_ = ~_0881_;
  assign _0883_ = _0882_ ^ _0877_;
  assign _0884_ = ~_0883_;
  assign _0060_ = io_in[10] ? _0884_ : _0841_;
  assign _0885_ = _0838_ & ~(_0835_);
  assign _0886_ = _0831_ & ~(_0839_);
  assign _0887_ = ~(_0886_ | _0885_);
  assign _0888_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0477_ : _0468_;
  assign _0889_ = _1150_ ? _0465_ : _0888_;
  assign _0890_ = _1102_ ? _0465_ : _0889_;
  assign _0891_ = ~(_0890_ ^ _0741_);
  assign _0892_ = ~(_0837_ | _0691_);
  assign _0893_ = _0675_ & ~(_0892_);
  assign _0894_ = ~(_0893_ ^ _0670_);
  assign _0895_ = ~(_0894_ ^ _0891_);
  assign _0896_ = _0895_ ^ _0887_;
  assign _0897_ = _0880_ & _0845_;
  assign _0898_ = _0877_ & ~(_0882_);
  assign _0899_ = ~(_0898_ | _0897_);
  assign _0900_ = _0553_ & ~(_0879_);
  assign _0901_ = _0550_ & ~(_0900_);
  assign _0902_ = _0901_ ^ _0548_;
  assign _0903_ = _0902_ ^ _0845_;
  assign _0904_ = _0903_ ^ _0899_;
  assign _0905_ = ~_0904_;
  assign _0061_ = io_in[10] ? _0905_ : _0896_;
  assign _0906_ = _0895_ | _0839_;
  assign _0907_ = _0906_ | _0825_;
  assign _0908_ = _0808_ & ~(_0907_);
  assign _0909_ = _0830_ & ~(_0906_);
  assign _0910_ = _0894_ & _0891_;
  assign _0911_ = _0885_ & ~(_0895_);
  assign _0912_ = _0911_ | _0910_;
  assign _0913_ = _0912_ | _0909_;
  assign _0914_ = _0913_ | _0908_;
  assign _0915_ = ~_0741_;
  assign _0916_ = _1150_ ? _0784_ : _0801_;
  assign _0917_ = _1102_ ? _0784_ : _0916_;
  assign _0918_ = _0917_ ^ _0915_;
  assign _0919_ = _0736_ ^ _0661_;
  assign _0920_ = _0919_ ^ _0918_;
  assign _0921_ = _0920_ ^ _0914_;
  assign _0922_ = ~_0921_;
  assign _0923_ = ~(_0903_ & _0881_);
  assign _0924_ = _0923_ | ~(_0854_);
  assign _0925_ = ~(_0924_ | _0875_);
  assign _0926_ = _0902_ & _0845_;
  assign _0927_ = _0903_ & _0897_;
  assign _0928_ = _0927_ | _0926_;
  assign _0929_ = _0852_ & ~(_0923_);
  assign _0930_ = _0929_ | _0928_;
  assign _0931_ = _0930_ | _0925_;
  assign _0932_ = _0595_ ^ _0538_;
  assign _0933_ = _0741_ ^ _1688_;
  assign _0934_ = _0933_ ^ _0932_;
  assign _0935_ = _0934_ ^ _0931_;
  assign _0062_ = io_in[10] ? _0935_ : _0922_;
  assign _0937_ = _0919_ & ~(_0918_);
  assign _0938_ = _0914_ & ~(_0920_);
  assign _0939_ = ~(_0938_ | _0937_);
  assign _0940_ = _1150_ ? _0465_ : _0773_;
  assign _0941_ = _1102_ ? _0465_ : _0940_;
  assign _0942_ = ~(_0941_ ^ _0741_);
  assign _0943_ = ~(_0736_ | _0661_);
  assign _0944_ = _0943_ | ~(_0654_);
  assign _0945_ = _0944_ ^ _0647_;
  assign _0947_ = _0945_ ^ _0942_;
  assign _0948_ = ~_0947_;
  assign _0949_ = _0948_ ^ _0939_;
  assign _0950_ = _0933_ & _0932_;
  assign _0951_ = _0934_ & _0931_;
  assign _0952_ = _0951_ | _0950_;
  assign _0953_ = _0595_ | _0538_;
  assign _0954_ = _0953_ & ~(_0530_);
  assign _0955_ = ~(_0954_ ^ _0531_);
  assign _0956_ = _0955_ ^ _0845_;
  assign _0958_ = _0956_ ^ _0952_;
  assign _0063_ = io_in[10] ? _0958_ : _0949_;
  assign _0959_ = _0948_ | _0920_;
  assign _0960_ = _0914_ & ~(_0959_);
  assign _0961_ = _0945_ & _0942_;
  assign _0962_ = _0937_ & ~(_0948_);
  assign _0963_ = _0962_ | _0961_;
  assign _0964_ = _0963_ | _0960_;
  assign _0965_ = _1150_ ? _0465_ : _0759_;
  assign _0966_ = _1102_ ? _0465_ : _0965_;
  assign _0967_ = ~(_0966_ ^ _0741_);
  assign _0968_ = ~(_0736_ | _0662_);
  assign _0969_ = _0656_ & ~(_0968_);
  assign _0970_ = _0969_ ^ _0640_;
  assign _0971_ = ~(_0970_ ^ _0967_);
  assign _0972_ = ~(_0971_ ^ _0964_);
  assign _0973_ = _0955_ & _0845_;
  assign _0974_ = _0956_ & _0950_;
  assign _0975_ = _0974_ | _0973_;
  assign _0976_ = ~(_0956_ & _0934_);
  assign _0977_ = _0931_ & ~(_0976_);
  assign _0978_ = _0977_ | _0975_;
  assign _0979_ = ~(_0595_ | _0539_);
  assign _0980_ = _0533_ & ~(_0979_);
  assign _0981_ = _0980_ ^ _0522_;
  assign _0982_ = _0981_ ^ _0845_;
  assign _0983_ = _0982_ ^ _0978_;
  assign _0053_ = io_in[10] ? _0983_ : _0972_;
  assign _0984_ = _0970_ & _0967_;
  assign _0985_ = _0964_ & ~(_0971_);
  assign _0986_ = _0985_ | _0984_;
  assign _0987_ = _1150_ ? _0465_ : _0478_;
  assign _0988_ = _1102_ ? _0465_ : _0987_;
  assign _0989_ = ~(_0988_ ^ _0741_);
  assign _0990_ = ~(_0969_ | _0640_);
  assign _0991_ = _0637_ & ~(_0990_);
  assign _0992_ = ~(_0991_ ^ _0632_);
  assign _0993_ = _0992_ ^ _0989_;
  assign _0994_ = _0993_ ^ _0986_;
  assign _0995_ = _0981_ & _0845_;
  assign _0996_ = _0982_ & _0978_;
  assign _0997_ = _0996_ | _0995_;
  assign _0998_ = _0980_ | _0522_;
  assign _0999_ = _0998_ & ~(_0518_);
  assign _1000_ = ~(_0999_ ^ _0519_);
  assign _1001_ = _1000_ ^ _0845_;
  assign _1002_ = _1001_ ^ _0997_;
  assign _0054_ = io_in[10] ? _1002_ : _0994_;
  assign _1003_ = _0971_ | ~(_0993_);
  assign _1004_ = _1003_ | _0959_;
  assign _1005_ = _0914_ & ~(_1004_);
  assign _1006_ = _0963_ & ~(_1003_);
  assign _1007_ = _0992_ & _0989_;
  assign _1008_ = _0993_ & _0984_;
  assign _1009_ = _1008_ | _1007_;
  assign _1010_ = _1009_ | _1006_;
  assign _1011_ = _1010_ | _1005_;
  assign _1012_ = _1150_ ? _0465_ : _0811_;
  assign _1013_ = _1102_ ? _0465_ : _1012_;
  assign _1014_ = ~(_1013_ ^ _0741_);
  assign _1015_ = _0663_ & ~(_0736_);
  assign _1016_ = _0658_ & ~(_1015_);
  assign _1017_ = _1016_ ^ _0624_;
  assign _1018_ = ~(_1017_ ^ _1014_);
  assign _1019_ = ~(_1018_ ^ _1011_);
  assign _1020_ = ~(_1001_ & _0982_);
  assign _1021_ = _1020_ | _0976_;
  assign _1022_ = _0931_ & ~(_1021_);
  assign _1023_ = _0975_ & ~(_1020_);
  assign _1024_ = _1000_ & _0845_;
  assign _1025_ = _1001_ & _0995_;
  assign _1026_ = _1025_ | _1024_;
  assign _1027_ = _1026_ | _1023_;
  assign _1028_ = _1027_ | _1022_;
  assign _1029_ = _0540_ & ~(_0595_);
  assign _1030_ = _0535_ & ~(_1029_);
  assign _1031_ = _1030_ ^ _0508_;
  assign _1032_ = _1031_ ^ _0741_;
  assign _1033_ = _1032_ ^ _1028_;
  assign _0055_ = io_in[10] ? _1033_ : _1019_;
  assign _1034_ = _1017_ & _1014_;
  assign _1035_ = _1011_ & ~(_1018_);
  assign _1036_ = _1035_ | _1034_;
  assign _1037_ = ~(_0741_ ^ _0465_);
  assign _1038_ = ~(_1016_ | _0624_);
  assign _1039_ = _0619_ & ~(_1038_);
  assign _1040_ = ~(_1039_ ^ _0614_);
  assign _1041_ = _1040_ ^ _1037_;
  assign _1042_ = _1041_ ^ _1036_;
  assign _1043_ = _1031_ & _0741_;
  assign _1044_ = _1032_ & _1028_;
  assign _1045_ = _1044_ | _1043_;
  assign _1046_ = ~(_1030_ | _0508_);
  assign _1047_ = _0503_ & ~(_1046_);
  assign _1048_ = ~(_1047_ ^ _0500_);
  assign _1049_ = _1048_ ^ _0741_;
  assign _1050_ = _1049_ ^ _1045_;
  assign _0056_ = io_in[10] ? _1050_ : _1042_;
  assign _1051_ = _1040_ & _1037_;
  assign _1052_ = ~_1041_;
  assign _1053_ = _1034_ & ~(_1052_);
  assign _1054_ = _1053_ | _1051_;
  assign _1055_ = _1052_ | _1018_;
  assign _1056_ = _1011_ & ~(_1055_);
  assign _1057_ = _1056_ | _1054_;
  assign _1058_ = _0625_ & ~(_1016_);
  assign _1059_ = _0621_ & ~(_1058_);
  assign _1060_ = ~(_1059_ ^ _0607_);
  assign _1061_ = _1060_ ^ _1037_;
  assign _1062_ = _1061_ ^ _1057_;
  assign _1063_ = _1048_ & _0741_;
  assign _1064_ = _1049_ & _1043_;
  assign _1065_ = _1064_ | _1063_;
  assign _1066_ = ~(_1049_ & _1032_);
  assign _1067_ = _1028_ & ~(_1066_);
  assign _1068_ = _1067_ | _1065_;
  assign _1069_ = _0509_ & ~(_1030_);
  assign _1070_ = _0505_ & ~(_1069_);
  assign _1071_ = ~(_1070_ ^ _0494_);
  assign _1072_ = _1071_ ^ _0741_;
  assign _1073_ = _1072_ ^ _1068_;
  assign _0057_ = io_in[10] ? _1073_ : _1062_;
  assign _1074_ = _1060_ & _1037_;
  assign _1075_ = _1061_ & _1057_;
  assign _1076_ = _1075_ | _1074_;
  assign _1077_ = _0607_ & ~(_1059_);
  assign _1078_ = _0604_ & ~(_1077_);
  assign _1079_ = _1078_ ^ _0603_;
  assign _1080_ = _1079_ ^ _1037_;
  assign _1081_ = _1080_ ^ _1076_;
  assign _1082_ = _1071_ & _0741_;
  assign _1083_ = _1072_ & _1068_;
  assign _1084_ = _1083_ | _1082_;
  assign _1085_ = _0494_ & ~(_1070_);
  assign _1086_ = _0491_ & ~(_1085_);
  assign _1087_ = _1086_ ^ _0489_;
  assign _1088_ = _1087_ ^ _0741_;
  assign _1089_ = _1088_ ^ _1084_;
  assign _0058_ = io_in[10] ? _1089_ : _1081_;
  assign _1090_ = _1079_ & _1037_;
  assign _1092_ = _1080_ & _1074_;
  assign _1093_ = ~(_1092_ | _1090_);
  assign _1094_ = ~(_1080_ & _1061_);
  assign _1095_ = _1054_ & ~(_1094_);
  assign _1096_ = _1093_ & ~(_1095_);
  assign _1097_ = _1094_ | _1055_;
  assign _1098_ = _1010_ & ~(_1097_);
  assign _1099_ = _1096_ & ~(_1098_);
  assign _1100_ = _1097_ | _1004_;
  assign _1101_ = _0914_ & ~(_1100_);
  assign _1103_ = _1099_ & ~(_1101_);
  assign _1104_ = _1037_ ^ _0740_;
  assign _1105_ = ~(_1104_ ^ _1103_);
  assign _1106_ = _1087_ & _0741_;
  assign _1107_ = _1088_ & _1082_;
  assign _1108_ = _1107_ | _1106_;
  assign _1109_ = ~(_1088_ & _1072_);
  assign _1110_ = _1065_ & ~(_1109_);
  assign _1111_ = _1110_ | _1108_;
  assign _1112_ = _1109_ | _1066_;
  assign _1114_ = _1027_ & ~(_1112_);
  assign _1115_ = _1114_ | _1111_;
  assign _1116_ = _1112_ | _1021_;
  assign _1117_ = _0931_ & ~(_1116_);
  assign _1118_ = _1117_ | _1115_;
  assign _1119_ = _0741_ ^ _0599_;
  assign _1120_ = _1119_ ^ _1118_;
  assign _0059_ = io_in[10] ? _1120_ : _1105_;
  assign _1121_ = _0946_ & ~(_0957_);
  assign _1122_ = ~_1121_;
  assign _1124_ = ~(_0741_ ^ _0583_);
  assign _1125_ = _1124_ ^ _0870_;
  assign _1126_ = _1125_ ^ _0915_;
  assign _0036_ = _1122_ & ~(_1126_);
  assign _1127_ = _0871_ ^ _0868_;
  assign _0044_ = _1122_ & ~(_1127_);
  assign _1128_ = _0873_ ^ _0864_;
  assign _0045_ = _1122_ & ~(_1128_);
  assign _1129_ = _0864_ & ~(_0873_);
  assign _1130_ = _0861_ & ~(_1129_);
  assign _1132_ = _1130_ ^ _0859_;
  assign _0046_ = _1122_ & ~(_1132_);
  assign _1133_ = _0875_ ^ _0853_;
  assign _0047_ = _1122_ & ~(_1133_);
  assign _1134_ = _0875_ | ~(_0853_);
  assign _1135_ = _1134_ & ~(_0849_);
  assign _1136_ = _1135_ ^ _0850_;
  assign _0048_ = _1122_ & ~(_1136_);
  assign _0049_ = _1122_ & ~(_0883_);
  assign _0050_ = _1122_ & ~(_0904_);
  assign _1138_ = io_in[0] & ~(io_in[10]);
  assign _0051_ = _1121_ ? _1138_ : _0935_;
  assign _1139_ = io_in[1] & ~(io_in[10]);
  assign _0052_ = _1121_ ? _1139_ : _0958_;
  assign _1140_ = io_in[2] & ~(io_in[10]);
  assign _0037_ = _1121_ ? _1140_ : _0983_;
  assign _1141_ = io_in[3] & ~(io_in[10]);
  assign _0038_ = _1121_ ? _1141_ : _1002_;
  assign _1142_ = io_in[4] & ~(io_in[10]);
  assign _0039_ = _1121_ ? _1142_ : _1033_;
  assign _1144_ = io_in[5] & ~(io_in[10]);
  assign _0040_ = _1121_ ? _1144_ : _1050_;
  assign _1145_ = io_in[6] & ~(io_in[10]);
  assign _0041_ = _1121_ ? _1145_ : _1073_;
  assign _1146_ = io_in[7] & ~(io_in[10]);
  assign _0042_ = _1121_ ? _1146_ : _1089_;
  assign _1147_ = io_in[8] & ~(io_in[10]);
  assign _0043_ = _1121_ ? _1147_ : _1120_;
  assign _1148_ = _0803_ ^ _0915_;
  assign _1149_ = _1148_ ^ _0783_;
  assign _1151_ = _1149_ ^ _0741_;
  assign _0002_ = _1122_ & ~(_1151_);
  assign _1152_ = _0804_ ^ _0779_;
  assign _0010_ = _1122_ & ~(_1152_);
  assign _1153_ = ~_0767_;
  assign _1154_ = _0806_ ^ _1153_;
  assign _0011_ = _1122_ & ~(_1154_);
  assign _1155_ = _1153_ & ~(_0806_);
  assign _1156_ = _0764_ & ~(_1155_);
  assign _1157_ = _1156_ ^ _0748_;
  assign _0012_ = _1122_ & ~(_1157_);
  assign _1159_ = _0816_ ^ _0808_;
  assign _0013_ = _1122_ & ~(_1159_);
  assign _1160_ = _0808_ & ~(_0816_);
  assign _1161_ = _1160_ | _0827_;
  assign _1162_ = _1161_ ^ _0824_;
  assign _0014_ = _1122_ & ~(_1162_);
  assign _0015_ = _1122_ & ~(_0840_);
  assign _0016_ = _0896_ & ~(_1121_);
  assign _0017_ = _1122_ & ~(_0921_);
  assign _0018_ = _0949_ & ~(_1121_);
  assign _1164_ = io_in[0] & io_in[10];
  assign _0003_ = _1121_ ? _1164_ : _0972_;
  assign _1165_ = io_in[1] & io_in[10];
  assign _0004_ = _1121_ ? _1165_ : _0994_;
  assign _1166_ = io_in[2] & io_in[10];
  assign _0005_ = _1121_ ? _1166_ : _1019_;
  assign _1167_ = io_in[3] & io_in[10];
  assign _0006_ = _1121_ ? _1167_ : _1042_;
  assign _1168_ = io_in[4] & io_in[10];
  assign _0007_ = _1121_ ? _1168_ : _1062_;
  assign _0008_ = _1081_ & ~(_1121_);
  assign _0009_ = _1105_ & ~(_1121_);
  assign _1170_ = ~_0740_;
  assign _1171_ = ~_0894_;
  assign _1172_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1171_ : _0746_;
  assign _1173_ = ~_0992_;
  assign _1174_ = ~(_1078_ ^ _0603_);
  assign _1175_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1174_ : _1173_;
  assign _1176_ = _1150_ ? _1175_ : _1172_;
  assign _1178_ = _1102_ ? _1170_ : _1176_;
  assign _1179_ = _1178_ ^ _0915_;
  assign _1180_ = _0435_ ^ _0253_;
  assign _1181_ = _1180_ ^ _0430_;
  assign _1182_ = _1181_ ^ _0253_;
  assign _1183_ = _1182_ ^ _1179_;
  assign _1184_ = _1183_ ^ _0915_;
  assign _0019_ = _1122_ & ~(_1184_);
  assign _1185_ = _1178_ ? _0741_ : _1182_;
  assign _1186_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0919_ : _0815_;
  assign _1188_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0740_ : _1017_;
  assign _1189_ = _1150_ ? _1188_ : _1186_;
  assign _1190_ = _1102_ ? _0740_ : _1189_;
  assign _1191_ = _1190_ ^ _0741_;
  assign _1192_ = ~(_0436_ ^ _0426_);
  assign _1193_ = ~_1192_;
  assign _1194_ = _1193_ ^ _1191_;
  assign _1195_ = ~(_1194_ ^ _1185_);
  assign _0027_ = _1121_ ? _1091_ : _1195_;
  assign _1196_ = _1185_ & ~(_1194_);
  assign _1198_ = _1191_ & ~(_1193_);
  assign _1199_ = _1198_ | _1196_;
  assign _1200_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0945_ : _0823_;
  assign _1201_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0740_ : _1040_;
  assign _1202_ = _1150_ ? _1201_ : _1200_;
  assign _1203_ = _1102_ ? _0740_ : _1202_;
  assign _1204_ = _1203_ ^ _0741_;
  assign _1205_ = _0438_ ^ _0415_;
  assign _1206_ = ~(_1205_ ^ _1204_);
  assign _1207_ = _1206_ ^ _1199_;
  assign _0028_ = _1122_ & ~(_1207_);
  assign _1209_ = _1205_ & _1204_;
  assign _1210_ = _1199_ & ~(_1206_);
  assign _1211_ = ~(_1210_ | _1209_);
  assign _1212_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0970_ : _0838_;
  assign _1213_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0740_ : _1060_;
  assign _1214_ = _1150_ ? _1213_ : _1212_;
  assign _1215_ = _1102_ ? _0740_ : _1214_;
  assign _1216_ = _1215_ ^ _0741_;
  assign _1217_ = ~(_1216_ ^ _0791_);
  assign _1219_ = _1217_ ^ _1211_;
  assign _0029_ = _1121_ ? _1091_ : _1219_;
  assign _1220_ = _1217_ | _1206_;
  assign _1221_ = _1199_ & ~(_1220_);
  assign _1222_ = _1216_ & _0791_;
  assign _1223_ = _1209_ & ~(_1217_);
  assign _1224_ = _1223_ | _1222_;
  assign _1225_ = _1224_ | _1221_;
  assign _1226_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0992_ : _0894_;
  assign _1227_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _0740_ : _1079_;
  assign _1229_ = _1150_ ? _1227_ : _1226_;
  assign _1230_ = _1102_ ? _0740_ : _1229_;
  assign _1231_ = ~(_1230_ ^ _0741_);
  assign _1232_ = _1231_ ^ _0770_;
  assign _1233_ = ~(_1232_ ^ _1225_);
  assign _0030_ = _1121_ ? _1091_ : _1233_;
  assign _1234_ = _0770_ & ~(_1231_);
  assign _1235_ = _1232_ | ~(_1225_);
  assign _1236_ = _1235_ & ~(_1234_);
  assign _1237_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1017_ : _0919_;
  assign _1239_ = _1150_ ? _0740_ : _1237_;
  assign _1240_ = _1102_ ? _0740_ : _1239_;
  assign _1241_ = _1240_ ^ _0741_;
  assign _1242_ = ~(_1241_ ^ _0754_);
  assign _1243_ = _1242_ ^ _1236_;
  assign _0031_ = _1121_ ? _1091_ : _1243_;
  assign _1244_ = _1242_ | _1232_;
  assign _1245_ = _1225_ & ~(_1244_);
  assign _1246_ = _1234_ & ~(_1242_);
  assign _1247_ = _1241_ & _0754_;
  assign _1249_ = _1247_ | _1246_;
  assign _1250_ = _1249_ | _1245_;
  assign _1251_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1040_ : _0945_;
  assign _1252_ = _1150_ ? _0740_ : _1251_;
  assign _1253_ = _1102_ ? _0740_ : _1252_;
  assign _1254_ = _1253_ ^ _0741_;
  assign _1255_ = ~(_1254_ ^ _0471_);
  assign \mchip.cordic_module.next_x [6] = ~(_1255_ ^ _1250_);
  assign _0032_ = \mchip.cordic_module.next_x [6] & ~(_1121_);
  assign _1256_ = _1254_ & _0471_;
  assign _1258_ = _1250_ & ~(_1255_);
  assign _1259_ = ~(_1258_ | _1256_);
  assign _1260_ = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2] ? _1060_ : _0970_;
  assign _1261_ = _1150_ ? _0740_ : _1260_;
  assign _1262_ = _1102_ ? _0740_ : _1261_;
  assign _1263_ = _1262_ ^ _0741_;
  assign _1264_ = ~(_1263_ ^ _0787_);
  assign \mchip.cordic_module.next_x [7] = _1264_ ^ _1259_;
  assign _0033_ = _1121_ ? _1091_ : \mchip.cordic_module.next_x [7];
  assign _1265_ = _1264_ | _1255_;
  assign _1267_ = _1265_ | _1244_;
  assign _1268_ = _1225_ & ~(_1267_);
  assign _1269_ = _1249_ & ~(_1265_);
  assign _1270_ = _1263_ & _0787_;
  assign _1271_ = _1256_ & ~(_1264_);
  assign _1272_ = _1271_ | _1270_;
  assign _1273_ = _1272_ | _1269_;
  assign _1274_ = _1273_ | _1268_;
  assign _1275_ = _1150_ ? _1170_ : _1175_;
  assign _1276_ = _1102_ ? _1170_ : _1275_;
  assign _1278_ = _1276_ ^ _0741_;
  assign _1279_ = _1278_ ^ _0769_;
  assign \mchip.cordic_module.next_x [8] = ~(_1279_ ^ _1274_);
  assign _0034_ = _1121_ ? _1091_ : \mchip.cordic_module.next_x [8];
  assign _1280_ = _0769_ & ~(_1278_);
  assign _1281_ = _1274_ & ~(_1279_);
  assign _1282_ = ~(_1281_ | _1280_);
  assign _1283_ = _1150_ ? _0740_ : _1188_;
  assign _1284_ = _1102_ ? _0740_ : _1283_;
  assign _1285_ = _1284_ ^ _0741_;
  assign _1287_ = _1285_ ^ _0751_;
  assign _1288_ = _1287_ ^ _1282_;
  assign \mchip.cordic_module.next_x [9] = ~_1288_;
  assign _0035_ = _1122_ & ~(_1288_);
  assign _1289_ = ~_1287_;
  assign _1290_ = _1289_ | _1279_;
  assign _1291_ = _1274_ & ~(_1290_);
  assign _1292_ = _1285_ & _0751_;
  assign _1293_ = _1280_ & ~(_1289_);
  assign _1294_ = _1293_ | _1292_;
  assign _1296_ = _1294_ | _1291_;
  assign _1297_ = _1150_ ? _0740_ : _1201_;
  assign _1298_ = _1102_ ? _0740_ : _1297_;
  assign _1299_ = _1298_ ^ _0741_;
  assign _1300_ = _1299_ ^ _0468_;
  assign \mchip.cordic_module.next_x [10] = _1300_ ^ _1296_;
  assign _1301_ = io_in[5] | ~(io_in[10]);
  assign _0020_ = _1121_ ? _1301_ : \mchip.cordic_module.next_x [10];
  assign _1302_ = _1299_ & _0468_;
  assign _1303_ = _1300_ & _1296_;
  assign _1305_ = _1303_ | _1302_;
  assign _1306_ = _1150_ ? _0740_ : _1213_;
  assign _1307_ = _1102_ ? _0740_ : _1306_;
  assign _1308_ = _1307_ ^ _0741_;
  assign _1309_ = _1308_ ^ _0799_;
  assign \mchip.cordic_module.next_x [11] = _1309_ ^ _1305_;
  assign _1310_ = io_in[6] | ~(io_in[10]);
  assign _0021_ = _1121_ ? _1310_ : \mchip.cordic_module.next_x [11];
  assign _1311_ = ~(_1309_ & _1300_);
  assign _1312_ = _1311_ | _1290_;
  assign _1314_ = _1274_ & ~(_1312_);
  assign _1315_ = _1294_ & ~(_1311_);
  assign _1316_ = _1308_ & _0799_;
  assign _1317_ = _1309_ & _1302_;
  assign _1318_ = _1317_ | _1316_;
  assign _1319_ = _1318_ | _1315_;
  assign _1320_ = _1319_ | _1314_;
  assign _1321_ = _1150_ ? _0740_ : _1227_;
  assign _1322_ = _1102_ ? _0740_ : _1321_;
  assign _1323_ = _1322_ ^ _0741_;
  assign _1325_ = _1323_ ^ _0772_;
  assign \mchip.cordic_module.next_x [12] = _1325_ ^ _1320_;
  assign _1326_ = io_in[7] & io_in[10];
  assign _0022_ = _1121_ ? _1326_ : \mchip.cordic_module.next_x [12];
  assign _1327_ = _1323_ & _0772_;
  assign _1328_ = _1325_ & _1320_;
  assign _1329_ = _1328_ | _1327_;
  assign _1330_ = _0741_ ^ _0740_;
  assign _1331_ = _1330_ ^ _0758_;
  assign \mchip.cordic_module.next_x [13] = _1331_ ^ _1329_;
  assign _1333_ = io_in[8] & io_in[10];
  assign _0023_ = _1121_ ? _1333_ : \mchip.cordic_module.next_x [13];
  assign _1334_ = _1330_ & _0758_;
  assign _1335_ = _1331_ & _1327_;
  assign _1336_ = _1335_ | _1334_;
  assign _1337_ = ~(_1331_ & _1325_);
  assign _1338_ = _1320_ & ~(_1337_);
  assign _1339_ = _1338_ | _1336_;
  assign _1340_ = _1330_ ^ _0477_;
  assign \mchip.cordic_module.next_x [14] = _1340_ ^ _1339_;
  assign _1342_ = io_in[9] | ~(io_in[10]);
  assign _0024_ = _1121_ ? _1342_ : \mchip.cordic_module.next_x [14];
  assign _1343_ = _1330_ & _0477_;
  assign _1344_ = _1340_ & _1339_;
  assign _1345_ = _1344_ | _1343_;
  assign _1346_ = _1330_ ^ _0810_;
  assign \mchip.cordic_module.next_x [15] = _1346_ ^ _1345_;
  assign _0025_ = \mchip.cordic_module.next_x [15] & ~(_1121_);
  assign _1347_ = _1330_ & _0810_;
  assign _1348_ = _1346_ & _1343_;
  assign _1350_ = ~(_1348_ | _1347_);
  assign _1351_ = ~(_1346_ & _1340_);
  assign _1352_ = _1336_ & ~(_1351_);
  assign _1353_ = _1350_ & ~(_1352_);
  assign _1354_ = _1351_ | _1337_;
  assign _1355_ = _1319_ & ~(_1354_);
  assign _1356_ = _1353_ & ~(_1355_);
  assign _1357_ = _1354_ | _1312_;
  assign _1358_ = _1274_ & ~(_1357_);
  assign _1359_ = _1356_ & ~(_1358_);
  assign _1361_ = _1330_ ^ _0465_;
  assign _1362_ = _1361_ ^ _1359_;
  assign \mchip.cordic_module.next_x [16] = ~_1362_;
  assign _0026_ = _1122_ & ~(_1362_);
  assign _2134_[1] = ~(_1684_ & _1659_);
  assign _2134_[2] = _1686_ ^ _0957_;
  assign \mchip.cordic_module.done  = _0098_ & ~(io_in[13]);
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0064_ <= 1'h0;
    else if (_0001_) _0064_ <= _0036_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0065_ <= 1'h0;
    else if (_0001_) _0065_ <= _0044_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0066_ <= 1'h0;
    else if (_0001_) _0066_ <= _0045_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0067_ <= 1'h0;
    else if (_0001_) _0067_ <= _0046_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0068_ <= 1'h0;
    else if (_0001_) _0068_ <= _0047_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0069_ <= 1'h0;
    else if (_0001_) _0069_ <= _0048_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0070_ <= 1'h0;
    else if (_0001_) _0070_ <= _0049_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0071_ <= 1'h0;
    else if (_0001_) _0071_ <= _0050_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0072_ <= 1'h0;
    else if (_0001_) _0072_ <= _0051_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0073_ <= 1'h0;
    else if (_0001_) _0073_ <= _0052_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0074_ <= 1'h0;
    else if (_0001_) _0074_ <= _0037_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0075_ <= 1'h0;
    else if (_0001_) _0075_ <= _0038_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0076_ <= 1'h0;
    else if (_0001_) _0076_ <= _0039_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0077_ <= 1'h0;
    else if (_0001_) _0077_ <= _0040_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0078_ <= 1'h0;
    else if (_0001_) _0078_ <= _0041_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0079_ <= 1'h0;
    else if (_0001_) _0079_ <= _0042_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0080_ <= 1'h0;
    else if (_0001_) _0080_ <= _0043_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0081_ <= 1'h0;
    else if (_0001_) _0081_ <= _0002_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0082_ <= 1'h0;
    else if (_0001_) _0082_ <= _0010_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0083_ <= 1'h0;
    else if (_0001_) _0083_ <= _0011_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0084_ <= 1'h0;
    else if (_0001_) _0084_ <= _0012_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0085_ <= 1'h0;
    else if (_0001_) _0085_ <= _0013_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0086_ <= 1'h0;
    else if (_0001_) _0086_ <= _0014_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0087_ <= 1'h0;
    else if (_0001_) _0087_ <= _0015_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0088_ <= 1'h0;
    else if (_0001_) _0088_ <= _0016_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0089_ <= 1'h0;
    else if (_0001_) _0089_ <= _0017_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0090_ <= 1'h0;
    else if (_0001_) _0090_ <= _0018_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0091_ <= 1'h0;
    else if (_0001_) _0091_ <= _0003_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0092_ <= 1'h0;
    else if (_0001_) _0092_ <= _0004_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0093_ <= 1'h0;
    else if (_0001_) _0093_ <= _0005_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0094_ <= 1'h0;
    else if (_0001_) _0094_ <= _0006_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0095_ <= 1'h0;
    else if (_0001_) _0095_ <= _0007_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0096_ <= 1'h0;
    else if (_0001_) _0096_ <= _0008_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0097_ <= 1'h0;
    else if (_0001_) _0097_ <= _0009_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0098_ <= 1'h0;
    else if (!_0001_) _0098_ <= 1'h1;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0099_ <= 1'h0;
    else if (!\mchip.cordic_module.done ) _0099_ <= \mchip.cordic_module.fstage_0.stage_0.step_ctr [2];
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0100_ <= 1'h0;
    else if (!\mchip.cordic_module.done ) _0100_ <= _2134_[1];
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0101_ <= 1'h0;
    else if (!\mchip.cordic_module.done ) _0101_ <= _2134_[2];
  reg \mchip.cordic_module.out1_reg[6] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out1_reg[6]  <= _0060_;
  assign \mchip.cordic_module.out1 [6] = \mchip.cordic_module.out1_reg[6] ;
  reg \mchip.cordic_module.out1_reg[7] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out1_reg[7]  <= _0061_;
  assign \mchip.cordic_module.out1 [7] = \mchip.cordic_module.out1_reg[7] ;
  reg \mchip.cordic_module.out1_reg[8] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out1_reg[8]  <= _0062_;
  assign \mchip.cordic_module.out1 [8] = \mchip.cordic_module.out1_reg[8] ;
  reg \mchip.cordic_module.out1_reg[9] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out1_reg[9]  <= _0063_;
  assign \mchip.cordic_module.out1 [9] = \mchip.cordic_module.out1_reg[9] ;
  reg \mchip.cordic_module.out1_reg[10] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out1_reg[10]  <= _0053_;
  assign \mchip.cordic_module.out1 [10] = \mchip.cordic_module.out1_reg[10] ;
  reg \mchip.cordic_module.out1_reg[11] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out1_reg[11]  <= _0054_;
  assign \mchip.cordic_module.out1 [11] = \mchip.cordic_module.out1_reg[11] ;
  reg \mchip.cordic_module.out1_reg[12] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out1_reg[12]  <= _0055_;
  assign \mchip.cordic_module.out1 [12] = \mchip.cordic_module.out1_reg[12] ;
  reg \mchip.cordic_module.out1_reg[13] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out1_reg[13]  <= _0056_;
  assign \mchip.cordic_module.out1 [13] = \mchip.cordic_module.out1_reg[13] ;
  reg \mchip.cordic_module.out1_reg[14] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out1_reg[14]  <= _0057_;
  assign \mchip.cordic_module.out1 [14] = \mchip.cordic_module.out1_reg[14] ;
  reg \mchip.cordic_module.out1_reg[15] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out1_reg[15]  <= _0058_;
  assign \mchip.cordic_module.out1 [15] = \mchip.cordic_module.out1_reg[15] ;
  reg \mchip.cordic_module.out1_reg[16] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out1_reg[16]  <= _0059_;
  assign \mchip.cordic_module.out1 [16] = \mchip.cordic_module.out1_reg[16] ;
  reg \mchip.cordic_module.out2_reg[6] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out2_reg[6]  <= \mchip.cordic_module.next_x [6];
  assign \mchip.cordic_module.out2 [6] = \mchip.cordic_module.out2_reg[6] ;
  reg \mchip.cordic_module.out2_reg[7] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out2_reg[7]  <= \mchip.cordic_module.next_x [7];
  assign \mchip.cordic_module.out2 [7] = \mchip.cordic_module.out2_reg[7] ;
  reg \mchip.cordic_module.out2_reg[8] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out2_reg[8]  <= \mchip.cordic_module.next_x [8];
  assign \mchip.cordic_module.out2 [8] = \mchip.cordic_module.out2_reg[8] ;
  reg \mchip.cordic_module.out2_reg[9] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out2_reg[9]  <= \mchip.cordic_module.next_x [9];
  assign \mchip.cordic_module.out2 [9] = \mchip.cordic_module.out2_reg[9] ;
  reg \mchip.cordic_module.out2_reg[10] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out2_reg[10]  <= \mchip.cordic_module.next_x [10];
  assign \mchip.cordic_module.out2 [10] = \mchip.cordic_module.out2_reg[10] ;
  reg \mchip.cordic_module.out2_reg[11] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out2_reg[11]  <= \mchip.cordic_module.next_x [11];
  assign \mchip.cordic_module.out2 [11] = \mchip.cordic_module.out2_reg[11] ;
  reg \mchip.cordic_module.out2_reg[12] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out2_reg[12]  <= \mchip.cordic_module.next_x [12];
  assign \mchip.cordic_module.out2 [12] = \mchip.cordic_module.out2_reg[12] ;
  reg \mchip.cordic_module.out2_reg[13] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out2_reg[13]  <= \mchip.cordic_module.next_x [13];
  assign \mchip.cordic_module.out2 [13] = \mchip.cordic_module.out2_reg[13] ;
  reg \mchip.cordic_module.out2_reg[14] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out2_reg[14]  <= \mchip.cordic_module.next_x [14];
  assign \mchip.cordic_module.out2 [14] = \mchip.cordic_module.out2_reg[14] ;
  reg \mchip.cordic_module.out2_reg[15] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out2_reg[15]  <= \mchip.cordic_module.next_x [15];
  assign \mchip.cordic_module.out2 [15] = \mchip.cordic_module.out2_reg[15] ;
  reg \mchip.cordic_module.out2_reg[16] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (_0000_) \mchip.cordic_module.out2_reg[16]  <= \mchip.cordic_module.next_x [16];
  assign \mchip.cordic_module.out2 [16] = \mchip.cordic_module.out2_reg[16] ;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0102_ <= 1'h0;
    else if (_0001_) _0102_ <= _0019_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0103_ <= 1'h0;
    else if (_0001_) _0103_ <= _0027_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0104_ <= 1'h0;
    else if (_0001_) _0104_ <= _0028_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0105_ <= 1'h0;
    else if (_0001_) _0105_ <= _0029_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0106_ <= 1'h0;
    else if (_0001_) _0106_ <= _0030_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0107_ <= 1'h0;
    else if (_0001_) _0107_ <= _0031_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0108_ <= 1'h0;
    else if (_0001_) _0108_ <= _0032_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0109_ <= 1'h0;
    else if (_0001_) _0109_ <= _0033_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0110_ <= 1'h0;
    else if (_0001_) _0110_ <= _0034_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0111_ <= 1'h0;
    else if (_0001_) _0111_ <= _0035_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0112_ <= 1'h0;
    else if (_0001_) _0112_ <= _0020_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0113_ <= 1'h0;
    else if (_0001_) _0113_ <= _0021_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0114_ <= 1'h0;
    else if (_0001_) _0114_ <= _0022_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0115_ <= 1'h0;
    else if (_0001_) _0115_ <= _0023_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0116_ <= 1'h0;
    else if (_0001_) _0116_ <= _0024_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0117_ <= 1'h0;
    else if (_0001_) _0117_ <= _0025_;
  /* \always_ff  = 32'd1 */
  /* src = "d13_thomaska_cordic/src/toplevel_chip.v:10.13-15.6|d13_thomaska_cordic/src/tt_um_cordic.sv:111.5-137.8|d13_thomaska_cordic/src/chip.sv:10.18-11.99" */
  always @(posedge io_in[12])
    if (io_in[13]) _0118_ <= 1'h0;
    else if (_0001_) _0118_ <= _0026_;
  assign _2134_[0] = \mchip.cordic_module.fstage_0.stage_0.step_ctr [2];
  assign io_out[13:11] = { 2'h0, \mchip.cordic_module.done  };
  assign \mchip.clock  = io_in[12];
  assign \mchip.cordic_module.clk  = io_in[12];
  assign \mchip.cordic_module.fstage_0.clk  = io_in[12];
  assign \mchip.cordic_module.fstage_0.mode  = io_in[10];
  assign \mchip.cordic_module.fstage_0.out_x  = { \mchip.cordic_module.next_x [16:6], 6'h00 };
  assign \mchip.cordic_module.fstage_0.reset  = io_in[13];
  assign \mchip.cordic_module.fstage_0.stage_0.clk  = io_in[12];
  assign \mchip.cordic_module.fstage_0.stage_0.mode  = io_in[10];
  assign \mchip.cordic_module.fstage_0.stage_0.reset  = io_in[13];
  assign { \mchip.cordic_module.fstage_0.stage_0.step_ctr [4:3], \mchip.cordic_module.fstage_0.stage_0.step_ctr [1:0] } = 4'h0;
  assign \mchip.cordic_module.fstage_0.stage_0.subx.in_b [15:0] = 16'h0000;
  assign \mchip.cordic_module.fstage_0.stage_0.suby.in_b [15:0] = 16'h0000;
  assign \mchip.cordic_module.fstage_0.stage_0.subz.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_0.subz.inside_add.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_0.subz.modified_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_0.x_coeff [15:0] = 16'h0000;
  assign \mchip.cordic_module.fstage_0.stage_0.y_coeff [15:0] = 16'h0000;
  assign \mchip.cordic_module.fstage_0.stage_0.z_coeff  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_1.clk  = io_in[12];
  assign \mchip.cordic_module.fstage_0.stage_1.mode  = io_in[10];
  assign \mchip.cordic_module.fstage_0.stage_1.reset  = io_in[13];
  assign \mchip.cordic_module.fstage_0.stage_1.step_ctr  = { 2'h0, \mchip.cordic_module.fstage_0.stage_0.step_ctr [2], 2'h1 };
  assign \mchip.cordic_module.fstage_0.stage_1.subx.inside_add.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_1.subx.modified_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_1.suby.inside_add.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_1.suby.modified_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_1.subz.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_1.subz.inside_add.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_1.subz.modified_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_1.z_coeff  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_2.clk  = io_in[12];
  assign \mchip.cordic_module.fstage_0.stage_2.mode  = io_in[10];
  assign \mchip.cordic_module.fstage_0.stage_2.reset  = io_in[13];
  assign \mchip.cordic_module.fstage_0.stage_2.step_ctr  = { 2'h0, \mchip.cordic_module.fstage_0.stage_0.step_ctr [2], 2'h2 };
  assign \mchip.cordic_module.fstage_0.stage_2.subx.inside_add.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_2.subx.modified_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_2.suby.inside_add.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_2.suby.modified_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_2.subz.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_2.subz.inside_add.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_2.subz.modified_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_2.z_coeff  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_3.clk  = io_in[12];
  assign \mchip.cordic_module.fstage_0.stage_3.mode  = io_in[10];
  assign \mchip.cordic_module.fstage_0.stage_3.out_x  = { \mchip.cordic_module.next_x [16:6], 6'h00 };
  assign \mchip.cordic_module.fstage_0.stage_3.reset  = io_in[13];
  assign \mchip.cordic_module.fstage_0.stage_3.step_ctr  = { 2'h0, \mchip.cordic_module.fstage_0.stage_0.step_ctr [2], 2'h3 };
  assign \mchip.cordic_module.fstage_0.stage_3.subx.inside_add.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_3.subx.inside_add.out  = { \mchip.cordic_module.next_x [16:6], 6'h00 };
  assign \mchip.cordic_module.fstage_0.stage_3.subx.modified_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_3.subx.out  = { \mchip.cordic_module.next_x [16:6], 6'h00 };
  assign \mchip.cordic_module.fstage_0.stage_3.suby.inside_add.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_3.suby.modified_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_3.subz.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_3.subz.inside_add.in_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_3.subz.modified_b  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.stage_3.z_coeff  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.step_ctr  = { 2'h0, \mchip.cordic_module.fstage_0.stage_0.step_ctr [2], 2'h0 };
  assign \mchip.cordic_module.fstage_0.z_coeff_0  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.z_coeff_1  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.z_coeff_2  = 17'h00000;
  assign \mchip.cordic_module.fstage_0.z_coeff_3  = 17'h00000;
  assign \mchip.cordic_module.in_val  = io_in[9:0];
  assign \mchip.cordic_module.in_val_32768  = { io_in[8:0], 8'h00 };
  assign \mchip.cordic_module.in_x_32768  = { 2'h0, io_in[9:5], 10'h000 };
  assign \mchip.cordic_module.in_y_32768  = { 2'h0, io_in[4:0], 10'h000 };
  assign \mchip.cordic_module.init_x  = 17'h00000;
  assign \mchip.cordic_module.init_y  = 17'h00000;
  assign \mchip.cordic_module.init_z  = 17'h00000;
  assign \mchip.cordic_module.mode_toggle  = io_in[10];
  assign \mchip.cordic_module.next_x [5:0] = 6'h00;
  assign \mchip.cordic_module.out1 [5:0] = 6'h00;
  assign \mchip.cordic_module.out2 [5:0] = 6'h00;
  assign \mchip.cordic_module.out_toggle  = io_in[11];
  assign \mchip.cordic_module.rst  = io_in[13];
  assign \mchip.cordic_module.step_ctr_4  = { 2'h0, \mchip.cordic_module.fstage_0.stage_0.step_ctr [2], 2'h0 };
  assign \mchip.cordic_module.val  = io_out[10:0];
  assign \mchip.cordic_module.z_coeff[0]  = 17'h06488;
  assign \mchip.cordic_module.z_coeff[10]  = 17'h00020;
  assign \mchip.cordic_module.z_coeff[11]  = 17'h00010;
  assign \mchip.cordic_module.z_coeff[12]  = 17'h00008;
  assign \mchip.cordic_module.z_coeff[13]  = 17'h00004;
  assign \mchip.cordic_module.z_coeff[14]  = 17'h00002;
  assign \mchip.cordic_module.z_coeff[15]  = 17'h00001;
  assign \mchip.cordic_module.z_coeff[1]  = 17'h03b59;
  assign \mchip.cordic_module.z_coeff[2]  = 17'h01f5b;
  assign \mchip.cordic_module.z_coeff[3]  = 17'h00feb;
  assign \mchip.cordic_module.z_coeff[4]  = 17'h007fd;
  assign \mchip.cordic_module.z_coeff[5]  = 17'h00400;
  assign \mchip.cordic_module.z_coeff[6]  = 17'h00200;
  assign \mchip.cordic_module.z_coeff[7]  = 17'h00100;
  assign \mchip.cordic_module.z_coeff[8]  = 17'h00080;
  assign \mchip.cordic_module.z_coeff[9]  = 17'h00040;
  assign \mchip.cordic_module.z_coeff_group[0]  = 17'h00000;
  assign \mchip.cordic_module.z_coeff_group[1]  = 17'h00000;
  assign \mchip.cordic_module.z_coeff_group[2]  = 17'h00000;
  assign \mchip.cordic_module.z_coeff_group[3]  = 17'h00000;
  assign \mchip.io_in  = io_in[11:0];
  assign \mchip.io_out  = { \mchip.cordic_module.done , io_out[10:0] };
  assign \mchip.reset  = io_in[13];
endmodule
